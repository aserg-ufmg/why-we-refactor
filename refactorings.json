[
    {
        "id": 1105075,
        "repository": "https://github.com/JetBrains/MPS.git",
        "sha1": "2bcd05a827ead109a56cb1f79a83dcd332f42888",
        "author": "Mihail Muhin",
        "time": "6/7/15 7:36 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>public getLanguage(id SLanguageId, langName String, version int) : SLanguage</code> inlined to <code>public getLanguage(id SLanguageId, langName String) : SLanguage</code> in class <code>jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory</code>"
        ]
    },
    {
        "id": 1105586,
        "repository": "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector.git",
        "sha1": "e235f884f2e0bc258da77b9c80492ad33386fa86",
        "author": "Marvin Arnold",
        "time": "6/7/15 9:44 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createCellSignalTable(database SQLiteDatabase) : void</code> extracted from <code>public onCreate(database SQLiteDatabase) : void</code> in class <code>com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper</code>",
            "<b>Extract Method</b> <code>private createCellTable(database SQLiteDatabase) : void</code> extracted from <code>public onCreate(database SQLiteDatabase) : void</code> in class <code>com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper</code>",
            "<b>Extract Method</b> <code>private createDefaultMCCTable(database SQLiteDatabase) : void</code> extracted from <code>public onCreate(database SQLiteDatabase) : void</code> in class <code>com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper</code>",
            "<b>Extract Method</b> <code>private createEventLogTable(database SQLiteDatabase) : void</code> extracted from <code>public onCreate(database SQLiteDatabase) : void</code> in class <code>com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper</code>",
            "<b>Extract Method</b> <code>private createLocationTable(database SQLiteDatabase) : void</code> extracted from <code>public onCreate(database SQLiteDatabase) : void</code> in class <code>com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper</code>",
            "<b>Extract Method</b> <code>private createOpenCellIDTable(database SQLiteDatabase) : void</code> extracted from <code>public onCreate(database SQLiteDatabase) : void</code> in class <code>com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper</code>",
            "<b>Extract Method</b> <code>private createSilentSmsTable(database SQLiteDatabase) : void</code> extracted from <code>public onCreate(database SQLiteDatabase) : void</code> in class <code>com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper</code>"
        ]
    },
    {
        "id": 1102793,
        "repository": "https://github.com/crashub/crash.git",
        "sha1": "2801269c7e47bd6e243612654a74cee809d20959",
        "author": "Oliver Trosien",
        "time": "6/7/15 11:15 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair</code> extracted from <code>public loadKeys() : Iterable&lt;KeyPair&gt;</code> in class <code>org.crsh.auth.FilePublicKeyProvider</code>"
        ]
    },
    {
        "id": 1104750,
        "repository": "https://github.com/vaadin/vaadin.git",
        "sha1": "b0d5315e8ba95d099f93dc2d16339033a6525b59",
        "author": "Teppo Kurki",
        "time": "6/8/15 4:19 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private remove() : void</code> inlined to <code>public testColExpandRatioIsForgotten() : void</code> in class <code>com.vaadin.ui.GridLayoutExpandRatioTest</code>"
        ]
    },
    {
        "id": 1103658,
        "repository": "https://github.com/glyptodon/guacamole-client.git",
        "sha1": "ebb483320d971ff4d9e947309668f5da1fcd3d23",
        "author": "Michael Jumper",
        "time": "6/8/15 5:46 AM",
        "refactorings": [
            "<b>Move Multiple Attributes</b> from class <code>org.glyptodon.guacamole.auth.jdbc.user.UserContextService</code> to <code>org.glyptodon.guacamole.auth.jdbc.user.UserService</code>:<ul><li><code>private CONFIRM_NEW_PASSWORD : Field</code></li><li><code>private CONFIRM_NEW_PASSWORD_PARAMETER : String</code></li><li><code>private EXPIRED_PASSWORD : CredentialsInfo</code></li><li><code>private NEW_PASSWORD : Field</code></li><li><code>private NEW_PASSWORD_PARAMETER : String</code></li><li><code>private logger : Logger</code></li></ul>"
        ]
    },
    {
        "id": 1100868,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "7655200f58293e5a30bf8b3cbb29ebadae374564",
        "author": "Egor.Ushakov",
        "time": "6/8/15 6:06 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private checkRemap() : void</code> extracted from <code>public getLine() : int</code> and <code>public getOffset() : int</code> in class <code>com.intellij.debugger.engine.RemappedSourcePosition</code>"
        ]
    },
    {
        "id": 1103199,
        "repository": "https://github.com/oblac/jodd.git",
        "sha1": "722ef9156896248ef3fbe83adde0f6ff8f46856a",
        "author": "Igor Spasi?",
        "time": "6/8/15 6:08 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected resolveFormEncoding() : String</code> extracted from <code>protected formBuffer() : Buffer</code> in class <code>jodd.http.HttpBase</code>"
        ]
    },
    {
        "id": 1102923,
        "repository": "https://github.com/jeeeyul/eclipse-themes.git",
        "sha1": "72f61ec9b85a740fd09d10ad711e275d2ec2e564",
        "author": "Jeeeyul Lee",
        "time": "6/8/15 6:29 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>net.jeeeyul.eclipse.themes.test.e4app</code> to <code>net.jeeeyul.eclipse.themes.test.e4app.handlers</code>:<ul><li><code>AboutHandler</code></li><li><code>SplashHandler</code></li></ul>",
            "<b>Move Class</b> <code>TestView</code> moved from <code>net.jeeeyul.eclipse.themes.test.e4app</code> to <code>net.jeeeyul.eclipse.themes.test.e4app.views</code>"
        ]
    },
    {
        "id": 1100435,
        "repository": "https://github.com/realm/realm-java.git",
        "sha1": "6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
        "author": "Christian Melchior",
        "time": "6/8/15 7:26 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private showStatus(txt String) : void</code> extracted from <code>private showStatus(realm Realm) : void</code> in class <code>io.realm.examples.realmmigrationexample.MigrationExampleActivity</code>"
        ]
    },
    {
        "id": 1100856,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "7a4dab88185553bd09e827839fdf52e870ef7088",
        "author": "Dmitry Batrak",
        "time": "6/8/15 8:07 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getDataFile(name String) : File</code> extracted from <code>private getJarFile(name String) : VirtualFile</code> in class <code>com.intellij.codeInsight.JavaExternalDocumentationTest</code>",
            "<b>Extract Method</b> <code>private getDocumentationText(sourceEditorText String) : String</code> extracted from <code>public testImagesInsideJavadocJar() : void</code> in class <code>com.intellij.codeInsight.JavaExternalDocumentationTest</code>"
        ]
    },
    {
        "id": 1103963,
        "repository": "https://github.com/fabric8io/fabric8.git",
        "sha1": "8127b21a220ca677c4e59961d019e7753da7ea6e",
        "author": "Jimmi Dyson",
        "time": "6/8/15 8:49 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected getProbe(prefix String) : Probe</code> extracted from <code>protected getLivenessProbe() : Probe</code> in class <code>io.fabric8.maven.JsonMojo</code>"
        ]
    },
    {
        "id": 1104589,
        "repository": "https://github.com/puniverse/quasar.git",
        "sha1": "c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
        "author": "pron",
        "time": "6/8/15 8:49 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected failedSubscribe(s Subscription) : void</code> extracted from <code>public onSubscribe(s Subscription) : void</code> in class <code>co.paralleluniverse.strands.channels.reactivestreams.ChannelSubscriber</code>"
        ]
    },
    {
        "id": 1104952,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "04bcfe98dbe7b05e508559930c21379ece845732",
        "author": "Cedric Champeau",
        "time": "6/8/15 9:02 AM",
        "refactorings": [
            "<b>Extract Interface</b> <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer</code> from type <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults</code>"
        ]
    },
    {
        "id": 1100663,
        "repository": "https://github.com/rstudio/rstudio.git",
        "sha1": "cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
        "author": "JJ Allaire",
        "time": "6/8/15 9:53 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected setMaxHeight(maxHeight int) : void</code> extracted from <code>protected wrapMenuBar(menuBar ToolbarMenuBar) : Widget</code> in class <code>org.rstudio.core.client.widget.ScrollableToolbarPopupMenu</code>"
        ]
    },
    {
        "id": 1101310,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "abbf32571232db81a5343db17a933a9ce6923b44",
        "author": "Simon Brandhof",
        "time": "6/8/15 10:22 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.sonar.server.notifications</code> to <code>org.sonar.server.notification</code>:<ul><li><code>NotificationCenter</code></li><li><code>NotificationCenterTest</code></li><li><code>NotificationService</code></li><li><code>NotificationServiceTest</code></li><li><code>NotificationTest</code></li></ul>",
            "<b>Move Classes</b> from <code>org.sonar.server.notifications.email</code> to <code>org.sonar.server.notification.email</code>:<ul><li><code>AlertsEmailTemplate</code></li><li><code>AlertsEmailTemplateTest</code></li><li><code>EmailNotificationChannel</code></li><li><code>EmailNotificationChannelTest</code></li></ul>"
        ]
    },
    {
        "id": 1100842,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "7ed3f273ab0caf0337c22f0b721d51829bb0c877",
        "author": "Ekaterina Tuzova",
        "time": "6/8/15 10:29 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private addCoursesFromStepic(result List&lt;CourseInfo&gt;, pageNumber int) : boolean</code> extracted from <code>public getCourses() : List&lt;CourseInfo&gt;</code> in class <code>com.jetbrains.edu.stepic.EduStepicConnector</code>"
        ]
    },
    {
        "id": 1103915,
        "repository": "https://github.com/Athou/commafeed.git",
        "sha1": "18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
        "author": "Athou",
        "time": "6/8/15 10:53 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private fetch(url String) : byte[]</code> extracted from <code>public fetch(feed Feed) : byte[]</code> in class <code>com.commafeed.backend.favicon.DefaultFaviconFetcher</code>"
        ]
    },
    {
        "id": 1101296,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "4a2247c24efee48de53ca07302b6810ab7205621",
        "author": "Teryk Bellahsene",
        "time": "6/8/15 11:12 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.sonar.server.custommeasure.persistence</code> to <code>org.sonar.server.measure.custom.persistence</code>:<ul><li><code>CustomMeasureDao</code></li><li><code>CustomMeasureDaoTest</code></li><li><code>CustomMeasureTesting</code></li></ul>",
            "<b>Move Classes</b> from <code>org.sonar.server.custommeasure.ws</code> to <code>org.sonar.server.measure.custom.ws</code>:<ul><li><code>CustomMeasuresWs</code></li><li><code>CustomMeasuresWsAction</code></li><li><code>CustomMeasuresWsModule</code></li><li><code>CustomMeasuresWsModuleTest</code></li><li><code>CustomMeasuresWsTest</code></li><li><code>DeleteAction</code></li><li><code>DeleteActionTest</code></li></ul>"
        ]
    },
    {
        "id": 1106044,
        "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
        "sha1": "4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
        "author": "Chris Kittrell",
        "time": "6/8/15 11:14 AM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>private column : Integer</code> from class <code>org.broadleafcommerce.openadmin.dto.BasicFieldMetadata</code> to class <code>org.broadleafcommerce.openadmin.dto.FieldMetadata</code>",
            "<b>Pull Up Method</b> <code>public getColumn() : Integer</code> from class <code>org.broadleafcommerce.openadmin.dto.BasicFieldMetadata</code> to class <code>org.broadleafcommerce.openadmin.dto.FieldMetadata</code>",
            "<b>Pull Up Method</b> <code>public setColumn(column Integer) : void</code> from class <code>org.broadleafcommerce.openadmin.dto.BasicFieldMetadata</code> to class <code>org.broadleafcommerce.openadmin.dto.FieldMetadata</code>"
        ]
    },
    {
        "id": 1104637,
        "repository": "https://github.com/dreamhead/moco.git",
        "sha1": "55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
        "author": "dreamhead",
        "time": "6/8/15 11:18 AM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting</code> from class <code>com.github.dreamhead.moco.internal.ActualHttpServer</code> to class <code>com.github.dreamhead.moco.internal.HttpConfiguration</code>",
            "<b>Pull Up Method</b> <code>public redirectTo(url String) : HttpResponseSetting</code> from class <code>com.github.dreamhead.moco.internal.ActualHttpServer</code> to class <code>com.github.dreamhead.moco.internal.HttpConfiguration</code>"
        ]
    },
    {
        "id": 1106247,
        "repository": "https://github.com/datastax/java-driver.git",
        "sha1": "1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
        "author": "olim7t",
        "time": "6/8/15 11:19 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getMaxRequestsPerConnection(distance HostDistance) : int</code> extracted from <code>public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int</code> in class <code>com.datastax.driver.core.PoolingOptions</code>",
            "<b>Extract Method</b> <code>public getNewConnectionThreshold(distance HostDistance) : int</code> extracted from <code>public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int</code> in class <code>com.datastax.driver.core.PoolingOptions</code>",
            "<b>Extract Method</b> <code>public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions</code> extracted from <code>public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions</code> in class <code>com.datastax.driver.core.PoolingOptions</code>",
            "<b>Extract Method</b> <code>public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions</code> extracted from <code>public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions</code> in class <code>com.datastax.driver.core.PoolingOptions</code>"
        ]
    },
    {
        "id": 1105950,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
        "author": "Bas Leijdekkers",
        "time": "6/8/15 11:39 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean</code> extracted from <code>private canBeUnboxed(expression PsiExpression) : boolean</code> in class <code>com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor</code>"
        ]
    },
    {
        "id": 1105947,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "04397f41107bd6de41b31d45a4e8e2ed65628bbe",
        "author": "Anna Kozlova",
        "time": "6/8/15 11:50 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private checkForTestRoots(srcModule Module, testFolders Set&lt;VirtualFile&gt;, processed Set&lt;Module&gt;) : void</code> inlined to <code>protected checkForTestRoots(srcModule Module, testFolders Set&lt;VirtualFile&gt;) : void</code> in class <code>com.intellij.testIntegration.createTest.CreateTestAction</code>"
        ]
    },
    {
        "id": 1103823,
        "repository": "https://github.com/raphw/byte-buddy.git",
        "sha1": "372f4ae6cebcd664e3b43cade356d1df233f6467",
        "author": "Rafael Winterhalter",
        "time": "6/8/15 12:07 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>package ARRAY_MODIFIERS : int</code> from class <code>net.bytebuddy.description.type.TypeDescription.ArrayProjection</code> to class <code>net.bytebuddy.description.type.TypeDescription</code>"
        ]
    },
    {
        "id": 1105941,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "138911ce88b05039242b8d1b2bb5b7a59008f5ee",
        "author": "Dmitry Batrak",
        "time": "6/8/15 12:40 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getHTMLEditorKit(noGapsBetweenParagraphs boolean) : HTMLEditorKit</code> extracted from <code>public getHTMLEditorKit() : HTMLEditorKit</code> in class <code>com.intellij.util.ui.UIUtil</code>"
        ]
    },
    {
        "id": 1105969,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
        "author": "Julien Lancelot",
        "time": "6/8/15 1:21 PM",
        "refactorings": [
            "<b>Move Method</b> <code>private createComponentDto(reportComponent Component, component Component) : ComponentDto</code> from class <code>org.sonar.server.computation.step.PersistComponentsStep</code> to class <code>org.sonar.server.computation.step.PersistComponentsStep.PersisComponent</code>"
        ]
    },
    {
        "id": 1106007,
        "repository": "https://github.com/glyptodon/guacamole-client.git",
        "sha1": "ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
        "author": "Michael Jumper",
        "time": "6/8/15 2:17 PM",
        "refactorings": [
            "<b>Move Multiple Attributes</b> from class <code>org.glyptodon.guacamole.auth.jdbc.user.UserContextService</code> to <code>org.glyptodon.guacamole.auth.jdbc.user.UserService</code>:<ul><li><code>private CONFIRM_NEW_PASSWORD : Field</code></li><li><code>private CONFIRM_NEW_PASSWORD_PARAMETER : String</code></li><li><code>private EXPIRED_PASSWORD : CredentialsInfo</code></li><li><code>private NEW_PASSWORD : Field</code></li><li><code>private NEW_PASSWORD_PARAMETER : String</code></li><li><code>private logger : Logger</code></li></ul>"
        ]
    },
    {
        "id": 1106350,
        "repository": "https://github.com/puniverse/quasar.git",
        "sha1": "56d4b999e8be70be237049708f019c278c356e71",
        "author": "circlespainter",
        "time": "6/8/15 3:49 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>package verifySuspend(current Fiber, exc boolean) : Fiber</code> inlined to <code>package verifySuspend(current Fiber) : Fiber</code> in class <code>co.paralleluniverse.fibers.Fiber</code>",
            "<b>Inline Method</b> <code>public checkInstrumentation(exc boolean) : boolean</code> inlined to <code>public checkInstrumentation() : boolean</code> in class <code>co.paralleluniverse.fibers.Fiber</code>",
            "<b>Inline Method</b> <code>public popMethod(catchAll boolean) : void</code> inlined to <code>public popMethod() : void</code> in class <code>co.paralleluniverse.fibers.Stack</code>",
            "<b>Inline Method</b> <code>public pushMethod(entry int, numSlots int, method String, sourceLine int) : void</code> inlined to <code>public pushMethod(entry int, numSlots int) : void</code> in class <code>co.paralleluniverse.fibers.Stack</code>"
        ]
    },
    {
        "id": 1106355,
        "repository": "https://github.com/hibernate/hibernate-orm.git",
        "sha1": "2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
        "author": "Steve Ebersole",
        "time": "6/8/15 4:24 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void</code> extracted from <code>public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView)</code> in class <code>org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl</code>"
        ]
    },
    {
        "id": 1106365,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "446e2537895c15b404a74107069a12f3fc404b15",
        "author": "Philip Thompson",
        "time": "6/8/15 4:41 PM",
        "refactorings": [
            "<b>Move Class</b> <code>SplitCallable</code> moved from <code>org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat</code> to <code>org.apache.cassandra.hadoop.cql3.CqlInputFormat</code>",
            "<b>Move Class</b> <code>NullOutputHandler</code> moved from <code>org.apache.cassandra.hadoop.BulkRecordWriter</code> to <code>org.apache.cassandra.hadoop.cql3.CqlBulkRecordWriter</code>"
        ]
    },
    {
        "id": 1109449,
        "repository": "https://github.com/amplab/tachyon.git",
        "sha1": "0ba343846f21649e29ffc600f30a7f3e463fb24c",
        "author": "Bin Fan",
        "time": "6/10/15 3:33 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>tachyon.worker.block.meta.BlockMetaBase</code> from classes <code>tachyon.worker.block.meta.BlockMeta</code> and <code>tachyon.worker.block.meta.TempBlockMeta</code>"
        ]
    },
    {
        "id": 1108762,
        "repository": "https://github.com/raphw/byte-buddy.git",
        "sha1": "f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
        "author": "Rafael Winterhalter",
        "time": "6/10/15 5:31 AM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>protected wrap(values List&lt;ParameterDescription&gt;) : ParameterList</code> from classes <code>net.bytebuddy.description.method.ParameterList.Explicit</code> and <code>net.bytebuddy.description.method.ParameterList.ForLoadedExecutable</code> to class <code>net.bytebuddy.description.method.ParameterList.AbstractBase</code>"
        ]
    },
    {
        "id": 1108190,
        "repository": "https://github.com/kuujo/copycat.git",
        "sha1": "19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
        "author": "Jordan Halterman",
        "time": "6/10/15 6:01 AM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>protected transition : boolean</code> from class <code>net.kuujo.copycat.raft.state.ActiveState</code> to class <code>net.kuujo.copycat.raft.state.PassiveState</code>",
            "<b>Pull Up Method</b> <code>private applyCommits(commitIndex long) : CompletableFuture&lt;Void&gt;</code> from class <code>net.kuujo.copycat.raft.state.ActiveState</code> to class <code>net.kuujo.copycat.raft.state.PassiveState</code>",
            "<b>Pull Up Method</b> <code>private applyIndex(globalIndex long) : void</code> from class <code>net.kuujo.copycat.raft.state.ActiveState</code> to class <code>net.kuujo.copycat.raft.state.PassiveState</code>",
            "<b>Pull Up Method</b> <code>private doAppendEntries(request AppendRequest) : AppendResponse</code> from class <code>net.kuujo.copycat.raft.state.ActiveState</code> to class <code>net.kuujo.copycat.raft.state.PassiveState</code>",
            "<b>Pull Up Method</b> <code>private doCheckPreviousEntry(request AppendRequest) : AppendResponse</code> from class <code>net.kuujo.copycat.raft.state.ActiveState</code> to class <code>net.kuujo.copycat.raft.state.PassiveState</code>",
            "<b>Pull Up Method</b> <code>private handleAppend(request AppendRequest) : AppendResponse</code> from class <code>net.kuujo.copycat.raft.state.ActiveState</code> to class <code>net.kuujo.copycat.raft.state.PassiveState</code>"
        ]
    },
    {
        "id": 1107917,
        "repository": "https://github.com/elastic/elasticsearch.git",
        "sha1": "ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
        "author": "javanna",
        "time": "6/10/15 7:46 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected buildFQuery(builder XContentBuilder, params Params) : void</code> extracted from <code>protected doXContent(builder XContentBuilder, params Params) : void</code> in class <code>org.elasticsearch.index.query.QueryFilterBuilder</code>"
        ]
    },
    {
        "id": 1107379,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "484038e916dc40bf87eca10c77889d79eca96c4d",
        "author": "Eugene Zhuravlev",
        "time": "6/10/15 9:11 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public removeNodes(paths Collection&lt;TreePath&gt;) : void</code> extracted from <code>public removeNode(nodePath TreePath) : void</code> in class <code>com.intellij.compiler.options.AnnotationProcessorsPanel.MyTreeModel</code>"
        ]
    },
    {
        "id": 1107718,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
        "author": "Julien Lancelot",
        "time": "6/10/15 9:30 AM",
        "refactorings": [
            "<b>Move Method</b> <code>private createComponentDto(reportComponent Component, component Component) : ComponentDto</code> from class <code>org.sonar.server.computation.step.PersistComponentsStep</code> to class <code>org.sonar.server.computation.step.PersistComponentsStep.PersisComponent</code>"
        ]
    },
    {
        "id": 1107713,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
        "author": "Julien Lancelot",
        "time": "6/10/15 9:30 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.sonar.core.component</code> to <code>org.sonar.core.component.db</code>:<ul><li><code>SnapshotQuery</code></li><li><code>SnapshotQueryTest</code></li></ul>"
        ]
    },
    {
        "id": 1107345,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "219d6ddfd1db62c11efb57e0216436874e087834",
        "author": "Michael Golubev",
        "time": "6/10/15 4:04 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void</code> extracted from <code>public addAdditionalLog(presentableName String) : LoggingHandler</code> in class <code>com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl</code>",
            "<b>Extract Superclass</b> <code>com.intellij.remoteServer.agent.util.log.LogPipeBase</code> from class <code>com.intellij.remoteServer.agent.util.log.LogPipe</code>",
            "<b>Extract Superclass</b> <code>com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase</code> from class <code>com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl</code>"
        ]
    },
    {
        "id": 1106945,
        "repository": "https://github.com/HubSpot/Singularity.git",
        "sha1": "45ada13b852af85e1ae0491267a0239d9bdf6f3f",
        "author": "tpetr",
        "time": "6/10/15 4:07 PM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>protected validator : SingularityValidator</code> from classes <code>com.hubspot.singularity.resources.DeployResource</code> and <code>com.hubspot.singularity.resources.RequestResource</code> to class <code>com.hubspot.singularity.resources.AbstractRequestResource</code>"
        ]
    },
    {
        "id": 1106576,
        "repository": "https://github.com/liferay/liferay-portal.git",
        "sha1": "59fd9e696cec5f2ed44c27422bbc426b11647321",
        "author": "Andrea Di Giorgi",
        "time": "6/10/15 6:43 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency</code> extracted from <code>public addDependency(project Project, configurationName String, group String, name String, version String, transitive boolean) : Dependency</code> in class <code>com.liferay.gradle.util.GradleUtil</code>"
        ]
    },
    {
        "id": 1109077,
        "repository": "https://github.com/FasterXML/jackson-databind.git",
        "sha1": "44dea1f292933192ea5287d9b3e14a7daaef3c0f",
        "author": "Cowtowncoder",
        "time": "6/10/15 8:33 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.fasterxml.jackson.failing.TestExternalTypeId222</code> to <code>com.fasterxml.jackson.databind.jsontype.TestExternalId</code>:<ul><li><code>Issue222Bean</code></li><li><code>Issue222BeanB</code></li></ul>"
        ]
    },
    {
        "id": 1109425,
        "repository": "https://github.com/amplab/tachyon.git",
        "sha1": "6d10621465c0e6ae81ad8d240d70a55c72caeea6",
        "author": "Bin Fan",
        "time": "6/10/15 9:21 PM",
        "refactorings": [
            "<b>Push Down Attribute</b> <code>private mBlockSize : long</code> from class <code>tachyon.worker.block.meta.BlockMetaBase</code> to class <code>tachyon.worker.block.meta.BlockMeta</code>",
            "<b>Push Down Method</b> <code>public getBlockSize() : long</code> from class <code>tachyon.worker.block.meta.BlockMetaBase</code> to class <code>tachyon.worker.block.meta.BlockMeta</code>"
        ]
    },
    {
        "id": 1107119,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
        "author": "Steve Kondik",
        "time": "6/11/15 12:41 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private cleanupProximityLocked() : void</code> extracted from <code>private cleanupProximity() : void</code> in class <code>com.android.server.power.PowerManagerService</code>"
        ]
    },
    {
        "id": 1107905,
        "repository": "https://github.com/elastic/elasticsearch.git",
        "sha1": "f77804dad35c13d9ff96456e85737883cf7ddd99",
        "author": "Simon Willnauer",
        "time": "6/11/15 6:58 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.elasticsearch.index.merge.policy</code> to <code>org.elasticsearch.index.shard</code>:<ul><li><code>ElasticsearchMergePolicy</code></li><li><code>FilterDocValuesProducer</code></li><li><code>VersionFieldUpgrader</code></li><li><code>VersionFieldUpgraderTest</code></li></ul>"
        ]
    },
    {
        "id": 1107899,
        "repository": "https://github.com/elastic/elasticsearch.git",
        "sha1": "c928852d4ab7d8c744063979208709ed4429b8e9",
        "author": "Christoph Büscher",
        "time": "6/11/15 9:40 AM",
        "refactorings": [
            "<b>Move Method</b> <code>public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query</code> from class <code>org.elasticsearch.index.query.ExistsQueryParser</code> to class <code>org.elasticsearch.index.query.ExistsQueryBuilder</code>"
        ]
    },
    {
        "id": 1111984,
        "repository": "https://github.com/checkstyle/checkstyle.git",
        "sha1": "5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
        "author": "Roman Ivanov",
        "time": "6/15/15 1:56 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private processField(ast DetailAST, parentType int) : void</code> extracted from <code>private processIDENT(ast DetailAST) : void</code> in class <code>com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck</code>"
        ]
    },
    {
        "id": 1110287,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "a97341973c3b683d62d1422e5404ed5c7ccf45f8",
        "author": "Anna Kozlova",
        "time": "6/15/15 3:56 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private setNewName(newText String) : PsiElement</code> extracted from <code>public bindToElement(element PsiElement) : PsiElement</code> and <code>public handleElementRename(newElementName String) : PsiElement</code> in class <code>org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper</code>"
        ]
    },
    {
        "id": 1110245,
        "repository": "https://github.com/datastax/java-driver.git",
        "sha1": "3a0603f8f778be3219a5a0f3a7845cda65f1e172",
        "author": "Alexandre Dutra",
        "time": "6/15/15 4:48 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public values(names List&lt;String&gt;, values List&lt;Object&gt;) : Insert</code> extracted from <code>public values(names String[], values Object[]) : Insert</code> in class <code>com.datastax.driver.core.querybuilder.Insert</code>"
        ]
    },
    {
        "id": 1110282,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
        "author": "Vladimir Krivosheev",
        "time": "6/15/15 5:59 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public canonicalizePath(url String, baseUrl Url, baseUrlIsFile boolean) : String</code> extracted from <code>protected canonicalizeUrl(url String, baseUrl Url, trimFileScheme boolean, sourceIndex int, baseUrlIsFile boolean) : Url</code> in class <code>org.jetbrains.debugger.sourcemap.SourceResolver</code>"
        ]
    },
    {
        "id": 1111161,
        "repository": "https://github.com/undertow-io/undertow.git",
        "sha1": "d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
        "author": "Stuart Douglas",
        "time": "6/15/15 6:06 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper, elseBranch HandlerWrapper) : PredicatesHandler</code> extracted from <code>public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper) : PredicatesHandler</code> in class <code>io.undertow.predicate.PredicatesHandler</code>",
            "<b>Move Class</b> <code>Token</code> moved from <code>io.undertow.util.PredicateTokeniser</code> to <code>io.undertow.server.handlers.builder.PredicatedHandlersParser</code>",
            "<b>Move Method</b> <code>private isOperator(op String) : boolean</code> from class <code>io.undertow.predicate.PredicateParser</code> to class <code>io.undertow.server.handlers.builder.PredicatedHandlersParser</code>",
            "<b>Move Method</b> <code>private isOperator(op String) : boolean</code> from class <code>io.undertow.server.handlers.builder.HandlerParser</code> to class <code>io.undertow.server.handlers.builder.PredicatedHandlersParser</code>"
        ]
    },
    {
        "id": 1116967,
        "repository": "https://github.com/Netflix/eureka.git",
        "sha1": "f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
        "author": "Bertrand Renuart",
        "time": "6/15/15 6:55 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected onRemoteStatusChanged(oldStatus InstanceStatus, newStatus InstanceStatus) : void</code> extracted from <code>private updateInstanceRemoteStatus() : void</code> in class <code>com.netflix.discovery.DiscoveryClient</code>"
        ]
    },
    {
        "id": 1112031,
        "repository": "https://github.com/eclipse/vert.x.git",
        "sha1": "718782014519034b28f6d3182fd9d340b7b31a74",
        "author": "purplefox",
        "time": "6/15/15 7:22 AM",
        "refactorings": [
            "<b>Push Down Attribute</b> <code>protected connectionMap : Map&lt;Channel,C&gt;</code> from class <code>io.vertx.core.net.impl.VertxHandler</code> to class <code>io.vertx.core.http.impl.VertxHttpHandler</code>"
        ]
    },
    {
        "id": 1110072,
        "repository": "https://github.com/orientechnologies/orientdb.git",
        "sha1": "b40adc25008b6f608ee3eb3422c8884fff987337",
        "author": "lvca",
        "time": "6/15/15 7:43 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object</code> extracted from <code>public command(iCommand OCommandRequestText) : Object</code> in class <code>com.orientechnologies.orient.client.remote.OStorageRemote</code>",
            "<b>Extract Method</b> <code>public serializeValue(listener OAbstractCommandResultListener, result Object) : void</code> extracted from <code>private indexGet() : void</code> and <code>protected command() : void</code> in class <code>com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary</code>"
        ]
    },
    {
        "id": 1110654,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "06fa57185cba7304c69a7d6c792a15f2632e3e02",
        "author": "Sébastien Lesaint",
        "time": "6/15/15 8:07 AM",
        "refactorings": [
            "<b>Move Class</b> <code>QualityGateStatus</code> moved from <code>org.sonar.server.computation.measure.Measure</code> to <code>org.sonar.server.computation.measure</code>"
        ]
    },
    {
        "id": 1110272,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
        "author": "Yaroslav Lepenkin",
        "time": "6/15/15 9:02 AM",
        "refactorings": [
            "<b>Move Class</b> <code>NewLineBlocksIterator</code> moved from <code>com.intellij.psi.codeStyle.autodetect</code> to <code>com.intellij.psi.formatter.common</code>"
        ]
    },
    {
        "id": 1112091,
        "repository": "https://github.com/droolsjbpm/drools.git",
        "sha1": "1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
        "author": "Mario Fusco",
        "time": "6/15/15 9:41 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private internalAddEntry(entry PropagationEntry) : void</code> extracted from <code>public addEntry(entry PropagationEntry) : void</code> in class <code>org.drools.core.phreak.SynchronizedPropagationList</code>",
            "<b>Extract Method</b> <code>protected initPriorityQueue(kBase InternalKnowledgeBase) : BinaryHeapQueue</code> extracted from <code>public AgendaGroupQueueImpl(name String, kBase InternalKnowledgeBase)</code> in class <code>org.drools.core.common.AgendaGroupQueueImpl</code>",
            "<b>Move Method</b> <code>public notifyHalt() : void</code> from class <code>org.drools.core.common.DefaultAgenda</code> to class <code>org.drools.core.phreak.SynchronizedBypassPropagationList</code>",
            "<b>Move Method</b> <code>public notifyHalt() : void</code> from class <code>org.drools.reteoo.common.ReteAgenda</code> to class <code>org.drools.core.phreak.SynchronizedBypassPropagationList</code>",
            "<b>Push Down Attribute</b> <code>private evaluatingActionQueue : AtomicBoolean</code> from class <code>org.drools.core.impl.StatefulKnowledgeSessionImpl</code> to class <code>org.drools.reteoo.common.ReteWorkingMemory</code>"
        ]
    },
    {
        "id": 1111363,
        "repository": "https://github.com/spring-projects/spring-data-rest.git",
        "sha1": "b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
        "author": "Greg Turnquist",
        "time": "6/15/15 10:32 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected setupMockMvc() : void</code> extracted from <code>public setUp() : void</code> in class <code>org.springframework.data.rest.webmvc.AbstractWebIntegrationTests</code>"
        ]
    },
    {
        "id": 1110240,
        "repository": "https://github.com/datastax/java-driver.git",
        "sha1": "d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
        "author": "Kevin Gallardo",
        "time": "6/15/15 10:45 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>package getPreparedQuery(type QueryType, columns Set&lt;ColumnMapper&lt;?&gt;&gt;, options Option[]) : PreparedStatement</code> extracted from <code>package getPreparedQuery(type QueryType, options Option[]) : PreparedStatement</code> in class <code>com.datastax.driver.mapping.Mapper</code>"
        ]
    },
    {
        "id": 1110155,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "669e0722324965e3c99f29685517ac24d4ff2848",
        "author": "Manju James",
        "time": "6/15/15 10:56 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getListenerAddress(hostId int, useAdmin boolean) : String</code> extracted from <code>public getListenerAddress(hostId int) : String</code> in class <code>org.voltdb.regressionsuites.LocalCluster</code>",
            "<b>Extract Method</b> <code>private runPausedMode(isAdmin boolean) : void</code> extracted from <code>public testPausedMode() : void</code> in class <code>org.voltdb.TestClientInterface</code>",
            "<b>Extract Method</b> <code>public getClient(timeout long, scheme ClientAuthHashScheme, useAdmin boolean) : Client</code> extracted from <code>public getClient(timeout long, scheme ClientAuthHashScheme) : Client</code> in class <code>org.voltdb.regressionsuites.RegressionSuite</code>",
            "<b>Extract Method</b> <code>public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler, isAdmin boolean) : AdHocPlannerWork</code> extracted from <code>public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler) : AdHocPlannerWork</code> in class <code>org.voltdb.compiler.AdHocPlannerWork</code>",
            "<b>Extract Method</b> <code>public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[], readOnly boolean, isAdmin boolean) : AdHocPlannedStmtBatch</code> extracted from <code>public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[]) : AdHocPlannedStmtBatch</code> in class <code>org.voltdb.compiler.AdHocPlannedStmtBatch</code>"
        ]
    },
    {
        "id": 1117448,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "5ff305abb3068e420d8e54a796591d75acc8b8be",
        "author": "Duarte Meneses",
        "time": "6/15/15 12:04 PM",
        "refactorings": [
            "<b>Extract Interface</b> <code>org.sonar.api.utils.ProjectTempFolder</code> from types <code>org.sonar.api.utils.internal.DefaultTempFolder</code> and <code>org.sonar.api.utils.internal.JUnitTempFolder</code>"
        ]
    },
    {
        "id": 1110153,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
        "author": "wweiss",
        "time": "6/15/15 12:27 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void</code> extracted from <code>public setMpDRGateway(mpGateway PartitionDRGateway) : void</code> in class <code>org.voltdb.iv2.SpScheduler</code>"
        ]
    },
    {
        "id": 1112638,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
        "author": "Michael Bestas",
        "time": "6/15/15 1:36 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private initTickerView() : void</code> extracted from <code>protected makeStatusBarView() : PhoneStatusBarView</code> in class <code>com.android.systemui.statusbar.phone.PhoneStatusBar</code>"
        ]
    },
    {
        "id": 1117151,
        "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
        "sha1": "2252ed3754bff8c39db48d172ac76ac5a4e15359",
        "author": "Nick Bradbury",
        "time": "6/15/15 3:08 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private shouldShowTagToolbar() : boolean</code> inlined to <code>public onCreateView(inflater LayoutInflater, container ViewGroup, savedInstanceState Bundle) : View</code> in class <code>org.wordpress.android.ui.reader.ReaderPostListFragment</code>"
        ]
    },
    {
        "id": 1112627,
        "repository": "https://github.com/spring-projects/spring-boot.git",
        "sha1": "20d39f7af2165c67d5221f556f58820c992d2cc6",
        "author": "Phillip Webb",
        "time": "6/15/15 3:31 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getFullKey(path String, key String) : String</code> extracted from <code>private flatten(properties Properties, input Map&lt;String,Object&gt;, path String) : void</code> in class <code>org.springframework.boot.cloudfoundry.VcapApplicationListener</code>"
        ]
    },
    {
        "id": 1116770,
        "repository": "https://github.com/fabric8io/fabric8.git",
        "sha1": "9e61a71540da58c3208fd2c7737f793c3f81e5ae",
        "author": "James Strachan",
        "time": "6/15/15 4:16 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean</code> extracted from <code>public execute() : void</code> in class <code>io.fabric8.maven.CreateGogsWebhook</code>"
        ]
    },
    {
        "id": 1112624,
        "repository": "https://github.com/spring-projects/spring-boot.git",
        "sha1": "1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
        "author": "Oliver Gierke",
        "time": "6/15/15 4:21 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set&lt;String&gt;) : void</code> extracted from <code>public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void</code> in class <code>org.springframework.boot.orm.jpa.EntityScanRegistrar</code>"
        ]
    },
    {
        "id": 1116663,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
        "author": "Thomas Gummerer",
        "time": "6/15/15 5:07 PM",
        "refactorings": [
            "<b>Move Class</b> <code>TestDevice</code> moved from <code>com.facebook.buck.cli</code> to <code>com.facebook.buck.android</code>",
            "<b>Move Classes</b> from <code>com.facebook.buck.cli</code> to <code>com.facebook.buck.event</code>:<ul><li><code>InstallEvent</code></li><li><code>InstallEventTest</code></li><li><code>StartActivityEvent</code></li><li><code>StartActivityEventTest</code></li><li><code>UninstallEvent</code></li><li><code>UninstallEventTest</code></li></ul>",
            "<b>Move Classes</b> from <code>com.facebook.buck.cli.AdbHelper</code> to <code>com.facebook.buck.android.AdbHelper</code>:<ul><li><code>AdbCallable</code></li><li><code>CommandFailedException</code></li><li><code>ErrorParsingReceiver</code></li></ul>"
        ]
    },
    {
        "id": 1116963,
        "repository": "https://github.com/Netflix/eureka.git",
        "sha1": "1cacbe2ad700275bc575234ff2b32ee0d6493817",
        "author": "Bertrand Renuart",
        "time": "6/15/15 5:16 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected fireEvent(event DiscoveryEvent) : void</code> extracted from <code>protected onRemoteStatusChanged(oldStatus InstanceStatus, newStatus InstanceStatus) : void</code> in class <code>com.netflix.discovery.DiscoveryClient</code>"
        ]
    },
    {
        "id": 1116977,
        "repository": "https://github.com/google/closure-compiler.git",
        "sha1": "ba5e6d44526a2491a7004423ca2ad780c6992c46",
        "author": "dimvar",
        "time": "6/15/15 8:22 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private getRawTypeFromJSType(t JSType) : RawNominalType</code> inlined to <code>private visitOtherPropertyDeclaration(getProp Node) : void</code> in class <code>com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope</code>"
        ]
    },
    {
        "id": 1117875,
        "repository": "https://github.com/Netflix/eureka.git",
        "sha1": "457a7f637ddb226acf477cae0b04c8ff16ec9a50",
        "author": "David Liu",
        "time": "6/15/15 10:22 PM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>com.netflix.discovery.BaseDiscoveryClientTester</code> from class <code>com.netflix.discovery.AbstractDiscoveryClientTester</code>"
        ]
    },
    {
        "id": 1116704,
        "repository": "https://github.com/linkedin/rest.li.git",
        "sha1": "bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
        "author": "Xiao Ma",
        "time": "6/16/15 12:30 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected extendRecordBaseClass(templateClass JDefinedClass) : void</code> extracted from <code>protected generateRecord(templateClass JDefinedClass, recordSpec RecordTemplateSpec) : void</code> in class <code>com.linkedin.pegasus.generator.JavaDataTemplateGenerator</code>",
            "<b>Extract Method</b> <code>protected extendUnionBaseClass(unionClass JDefinedClass) : void</code> extracted from <code>protected generateUnion(unionClass JDefinedClass, unionSpec UnionTemplateSpec) : void</code> in class <code>com.linkedin.pegasus.generator.JavaDataTemplateGenerator</code>",
            "<b>Extract Method</b> <code>protected extendWrappingArrayBaseClass(itemJClass JClass, arrayClass JDefinedClass) : void</code> extracted from <code>protected generateArray(arrayClass JDefinedClass, arrayDataTemplateSpec ArrayTemplateSpec) : void</code> in class <code>com.linkedin.pegasus.generator.JavaDataTemplateGenerator</code>",
            "<b>Extract Method</b> <code>protected extendWrappingMapBaseClass(valueJClass JClass, mapClass JDefinedClass) : void</code> extracted from <code>protected generateMap(mapClass JDefinedClass, mapSpec MapTemplateSpec) : void</code> in class <code>com.linkedin.pegasus.generator.JavaDataTemplateGenerator</code>"
        ]
    },
    {
        "id": 1116810,
        "repository": "https://github.com/codinguser/gnucash-android.git",
        "sha1": "bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
        "author": "Ngewi Fet",
        "time": "6/16/15 6:15 AM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>public getAllTransactionsCount() : long</code> from class <code>org.gnucash.android.db.TransactionsDbAdapter</code> to class <code>org.gnucash.android.db.DatabaseAdapter</code>"
        ]
    },
    {
        "id": 1116953,
        "repository": "https://github.com/eclipse/vert.x.git",
        "sha1": "32a8c9086040fd6d6fa11a214570ee4f75a4301f",
        "author": "purplefox",
        "time": "6/16/15 6:37 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private handleHttp(conn ServerConnection, ch Channel, msg Object) : void</code> inlined to <code>protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void</code> in class <code>io.vertx.core.http.impl.HttpServerImpl.ServerHandler</code>"
        ]
    },
    {
        "id": 1117005,
        "repository": "https://github.com/crate/crate.git",
        "sha1": "72b5348307d86b1a118e546c24d97f1ac1895bdb",
        "author": "Sebastian Utz",
        "time": "6/16/15 7:01 AM",
        "refactorings": [
            "<b>Move Multiple Attributes</b> from class <code>io.crate.planner.node.dql.join.NestedLoop</code> to <code>io.crate.planner.node.dql.join.NestedLoopNode</code>:<ul><li><code>private leftMergeNode : MergeNode</code></li><li><code>private rightMergeNode : MergeNode</code></li></ul>",
            "<b>Pull Up Attribute</b> <code>private downstreamExecutionNodeId : int</code> from classes <code>io.crate.planner.node.dql.CollectNode</code> and 2 others to class <code>io.crate.planner.node.dql.AbstractDQLPlanNode</code>",
            "<b>Pull Up Attribute</b> <code>private downstreamNodes : List&lt;String&gt;</code> from classes <code>io.crate.planner.node.dql.CollectNode</code> and 2 others to class <code>io.crate.planner.node.dql.AbstractDQLPlanNode</code>",
            "<b>Pull Up Method</b> <code>public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void</code> from class <code>io.crate.planner.node.dql.MergeNode</code> to class <code>io.crate.planner.node.dql.AbstractDQLPlanNode</code>",
            "<b>Pull Up Method</b> <code>public downstreamNodes(downStreamNodes List&lt;String&gt;) : void</code> from class <code>io.crate.planner.node.dql.CollectNode</code> to class <code>io.crate.planner.node.dql.AbstractDQLPlanNode</code>",
            "<b>Pull Up Method</b> <code>public downstreamNodes(nodes Set&lt;String&gt;) : void</code> from classes <code>io.crate.planner.node.dql.MergeNode</code> and <code>io.crate.planner.node.dql.join.NestedLoopNode</code> to class <code>io.crate.planner.node.dql.AbstractDQLPlanNode</code>"
        ]
    },
    {
        "id": 1112702,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "5f18bed8da4dda4fa516907ecbbe28f712e944f7",
        "author": "Konstantin Bulenkov",
        "time": "6/16/15 7:14 AM",
        "refactorings": [
            "<b>Move Class</b> <code>JBPanel</code> moved from <code>com.intellij.util.ui.components</code> to <code>com.intellij.ui.components</code>"
        ]
    },
    {
        "id": 1112642,
        "repository": "https://github.com/orientechnologies/orientdb.git",
        "sha1": "1089957b645bde069d3864563bbf1f7c7da8045c",
        "author": "Tglman",
        "time": "6/16/15 7:33 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected rewriteLinksInDocument(document ODocument, rewrite OIndex&lt;OIdentifiable&gt;) : void</code> extracted from <code>private rewriteLinksInDocument(document ODocument) : void</code> in class <code>com.orientechnologies.orient.core.db.tool.ODatabaseImport</code>"
        ]
    },
    {
        "id": 1116609,
        "repository": "https://github.com/belaban/JGroups.git",
        "sha1": "f1533756133dec84ce8218202585ac85904da7c9",
        "author": "Bela Ban",
        "time": "6/16/15 8:16 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public isInMembersList(sender IpAddress) : boolean</code> extracted from <code>public authenticate(token AuthToken, msg Message) : boolean</code> in class <code>org.jgroups.auth.FixedMembershipToken</code>"
        ]
    },
    {
        "id": 1116627,
        "repository": "https://github.com/hierynomus/sshj.git",
        "sha1": "7c26ac669a4e17ca1d2319a5049a56424fd33104",
        "author": "Jeroen van Erp",
        "time": "6/16/15 9:12 AM",
        "refactorings": [
            "<b>Move Class</b> <code>ChannelCloseEofTest</code> moved from <code>nl.javadude.sshj.connection.channel</code> to <code>com.hierynomus.sshj.connection.channel</code>"
        ]
    },
    {
        "id": 1116686,
        "repository": "https://github.com/processing/processing.git",
        "sha1": "d7f781da42e54824c17875a6036d3448672637f5",
        "author": "Ben Fry",
        "time": "6/16/15 10:03 AM",
        "refactorings": [
            "<b>Move Multiple Attributes</b> from class <code>processing.core.PConstants</code> to <code>processing.core.PGraphics</code>:<ul><li><code>protected ERROR_BACKGROUND_IMAGE_FORMAT : String</code></li><li><code>protected ERROR_BACKGROUND_IMAGE_SIZE : String</code></li><li><code>protected ERROR_PUSHMATRIX_OVERFLOW : String</code></li><li><code>protected ERROR_PUSHMATRIX_UNDERFLOW : String</code></li><li><code>protected ERROR_TEXTFONT_NULL_PFONT : String</code></li></ul>"
        ]
    },
    {
        "id": 1116655,
        "repository": "https://github.com/nutzam/nutz.git",
        "sha1": "6599c748ef35d38085703cf3bd41b9b5b6af5f32",
        "author": "wendal",
        "time": "6/16/15 10:47 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public from(dao Dao, obj Object, filter FieldFilter, ignoreNull boolean, ignoreZero boolean, ignoreDate boolean, ignoreId boolean, ignoreName boolean, ignorePk boolean) : Cnd</code> extracted from <code>public from(dao Dao, obj Object, filter FieldFilter) : Cnd</code> in class <code>org.nutz.dao.Cnd</code>"
        ]
    },
    {
        "id": 1117171,
        "repository": "https://github.com/infinispan/infinispan.git",
        "sha1": "e3b0d87b3ca0fd27cec39937cb3dc3a05b0cfc4e",
        "author": "Dan Berindei",
        "time": "6/16/15 10:48 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected waitForCacheToStabilize(cache Cache&lt;Object,Object&gt;, cacheConfig Configuration) : void</code> extracted from <code>public perform(ctx InvocationContext) : Object</code> in class <code>org.infinispan.commands.CreateCacheCommand</code>"
        ]
    },
    {
        "id": 1117938,
        "repository": "https://github.com/crate/crate.git",
        "sha1": "c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9",
        "author": "Mathias Fussenegger",
        "time": "6/16/15 12:04 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation</code> extracted from <code>public plan(rootRelation AnalyzedRelation, plannerContext Context) : Plan</code> in class <code>io.crate.planner.consumer.ConsumingPlanner</code>"
        ]
    },
    {
        "id": 1117830,
        "repository": "https://github.com/BuildCraft/BuildCraft.git",
        "sha1": "6abc40ed4850d74ee6c155f5a28f8b34881a0284",
        "author": "Adrian",
        "time": "6/16/15 12:06 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private initTemplate() : void</code> extracted from <code>public initialize() : void</code> and <code>public updateEntity() : void</code> in class <code>buildcraft.builders.TileFiller</code>"
        ]
    },
    {
        "id": 1117885,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
        "author": "Benedict Elliott Smith",
        "time": "6/16/15 12:28 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List&lt;Future&lt;?&gt;&gt;</code> extracted from <code>public submitBackground(cfs ColumnFamilyStore) : List&lt;Future&lt;?&gt;&gt;</code> in class <code>org.apache.cassandra.db.compaction.CompactionManager</code>"
        ]
    },
    {
        "id": 1117916,
        "repository": "https://github.com/robovm/robovm.git",
        "sha1": "bf5ee44b3b576e01ab09cae9f50300417b01dc07",
        "author": "BlueRiverInteractive",
        "time": "6/16/15 1:58 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public has(key CFString) : boolean</code> extracted from <code>public getColorModel() : CGImagePropertyColorModel</code> and 8 others in class <code>org.robovm.apple.imageio.CGImageProperties</code>",
            "<b>Extract Method</b> <code>public has(key NSString) : boolean</code> extracted from <code>public getLocalName() : String</code> and <code>public getServiceUUIDs() : NSArray&lt;CBUUID&gt;</code> in class <code>org.robovm.apple.corebluetooth.CBAdvertisementData</code>",
            "<b>Extract Method</b> <code>public has(key NSString) : boolean</code> extracted from <code>public getServices() : NSArray&lt;CBMutableService&gt;</code> in class <code>org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState</code>"
        ]
    },
    {
        "id": 1117765,
        "repository": "https://github.com/GoClipse/goclipse.git",
        "sha1": "851ab757698304e9d8d4ae24ab75be619ddae31a",
        "author": "Bruno Medeiros",
        "time": "6/16/15 2:13 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public contains(other SourceRange) : boolean</code> extracted from <code>public inclusiveContains(other SourceRange) : boolean</code> in class <code>melnorme.lang.tooling.ast.SourceRange</code>",
            "<b>Extract Method</b> <code>public contains(otherOffset int) : boolean</code> extracted from <code>public inclusiveContains(otherOffset int) : boolean</code> in class <code>melnorme.lang.tooling.ast.SourceRange</code>"
        ]
    },
    {
        "id": 1117296,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "c9b2006381301c99b66c50c4b31f329caac06137",
        "author": "Ning Shi",
        "time": "6/16/15 3:01 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private open(forWrite boolean, truncate boolean) : void</code> extracted from <code>public open(forWrite boolean) : void</code> in class <code>org.voltdb.utils.PBDMMapSegment</code>",
            "<b>Extract Method</b> <code>private open(forWrite boolean, truncate boolean) : void</code> extracted from <code>public open(forWrite boolean) : void</code> in class <code>org.voltdb.utils.PBDRegularSegment</code>"
        ]
    },
    {
        "id": 1117640,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "0f8a0af934f09deef1b58e961ffe789c7299bcc1",
        "author": "Andrew Gallagher",
        "time": "6/16/15 4:55 PM",
        "refactorings": [
            "<b>Move Class</b> <code>ConflictingHeadersException</code> moved from <code>com.facebook.buck.cxx.AbstractCxxPreprocessorInput</code> to <code>com.facebook.buck.cxx.AbstractCxxHeaders</code>",
            "<b>Move Method</b> <code>private addAllEntriesToIncludeMap(destination Map&lt;Path,SourcePath&gt;, source Map&lt;Path,SourcePath&gt;) : void</code> from class <code>com.facebook.buck.cxx.AbstractCxxPreprocessorInput</code> to class <code>com.facebook.buck.cxx.AbstractCxxHeaders</code>"
        ]
    },
    {
        "id": 1117635,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "f26d234e8d3458f34454583c22e3bd5f4b2a5da8",
        "author": "Thomas Gummerer",
        "time": "6/16/15 4:56 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getDevices() : List&lt;IDevice&gt;</code> extracted from <code>public adbCall(adbCallable AdbCallable) : boolean</code> in class <code>com.facebook.buck.android.AdbHelper</code>"
        ]
    },
    {
        "id": 1117895,
        "repository": "https://github.com/google/closure-compiler.git",
        "sha1": "ea96643364e91125f560e9508a5cbcdb776bde64",
        "author": "moz",
        "time": "6/16/15 8:22 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private parseFormalParameterList(inTypeExpression boolean) : FormalParameterListTree</code> extracted from <code>private parseFormalParameterList() : FormalParameterListTree</code> in class <code>com.google.javascript.jscomp.parsing.parser.Parser</code>"
        ]
    },
    {
        "id": 1118012,
        "repository": "https://github.com/killbill/killbill.git",
        "sha1": "66901e86e8bea2b999ed9f33e013fa5ed21507c7",
        "author": "stephane brossier",
        "time": "6/16/15 8:32 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private sanityOnPaymentInfoPlugin(paymentInfoPlugin PaymentTransactionInfoPlugin) : void</code> inlined to <code>private doOperation() : OperationResult</code> in class <code>org.killbill.billing.payment.core.sm.payments.PaymentOperation</code>"
        ]
    },
    {
        "id": 1117698,
        "repository": "https://github.com/real-logic/Aeron.git",
        "sha1": "35893c115ba23bd62a7036a33390420f074ce660",
        "author": "Todd L. Montgomery",
        "time": "6/16/15 9:43 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private verifyExceptionLogged() : void</code> inlined to <code>public shouldErrorOnAddSubscriptionWithInvalidUri() : void</code> and 2 others in class <code>uk.co.real_logic.aeron.driver.DriverConductorTest</code>",
            "<b>Inline Method</b> <code>private verifyNeverSucceeds() : void</code> inlined to <code>public shouldErrorOnAddSubscriptionWithInvalidUri() : void</code> and 2 others in class <code>uk.co.real_logic.aeron.driver.DriverConductorTest</code>",
            "<b>Inline Method</b> <code>private verifyPublicationClosed(times VerificationMode) : void</code> inlined to <code>public shouldErrorOnRemoveChannelOnUnknownStreamId() : void</code> in class <code>uk.co.real_logic.aeron.driver.DriverConductorTest</code>",
            "<b>Inline Method</b> <code>private verifyReceiverSubscribes() : void</code> inlined to <code>public shouldNotTimeoutSubscriptionOnKeepAlive() : void</code> and <code>public shouldTimeoutSubscription() : void</code> in class <code>uk.co.real_logic.aeron.driver.DriverConductorTest</code>",
            "<b>Inline Method</b> <code>private verifySenderNotifiedOfNewPublication() : void</code> inlined to <code>public shouldBeAbleToAddSinglePublication() : void</code> and 2 others in class <code>uk.co.real_logic.aeron.driver.DriverConductorTest</code>"
        ]
    },
    {
        "id": 1117840,
        "repository": "https://github.com/bumptech/glide.git",
        "sha1": "0d4b27952751de0caab01774048c3e0ec74824ce",
        "author": "judds",
        "time": "6/16/15 10:48 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package clearCallbacksAndListener() : void</code> extracted from <code>private checkCurrentDimens() : void</code> in class <code>com.bumptech.glide.request.target.ViewTarget.SizeDeterminer</code>"
        ]
    },
    {
        "id": 1118051,
        "repository": "https://github.com/eclipse/jetty.project.git",
        "sha1": "1f3be625e62f44d929c01f6574678eea05754474",
        "author": "Jan Bartel",
        "time": "6/17/15 12:18 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public gatherScannables() : void</code> extracted from <code>public configureScanner() : void</code> in class <code>org.eclipse.jetty.maven.plugin.JettyRunMojo</code>"
        ]
    },
    {
        "id": 1117550,
        "repository": "https://github.com/brianfrankcooper/YCSB.git",
        "sha1": "0b024834549c53512ef18bce89f60ef9225d4819",
        "author": "nitsanw",
        "time": "6/17/15 1:00 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private throttle(currTimeMillis long) : void</code> extracted from <code>public run() : void</code> in class <code>com.yahoo.ycsb.ClientThread</code>"
        ]
    },
    {
        "id": 1117922,
        "repository": "https://github.com/netty/netty.git",
        "sha1": "303cb535239a6f07cbe24a033ef965e2f55758eb",
        "author": "Norman Maurer",
        "time": "6/17/15 1:35 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private principal(certs Certificate[]) : Principal</code> inlined to <code>public getLocalPrincipal() : Principal</code> and <code>public getPeerPrincipal() : Principal</code> in class <code>io.netty.handler.ssl.OpenSslEngine.OpenSslSession</code>"
        ]
    },
    {
        "id": 1117232,
        "repository": "https://github.com/spring-projects/spring-boot.git",
        "sha1": "b47634176fa48ad925f79886c6aaca225cb9af64",
        "author": "izeye",
        "time": "6/17/15 2:03 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private findAll(predicate Predicate&lt;String&gt;) : Iterable&lt;Metric&lt;?&gt;&gt;</code> extracted from <code>public findAll() : Iterable&lt;Metric&lt;?&gt;&gt;</code> and <code>public findAll(prefix String) : Iterable&lt;Metric&lt;?&gt;&gt;</code> in class <code>org.springframework.boot.actuate.metrics.buffer.BufferMetricReader</code>"
        ]
    },
    {
        "id": 1120125,
        "repository": "https://github.com/eucalyptus/eucalyptus.git",
        "sha1": "5a38d0bca0e48853c3f7c00a0f098bada64797df",
        "author": "Evan Thomas",
        "time": "6/17/15 2:26 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.eucalyptus.cloudwatch.domain.absolute</code> to <code>com.eucalyptus.cluster.callback.cloudwatch</code>:<ul><li><code>AbsoluteMetricHelper</code></li><li><code>AbsoluteMetricHistory</code></li></ul>",
            "<b>Move Classes</b> from <code>com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue</code> to <code>com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue</code>:<ul><li><code>AbsoluteMetricCache</code></li><li><code>AbsoluteMetricCacheKey</code></li><li><code>AbsoluteMetricLoadCacheKey</code></li></ul>"
        ]
    },
    {
        "id": 1117817,
        "repository": "https://github.com/FasterXML/jackson-databind.git",
        "sha1": "da29a040ebae664274b28117b157044af0f525fa",
        "author": "Tatu Saloranta",
        "time": "6/17/15 3:02 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private _writeCloseableValue(gen JsonGenerator, value Object, cfg SerializationConfig) : void</code> inlined to <code>public writeValue(gen JsonGenerator, value Object) : void</code> in class <code>com.fasterxml.jackson.databind.ObjectWriter</code>"
        ]
    },
    {
        "id": 1117231,
        "repository": "https://github.com/spring-projects/spring-boot.git",
        "sha1": "cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
        "author": "Stephane Nicoll",
        "time": "6/17/15 4:27 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private load(config Class&lt;?&gt;, environment String[]) : void</code> extracted from <code>public overrideDateFormat() : void</code> and 2 others in class <code>org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests</code>"
        ]
    },
    {
        "id": 1117304,
        "repository": "https://github.com/graphhopper/graphhopper.git",
        "sha1": "7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
        "author": "Peter",
        "time": "6/17/15 5:42 AM",
        "refactorings": [
            "<b>Move Multiple Attributes</b> from class <code>com.graphhopper.storage.GraphHopperStorage</code> to <code>com.graphhopper.storage.BaseGraph</code>:<ul><li><code>package bitUtil : BitUtil</code></li><li><code>package bounds : BBox</code></li><li><code>package extStorage : GraphExtension</code></li><li><code>package flagsSizeIsLong : boolean</code></li><li><code>package nameIndex : NameIndex</code></li><li><code>package nodeAccess : NodeAccess</code></li><li><code>package wayGeometry : DataAccess</code></li><li><code>private INT_DIST_FACTOR : double</code></li><li><code>private MAX_EDGES : int</code></li><li><code>private NO_NODE : int</code></li><li><code>private edgeEntryIndex : int</code></li><li><code>private initialized : boolean</code></li><li><code>private maxGeoRef : int</code></li><li><code>private nodeEntryIndex : int</code></li><li><code>private removedNodes : GHBitSet</code></li><li><code>protected E_ADDITIONAL : int</code></li><li><code>protected E_DIST : int</code></li><li><code>protected E_FLAGS : int</code></li><li><code>protected E_GEO : int</code></li><li><code>protected E_LINKA : int</code></li><li><code>protected E_LINKB : int</code></li><li><code>protected E_NAME : int</code></li><li><code>protected E_NODEA : int</code></li><li><code>protected E_NODEB : int</code></li><li><code>protected N_ADDITIONAL : int</code></li><li><code>protected N_EDGE_REF : int</code></li><li><code>protected N_ELE : int</code></li><li><code>protected N_LAT : int</code></li><li><code>protected N_LON : int</code></li><li><code>protected edgeCount : int</code></li><li><code>protected edgeEntryBytes : int</code></li><li><code>protected edges : DataAccess</code></li><li><code>protected nodeCount : int</code></li><li><code>protected nodeEntryBytes : int</code></li><li><code>protected nodes : DataAccess</code></li></ul>",
            "<b>Move Multiple Methods</b> from class <code>com.graphhopper.storage.GraphHopperStorage</code> to <code>com.graphhopper.storage.BaseGraph</code>:<ul><li><code>package checkInit() : void</code></li><li><code>package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState</code></li><li><code>package ensureNodeIndex(nodeIndex int) : void</code></li><li><code>package internalEdgeAdd(fromNodeId int, toNodeId int) : int</code></li><li><code>package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long</code></li><li><code>package setEdgeCount(cnt int) : void</code></li><li><code>private connectNewEdge(fromNode int, newOrExistingEdge int) : void</code></li><li><code>private distToInt(distance double) : int</code></li><li><code>private ensureEdgeIndex(edgeIndex int) : void</code></li><li><code>private ensureGeometry(bytePos long, byteLength int) : void</code></li><li><code>private getDist(pointer long) : double</code></li><li><code>private getOtherNode(nodeThis int, edgePointer long) : int</code></li><li><code>private getRemovedNodes() : GHBitSet</code></li><li><code>private inPlaceNodeRemove(removeNodeCount int) : void</code></li><li><code>private initNodeRefs(oldCapacity long, newCapacity long) : void</code></li><li><code>private invalidateEdge(edgePointer long) : void</code></li><li><code>private isTestingEnabled() : boolean</code></li><li><code>private nextEdge() : int</code></li><li><code>private nextGeoRef(arrayLength int) : int</code></li><li><code>private stringHashCode(str String) : int</code></li><li><code>private trimToSize() : void</code></li><li><code>private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long</code></li><li><code>protected createSingleEdge(edgeId int, nodeId int) : SingleEdge</code></li><li><code>protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long</code></li><li><code>protected initNodeAndEdgeEntrySize() : void</code></li><li><code>protected initStorage() : void</code></li><li><code>protected loadEdgesHeader() : int</code></li><li><code>protected loadNodesHeader() : int</code></li><li><code>protected loadWayGeometryHeader() : int</code></li><li><code>protected nextEdgeEntryIndex(sizeInBytes int) : int</code></li><li><code>protected nextNodeEntryIndex(sizeInBytes int) : int</code></li><li><code>protected setEdgesHeader() : int</code></li><li><code>protected setNodesHeader() : int</code></li><li><code>protected setWayGeometryHeader() : int</code></li><li><code>public getDebugInfo(node int, area int) : String</code></li></ul>"
        ]
    },
    {
        "id": 1117213,
        "repository": "https://github.com/geoserver/geoserver.git",
        "sha1": "182f4d1174036417aad9d6db908ceaf64234fd5f",
        "author": "Andrea Aime",
        "time": "6/17/15 6:09 AM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>public post(task ImportTask, data ImportData) : void</code> from class <code>org.geoserver.importer.transform.VectorTransformChain</code> to class <code>org.geoserver.importer.transform.TransformChain</code>",
            "<b>Pull Up Method</b> <code>public pre(item ImportTask, data ImportData) : void</code> from class <code>org.geoserver.importer.transform.VectorTransformChain</code> to class <code>org.geoserver.importer.transform.TransformChain</code>"
        ]
    },
    {
        "id": 1117822,
        "repository": "https://github.com/restlet/restlet-framework-java.git",
        "sha1": "e4de9513d0a06d381b4521211cf688b77379c39d",
        "author": "quilicicf",
        "time": "6/17/15 6:09 AM",
        "refactorings": [
            "<b>Move Method</b> <code>private computeSectionName(apiDeclarationPath String) : String</code> from class <code>org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerReader</code> to class <code>org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerUtils</code>"
        ]
    },
    {
        "id": 1117602,
        "repository": "https://github.com/bennidi/mbassador.git",
        "sha1": "40e41d11d7847d660bba6691859b0506514bd0ac",
        "author": "bennidi",
        "time": "6/17/15 7:55 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>net.engio.mbassy.ConditionalHandlers</code> to <code>net.engio.mbassy.ConditionalHandlerTest</code>:<ul><li><code>ConditionalMessageListener</code></li><li><code>TestEvent</code></li></ul>"
        ]
    },
    {
        "id": 1118067,
        "repository": "https://github.com/Graylog2/graylog2-server.git",
        "sha1": "2ef067fc70055fc4d55c75937303414ddcf07e0e",
        "author": "Dennis Oelkers",
        "time": "6/17/15 8:59 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>integration.BaseRestTestHelper</code> from class <code>integration.BaseRestTest</code>",
            "<b>Move Class</b> <code>KeysPresentMatcher</code> moved from <code>integration.BaseRestTest</code> to <code>integration.BaseRestTestHelper</code>"
        ]
    },
    {
        "id": 1118362,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "e66e49cd4a9dd8027204f712f780170a5c129f5b",
        "author": "alarmnummer",
        "time": "6/17/15 9:05 AM",
        "refactorings": [
            "<b>Move Class</b> <code>ServiceInfo</code> moved from <code>com.hazelcast.spi</code> to <code>com.hazelcast.spi.impl.servicemanager</code>"
        ]
    },
    {
        "id": 1118338,
        "repository": "https://github.com/open-keychain/open-keychain.git",
        "sha1": "49d544d558e9c7f1106b5923204b1fbec2696cf7",
        "author": "Dominik Schürmann",
        "time": "6/17/15 10:26 AM",
        "refactorings": [
            "<b>Move Class</b> <code>OrbotHelper</code> moved from <code>org.sufficientlysecure.keychain.util.orbot</code> to <code>org.sufficientlysecure.keychain.util.tor</code>"
        ]
    },
    {
        "id": 1118131,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
        "author": "jie.liu",
        "time": "6/17/15 11:39 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected reset(animateTransition boolean) : void</code> extracted from <code>public reset() : void</code> in class <code>com.android.keyguard.KeyguardAbsKeyInputView</code>"
        ]
    },
    {
        "id": 1119965,
        "repository": "https://github.com/Netflix/eureka.git",
        "sha1": "5103ace802b2819438318dd53b5b07512aae0d25",
        "author": "Tomasz Bak",
        "time": "6/17/15 1:22 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public fillUpRegistryOfServer(serverIdx int, count int, instanceTemplate InstanceInfo) : void</code> extracted from <code>public fillUpRegistry(count int, instanceTemplate InstanceInfo) : void</code> in class <code>com.netflix.eureka2.integration.EurekaDeploymentClients</code>"
        ]
    },
    {
        "id": 1118568,
        "repository": "https://github.com/AsyncHttpClient/async-http-client.git",
        "sha1": "f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
        "author": "Stephane Landelle",
        "time": "6/17/15 6:11 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package signatureBaseString(method String, uri Uri, oauthTimestamp long, nonce String, formParams List&lt;Param&gt;, queryParams List&lt;Param&gt;) : StringBuilder</code> extracted from <code>public calculateSignature(method String, uri Uri, oauthTimestamp long, nonce String, formParams List&lt;Param&gt;, queryParams List&lt;Param&gt;) : String</code> in class <code>org.asynchttpclient.oauth.OAuthSignatureCalculator</code>"
        ]
    },
    {
        "id": 1118645,
        "repository": "https://github.com/square/okhttp.git",
        "sha1": "c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
        "author": "Jake Wharton",
        "time": "6/17/15 7:40 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.squareup.okhttp.internal.spdy</code> to <code>com.squareup.okhttp.internal.framed</code>:<ul><li><code>BaseTestHandler</code></li><li><code>FrameReader</code></li><li><code>FrameWriter</code></li><li><code>Header</code></li><li><code>Hpack</code></li><li><code>HpackDecodeInteropTest</code></li><li><code>HpackDecodeTestBase</code></li><li><code>HpackRoundTripTest</code></li><li><code>HpackTest</code></li><li><code>Http2</code></li><li><code>Http2ConnectionTest</code></li><li><code>Http2FrameLoggerTest</code></li><li><code>Http2Test</code></li><li><code>Huffman</code></li><li><code>HuffmanTest</code></li><li><code>IncomingStreamHandler</code></li><li><code>MockSpdyPeer</code></li><li><code>NameValueBlockReader</code></li><li><code>Ping</code></li><li><code>PushObserver</code></li><li><code>Settings</code></li><li><code>SettingsTest</code></li><li><code>Spdy3</code></li><li><code>Spdy3ConnectionTest</code></li><li><code>Spdy3Test</code></li><li><code>Variant</code></li></ul>",
            "<b>Move Classes</b> from <code>com.squareup.okhttp.internal.spdy.hpackjson</code> to <code>com.squareup.okhttp.internal.framed.hpackjson</code>:<ul><li><code>Case</code></li><li><code>HpackJsonUtil</code></li><li><code>Story</code></li></ul>"
        ]
    },
    {
        "id": 1118145,
        "repository": "https://github.com/rstudio/rstudio.git",
        "sha1": "9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
        "author": "Kevin Ushey",
        "time": "6/17/15 9:52 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getBoolean(key String) : boolean</code> extracted from <code>public init(widget AceEditorWidget, position Position) : void</code> in class <code>org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel</code>",
            "<b>Extract Method</b> <code>private has(key String) : boolean</code> extracted from <code>public init(widget AceEditorWidget, position Position) : void</code> in class <code>org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel</code>"
        ]
    },
    {
        "id": 1118798,
        "repository": "https://github.com/spring-projects/spring-integration.git",
        "sha1": "247232bdde24b81814a82100743f77d881aaf06b",
        "author": "Gunnar Hillert",
        "time": "6/17/15 9:57 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File</code> extracted from <code>private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File</code> in class <code>org.springframework.integration.file.FileWritingMessageHandler</code>"
        ]
    },
    {
        "id": 1118292,
        "repository": "https://github.com/open-keychain/open-keychain.git",
        "sha1": "c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
        "author": "Vincent Breitmoser",
        "time": "6/17/15 10:10 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected cryptoOperation(cryptoInput CryptoInputParcel, showProgress boolean) : void</code> extracted from <code>protected cryptoOperation(cryptoInput CryptoInputParcel) : void</code> in class <code>org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment</code>",
            "<b>Extract Method</b> <code>public displayInputFragment(showOpenDialog boolean) : void</code> extracted from <code>private handleActions(savedInstanceState Bundle, intent Intent) : void</code> in class <code>org.sufficientlysecure.keychain.ui.DecryptFilesActivity</code>"
        ]
    },
    {
        "id": 1119037,
        "repository": "https://github.com/apache/pig.git",
        "sha1": "7a1659c12d76b510809dea1dea1f5100bcf4cd60",
        "author": "Xuefu Zhang",
        "time": "6/18/15 1:08 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private initialize() : void</code> extracted from <code>public launchPig(physicalPlan PhysicalPlan, grpName String, pigContext PigContext) : PigStats</code> in class <code>org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher</code>"
        ]
    },
    {
        "id": 1119109,
        "repository": "https://github.com/infinispan/infinispan.git",
        "sha1": "ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
        "author": "Pedro Ruivo",
        "time": "6/18/15 3:08 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createRollbackRpcOptions() : RpcOptions</code> extracted from <code>public visitRollbackCommand(ctx TxInvocationContext, command RollbackCommand) : Object</code> in class <code>org.infinispan.interceptors.distribution.TxDistributionInterceptor</code>",
            "<b>Extract Method</b> <code>private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void</code> extracted from <code>public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object</code> in class <code>org.infinispan.interceptors.TxInterceptor</code>",
            "<b>Extract Method</b> <code>private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void</code> extracted from <code>private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object</code> in class <code>org.infinispan.interceptors.TxInterceptor</code>",
            "<b>Extract Method</b> <code>protected assertNoTransactions(cacheName String) : void</code> extracted from <code>protected assertNoTransactions() : void</code> in class <code>org.infinispan.test.MultipleCacheManagersTest</code>",
            "<b>Extract Method</b> <code>protected eventually(message String, ec Condition, timeout long, pollInterval long, unit TimeUnit) : void</code> extracted from <code>protected eventually(ec Condition, timeout long, pollInterval long, unit TimeUnit) : void</code> in class <code>org.infinispan.test.AbstractInfinispanTest</code>",
            "<b>Extract Method</b> <code>protected eventually(message String, ec Condition, timeoutMillis long, loops int) : void</code> extracted from <code>protected eventually(ec Condition, timeoutMillis long, loops int) : void</code> in class <code>org.infinispan.test.AbstractInfinispanTest</code>",
            "<b>Extract Method</b> <code>public throwRollbackExceptionIfAny() : void</code> extracted from <code>public commit() : void</code> in class <code>org.infinispan.transaction.tm.DummyTransaction</code>",
            "<b>Inline Method</b> <code>private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void</code> inlined to <code>public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object</code> in class <code>org.infinispan.interceptors.distribution.TxDistributionInterceptor</code>",
            "<b>Inline Method</b> <code>protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void</code> inlined to <code>private localGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand, isGetCacheEntry boolean) : Object</code> and <code>private remoteGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand) : InternalCacheEntry</code> in class <code>org.infinispan.interceptors.distribution.TxDistributionInterceptor</code>",
            "<b>Move Attribute</b> <code>private configuration : Configuration</code> from class <code>org.infinispan.tx.TransactionXaAdapterTmIntegrationTest</code> to class <code>org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl</code>"
        ]
    },
    {
        "id": 1118835,
        "repository": "https://github.com/grails/grails-core.git",
        "sha1": "480537e0f8aaf50a7648bf445b33230aa32a9b44",
        "author": "graemerocher",
        "time": "6/18/15 5:02 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public weaveMixinsIntoClass(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void</code> extracted from <code>public weaveMixinsIntoClass(classNode ClassNode, values ListExpression) : void</code> in class <code>org.grails.compiler.injection.test.TestMixinTransformation</code>",
            "<b>Extract Method</b> <code>public weaveTestMixins(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void</code> extracted from <code>public weaveTestMixins(classNode ClassNode, values ListExpression) : void</code> in class <code>org.grails.compiler.injection.test.TestMixinTransformation</code>"
        ]
    },
    {
        "id": 1118473,
        "repository": "https://github.com/jfinal/jfinal.git",
        "sha1": "881baed894540031bd55e402933bcad28b74ca88",
        "author": "James",
        "time": "6/18/15 5:57 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private validateIntegerValue(value String, min int, max int, errorKey String, errorMessage String) : void</code> extracted from <code>protected validateInteger(field String, min int, max int, errorKey String, errorMessage String) : void</code> in class <code>com.jfinal.validate.Validator</code>",
            "<b>Extract Method</b> <code>private validateLongValue(value String, errorKey String, errorMessage String) : void</code> extracted from <code>protected validateLong(field String, errorKey String, errorMessage String) : void</code> in class <code>com.jfinal.validate.Validator</code>",
            "<b>Extract Method</b> <code>private validateLongValue(value String, min long, max long, errorKey String, errorMessage String) : void</code> extracted from <code>protected validateLong(field String, min long, max long, errorKey String, errorMessage String) : void</code> in class <code>com.jfinal.validate.Validator</code>"
        ]
    },
    {
        "id": 1118403,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "021bf45623b748e70f20d956e86d595191241786",
        "author": "Simon Brandhof",
        "time": "6/18/15 6:52 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>package getPluginMetrics() : List&lt;Metric&gt;</code> extracted from <code>public start() : void</code> in class <code>org.sonar.server.startup.RegisterMetrics</code>"
        ]
    },
    {
        "id": 1119086,
        "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
        "sha1": "f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
        "author": "Oguz Kocer",
        "time": "6/18/15 7:25 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getIconImageURL(size int, iconUrl String, blogUrl String) : String</code> extracted from <code>public getIconImageURL(size int) : String</code> in class <code>org.wordpress.android.models.Blog</code>"
        ]
    },
    {
        "id": 1119504,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
        "author": "Mats Rydberg",
        "time": "6/18/15 7:27 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected query(query Query) : PrimitiveLongIterator</code> extracted from <code>public lookup(value Object) : PrimitiveLongIterator</code> and <code>public scan() : PrimitiveLongIterator</code> in class <code>org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader</code>",
            "<b>Extract Superclass</b> <code>org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest</code> from classes <code>org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest</code> and <code>org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest</code>"
        ]
    },
    {
        "id": 1119758,
        "repository": "https://github.com/baasbox/baasbox.git",
        "sha1": "d949fe9079a82ee31aa91244aa67baaf56b7e28f",
        "author": "Claudio",
        "time": "6/18/15 7:33 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public execMultiLineCommands(db ODatabaseRecordTx, log boolean, stopOnException boolean, commands String[]) : void</code> extracted from <code>public execMultiLineCommands(db ODatabaseRecordTx, log boolean, commands String[]) : void</code> in class <code>com.baasbox.db.DbHelper</code>"
        ]
    },
    {
        "id": 1119082,
        "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
        "sha1": "ab298886b59f4ad0235cd6d5764854189eb59eb6",
        "author": "Danilo Ercoli",
        "time": "6/18/15 8:36 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public openPostInReaderOrInAppWebview(ctx Context, remoteBlogID String, remoteItemID String, itemType String, itemURL String) : void</code> extracted from <code>public openPostInReaderOrInAppWebview(ctx Context, post PostModel) : void</code> in class <code>org.wordpress.android.ui.stats.StatsUtils</code>"
        ]
    },
    {
        "id": 1118508,
        "repository": "https://github.com/jberkel/sms-backup-plus.git",
        "sha1": "c265bde2ace252bc1e1c65c6af93520e5994edd2",
        "author": "Jan Berkel",
        "time": "6/18/15 8:52 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getTokenForLogging() : String</code> extracted from <code>public toString() : String</code> in class <code>com.zegoggles.smssync.auth.OAuth2Token</code>"
        ]
    },
    {
        "id": 1119833,
        "repository": "https://github.com/fabric8io/fabric8.git",
        "sha1": "07807aed847e1d0589c094461544e54a2677cbf5",
        "author": "Ioannis Canellos",
        "time": "6/18/15 11:29 AM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>private DEFAULT_CONFIG_FILE_NAME : String</code> from class <code>io.fabric8.maven.ApplyMojo</code> to class <code>io.fabric8.maven.AbstractFabric8Mojo</code>",
            "<b>Pull Up Attribute</b> <code>protected combineDependencies : boolean</code> from class <code>io.fabric8.maven.JsonMojo</code> to class <code>io.fabric8.maven.AbstractFabric8Mojo</code>",
            "<b>Pull Up Method</b> <code>private getDependencies() : Set&lt;File&gt;</code> from class <code>io.fabric8.maven.ApplyMojo</code> to class <code>io.fabric8.maven.AbstractFabric8Mojo</code>",
            "<b>Pull Up Method</b> <code>private hasKubernetesJson(f File) : boolean</code> from class <code>io.fabric8.maven.ApplyMojo</code> to class <code>io.fabric8.maven.AbstractFabric8Mojo</code>",
            "<b>Pull Up Method</b> <code>protected isKubernetesJsonArtifact(classifier String, type String) : boolean</code> from class <code>io.fabric8.maven.JsonMojo</code> to class <code>io.fabric8.maven.AbstractFabric8Mojo</code>"
        ]
    },
    {
        "id": 1119732,
        "repository": "https://github.com/processing/processing.git",
        "sha1": "8707194f003444a9fb8e00bffa2893ef0c2492c6",
        "author": "codeanticode",
        "time": "6/18/15 1:03 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private setFrameCentered() : void</code> inlined to <code>public placeWindow(location int[], editorLocation int[]) : void</code> in class <code>processing.opengl.PSurfaceJOGL</code>"
        ]
    },
    {
        "id": 1119978,
        "repository": "https://github.com/google/closure-compiler.git",
        "sha1": "5a853a60f93e09c446d458673bc7a2f6bb26742c",
        "author": "blickly",
        "time": "6/18/15 2:34 PM",
        "refactorings": [
            "<b>Move Class</b> <code>TypeDeclarationsIRFactory</code> moved from <code>com.google.javascript.jscomp.parsing</code> to <code>com.google.javascript.jscomp.JsdocToEs6TypedConverter</code>"
        ]
    },
    {
        "id": 1119656,
        "repository": "https://github.com/rackerlabs/blueflood.git",
        "sha1": "c76e6e1f27a6697b3b88ad4ed710441b801afb3b",
        "author": "Tilottama Gaat",
        "time": "6/18/15 3:41 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private sendResponseTimer : Timer</code> from class <code>com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler</code> to class <code>com.rackspacecloud.blueflood.http.DefaultHandler</code>",
            "<b>Move Method</b> <code>public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void</code> from class <code>com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler</code> to class <code>com.rackspacecloud.blueflood.http.DefaultHandler</code>"
        ]
    },
    {
        "id": 1120023,
        "repository": "https://github.com/amplab/tachyon.git",
        "sha1": "ed966510ccf8441115614e2258aea61df0ea55f5",
        "author": "Bin Fan",
        "time": "6/18/15 8:46 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private reserveSpace(size long) : void</code> extracted from <code>public addBlockMeta(block BlockMeta) : Optional&lt;BlockMeta&gt;</code> in class <code>tachyon.worker.block.meta.StorageDir</code>"
        ]
    },
    {
        "id": 1119677,
        "repository": "https://github.com/k9mail/k-9.git",
        "sha1": "23c49d834d3859fc76a604da32d1789d2e863303",
        "author": "Marcus Wolschon",
        "time": "6/18/15 9:19 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private buildNotificationNavigationStack(context Context, account Account, message LocalMessage, newMessages int, unreadCount int, allRefs ArrayList&lt;MessageReference&gt;) : TaskStackBuilder</code> extracted from <code>private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void</code> in class <code>com.fsck.k9.controller.MessagingController</code>",
            "<b>Extract Method</b> <code>private setNotificationContent(context Context, message Message, sender CharSequence, subject CharSequence, builder Builder, accountDescr String) : Builder</code> extracted from <code>private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void</code> in class <code>com.fsck.k9.controller.MessagingController</code>"
        ]
    },
    {
        "id": 1119661,
        "repository": "https://github.com/antlr/antlr4.git",
        "sha1": "a9ca2efae56815dc464189b055ffe9da23766f7f",
        "author": "parrt",
        "time": "6/18/15 9:25 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getAmbuityParserInterpreter(g Grammar, originalParser Parser, tokens TokenStream) : ParserInterpreter</code> extracted from <code>public getAllPossibleParseTrees(g Grammar, originalParser Parser, tokens TokenStream, decision int, alts BitSet, startIndex int, stopIndex int, startRuleIndex int) : List&lt;ParserRuleContext&gt;</code> in class <code>org.antlr.v4.tool.GrammarParserInterpreter</code>",
            "<b>Extract Method</b> <code>public getDescendants(t ParseTree) : List&lt;ParseTree&gt;</code> extracted from <code>public descendants(t ParseTree) : List&lt;ParseTree&gt;</code> in class <code>org.antlr.v4.runtime.tree.Trees</code>"
        ]
    },
    {
        "id": 1121362,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "f841d8dda2bf461f595755f85c3eba786783702d",
        "author": "Adam Murdoch",
        "time": "6/19/15 1:38 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private adaptResult(result BuildResult, startTime long, endTime long) : AbstractOperationResult</code> inlined to <code>private adaptResult(source BuildOperationInternal) : AbstractOperationResult</code> in class <code>org.gradle.tooling.internal.provider.runner.ClientForwardingBuildListener</code>"
        ]
    },
    {
        "id": 1120191,
        "repository": "https://github.com/eclipse/jetty.project.git",
        "sha1": "13b63c194b010201c439932ece2f1bc628ebf287",
        "author": "Greg Wilkins",
        "time": "6/19/15 2:27 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private __propertyPattern : Pattern</code> from class <code>org.eclipse.jetty.xml.XmlConfiguration</code> to class <code>org.eclipse.jetty.start.Props</code>"
        ]
    },
    {
        "id": 1119473,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "0eaa5217883cfeca688aad1d462192c194741827",
        "author": "Jean-Baptiste Lievremont",
        "time": "6/19/15 9:57 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private userWriter : UserJsonWriter</code> from class <code>org.sonar.server.issue.ws.IssueJsonWriter</code> to class <code>org.sonar.server.issue.InternalRubyIssueService</code>"
        ]
    },
    {
        "id": 1120106,
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "ece12f9d370108549fffac105e4bcb7faeaaf124",
        "author": "Sam Brannen",
        "time": "6/19/15 10:27 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private assertMissingTextAttribute(attributes Map&lt;String,Object&gt;) : void</code> extracted from <code>public synthesizeAnnotationFromMapWithMissingAttributeValue() : void</code> and <code>public synthesizeAnnotationFromMapWithNullAttributeValue() : void</code> in class <code>org.springframework.core.annotation.AnnotationUtilsTests</code>"
        ]
    },
    {
        "id": 1120213,
        "repository": "https://github.com/infinispan/infinispan.git",
        "sha1": "03573a655bcbb77f7a76d8e22d851cc22796b4f8",
        "author": "William Burns",
        "time": "6/19/15 11:03 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected shouldInvoke(event Event&lt;K,V&gt;) : boolean</code> extracted from <code>protected shouldInvoke(event CacheEntryEvent&lt;K,V&gt;, isLocalNodePrimaryOwner boolean) : CacheEntryEvent&lt;K,V&gt;</code> in class <code>org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation</code>"
        ]
    },
    {
        "id": 1121377,
        "repository": "https://github.com/JetBrains/MPS.git",
        "sha1": "797fb7fc1415ac0ebe9a8262677dfa4462ed6cb4",
        "author": "Artem Tikhomirov",
        "time": "6/19/15 11:28 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private doAppendNode(node SNode) : void</code> extracted from <code>public appendNode(node SNode) : void</code> in class <code>jetbrains.mps.text.impl.TextGenSupport</code>"
        ]
    },
    {
        "id": 1120196,
        "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
        "sha1": "4bfe164cc8b4556b98df18098b162e0a84038b32",
        "author": "Danilo Ercoli",
        "time": "6/19/15 12:15 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private trackLastVisibleTab(position int) : void</code> extracted from <code>protected onResume() : void</code> in class <code>org.wordpress.android.ui.main.WPMainActivity</code>"
        ]
    },
    {
        "id": 1120077,
        "repository": "https://github.com/apache/camel.git",
        "sha1": "5e08a9e8e93a2f117b5fbec9c6d54500d8e99a4d",
        "author": "Willem Jiang",
        "time": "6/19/15 12:15 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public copyAttachments(that Message) : void</code> extracted from <code>public copyFrom(that Message) : void</code> in class <code>org.apache.camel.impl.MessageSupport</code>"
        ]
    },
    {
        "id": 1120314,
        "repository": "https://github.com/rstudio/rstudio.git",
        "sha1": "4983f83d1bedb7b737fc56d409c1c06b04e34e4e",
        "author": "Kevin Ushey",
        "time": "6/19/15 2:47 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private setValue(value boolean, force boolean) : void</code> extracted from <code>public setValue(value boolean) : void</code> in class <code>org.rstudio.core.client.widget.ThemedCheckBox</code>"
        ]
    },
    {
        "id": 1120442,
        "repository": "https://github.com/liferay/liferay-plugins.git",
        "sha1": "7c7ecf4cffda166938efd0ae34830e2979c25c73",
        "author": "Shinn Lok",
        "time": "6/19/15 3:00 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected updateSyncDLObject(syncDLObject SyncDLObject) : void</code> extracted from <code>public onAfterUpdate(resourcePermission ResourcePermission) : void</code> in class <code>com.liferay.sync.hook.listeners.ResourcePermissionModelListener</code>"
        ]
    },
    {
        "id": 1120321,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "a896b8bf8f7067e41291eb7771deed76b3621fa0",
        "author": "Anish Khanzode",
        "time": "6/19/15 4:07 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private m_framework : Framework</code> from class <code>org.voltdb.importer.ImportProcessor.BundleWrapper</code> to class <code>org.voltdb.importer.ImportProcessor</code>"
        ]
    },
    {
        "id": 1120985,
        "repository": "https://github.com/mockito/mockito.git",
        "sha1": "2d036ecf1d7170b4ec7346579a1ef8904109530a",
        "author": "Brice Dutheil",
        "time": "6/19/15 4:07 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private allMockedTypes(features MockFeatures&lt;T&gt;) : Class&lt;?&gt;[]</code> extracted from <code>public generateMockClass(features MockFeatures&lt;T&gt;) : Class&lt;? extends T&gt;</code> in class <code>org.mockito.internal.creation.bytebuddy.MockBytecodeGenerator</code>"
        ]
    },
    {
        "id": 1120391,
        "repository": "https://github.com/apache/tomcat.git",
        "sha1": "40f00732b9652350ac11830367fd32db67987fc7",
        "author": "Mark Thomas",
        "time": "6/19/15 4:38 PM",
        "refactorings": [
            "<b>Move Multiple Attributes</b> from class <code>org.apache.tomcat.util.net.SSLHostConfig</code> to <code>org.apache.tomcat.util.net.SSLHostConfigCertificate</code>:<ul><li><code>private certificateKeyAlias : String</code></li><li><code>private certificateKeystoreFile : String</code></li><li><code>private certificateKeystorePassword : String</code></li><li><code>private certificateKeystoreProvider : String</code></li><li><code>private certificateKeystoreType : String</code></li></ul>",
            "<b>Move Multiple Methods</b> from class <code>org.apache.tomcat.util.net.SSLHostConfig</code> to <code>org.apache.tomcat.util.net.SSLHostConfigCertificate</code>:<ul><li><code>public getCertificateKeyAlias() : String</code></li><li><code>public getCertificateKeystoreFile() : String</code></li><li><code>public getCertificateKeystorePassword() : String</code></li></ul>"
        ]
    },
    {
        "id": 1120931,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "7e104c3ed4b80ec8e9b72356396f879d1067cc40",
        "author": "Eugene Susla",
        "time": "6/19/15 6:27 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createBuckFiles(buckFilesData Map&lt;Path,SortedSet&lt;Prebuilt&gt;&gt;) : void</code> extracted from <code>public resolve(mavenCoords String[]) : void</code> in class <code>com.facebook.buck.maven.Resolver</code>",
            "<b>Extract Method</b> <code>private downloadArtifact(artifactToDownload Artifact, repoSys RepositorySystem, session RepositorySystemSession, buckFiles Map&lt;Path,SortedSet&lt;Prebuilt&gt;&gt;, graph MutableDirectedGraph&lt;Artifact&gt;) : void</code> extracted from <code>public resolve(mavenCoords String[]) : void</code> in class <code>com.facebook.buck.maven.Resolver</code>"
        ]
    },
    {
        "id": 1121053,
        "repository": "https://github.com/processing/processing.git",
        "sha1": "acf67c8cb58d13827e14bbeeec11a66f9277015f",
        "author": "Ben Fry",
        "time": "6/19/15 6:31 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>protected runSketchEDT(args String[], constructedSketch PApplet) : void</code> inlined to <code>public runSketch(args String[], constructedSketch PApplet) : void</code> in class <code>processing.core.PApplet</code>"
        ]
    },
    {
        "id": 1121499,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "e2dd54ab180b577b08cf6b0e69310ac81fc99fd3",
        "author": "Jason Dere",
        "time": "6/19/15 7:19 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private foldExprFull(desc ExprNodeDesc, constants Map&lt;ColumnInfo,ExprNodeDesc&gt;, cppCtx ConstantPropagateProcCtx, op Operator&lt;? extends Serializable&gt;, tag int, propagate boolean) : ExprNodeDesc</code> extracted from <code>private foldExpr(desc ExprNodeDesc, constants Map&lt;ColumnInfo,ExprNodeDesc&gt;, cppCtx ConstantPropagateProcCtx, op Operator&lt;? extends Serializable&gt;, tag int, propagate boolean) : ExprNodeDesc</code> in class <code>org.apache.hadoop.hive.ql.optimizer.ConstantPropagateProcFactory</code>"
        ]
    },
    {
        "id": 1121439,
        "repository": "https://github.com/opentripplanner/OpenTripPlanner.git",
        "sha1": "e32f161fc023d1ee153c49df312ae10b06941465",
        "author": "Andrew Byrd",
        "time": "6/19/15 7:36 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.opentripplanner.analyst.qbroker</code> to <code>org.opentripplanner.analyst.broker</code>:<ul><li><code>BrokerHttpHandler</code></li><li><code>BrokerMain</code></li><li><code>CircularList</code></li><li><code>QueuePath</code></li><li><code>QueueType</code></li><li><code>User</code></li></ul>"
        ]
    },
    {
        "id": 1121219,
        "repository": "https://github.com/ratpack/ratpack.git",
        "sha1": "da6167af3bdbf7663af6c20fb603aba27dd5e174",
        "author": "Luke Daley",
        "time": "6/19/15 10:53 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private post(responseStatus HttpResponseStatus, lastContentFuture ChannelFuture) : void</code> extracted from <code>private post(responseStatus HttpResponseStatus) : void</code> in class <code>ratpack.server.internal.DefaultResponseTransmitter</code>"
        ]
    },
    {
        "id": 1120998,
        "repository": "https://github.com/brettwooldridge/HikariCP.git",
        "sha1": "cd8c4d578a609bdd6395d3a8c49bfd19ed700dea",
        "author": "Brett Wooldridge",
        "time": "6/20/15 3:06 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.zaxxer.hikari.util</code> to <code>com.zaxxer.hikari.util.ClockSource</code>:<ul><li><code>MillisecondClockSource</code></li><li><code>NanosecondClockSource</code></li></ul>"
        ]
    },
    {
        "id": 1120997,
        "repository": "https://github.com/brettwooldridge/HikariCP.git",
        "sha1": "1571049ec04b1e7e6f082ed5ec071584e7200c12",
        "author": "Brett Wooldridge",
        "time": "6/20/15 3:12 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.zaxxer.hikari.util</code> to <code>com.zaxxer.hikari.util.ConcurrentBag</code>:<ul><li><code>IBagStateListener</code></li><li><code>IConcurrentBagEntry</code></li></ul>"
        ]
    },
    {
        "id": 1121744,
        "repository": "https://github.com/scobal/seyren.git",
        "sha1": "5fb36a321af7df470d4c845cb18da8f85be31c38",
        "author": "alenkacz",
        "time": "6/20/15 4:49 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private evaluateTemplate(check Check, subscription Subscription, alerts List&lt;Alert&gt;, templateContent String) : String</code> extracted from <code>public createBody(check Check, subscription Subscription, alerts List&lt;Alert&gt;) : String</code> in class <code>com.seyren.core.util.velocity.VelocityEmailHelper</code>"
        ]
    },
    {
        "id": 1120836,
        "repository": "https://github.com/SlimeKnights/TinkersConstruct.git",
        "sha1": "71820e573134be3fad3935035249cd77c4412f4e",
        "author": "Bernhard Bonigl",
        "time": "6/20/15 11:27 AM",
        "refactorings": [
            "<b>Move Class</b> <code>RecipeMatch</code> moved from <code>tconstruct.library.modifiers</code> to <code>tconstruct.library.mantle</code>"
        ]
    },
    {
        "id": 1120602,
        "repository": "https://github.com/open-keychain/open-keychain.git",
        "sha1": "de50b3becb31c367f867382ff9cd898ba1628350",
        "author": "Adithya Abraham Philip",
        "time": "6/20/15 3:42 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public isOrbotInRequiredState(middleButton int, middleButtonRunnable Runnable, fragmentActivity FragmentActivity) : boolean</code> extracted from <code>public isOrbotInRequiredState(middleButton int, middleButtonRunnable Runnable, proxyPrefs ProxyPrefs, fragmentActivity FragmentActivity) : boolean</code> in class <code>org.sufficientlysecure.keychain.util.orbot.OrbotHelper</code>"
        ]
    },
    {
        "id": 1120722,
        "repository": "https://github.com/osmandapp/Osmand.git",
        "sha1": "c45b9e6615181b7d8f4d7b5b1cc141169081c02c",
        "author": "Victor Shcherb",
        "time": "6/20/15 5:09 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private addPreviousToActionPoints(lastProjection Location, routeNodes List&lt;Location&gt;, DISTANCE_ACTION double, prevFinishPoint int, routePoint int, loc Location) : void</code> extracted from <code>private calculateActionPoints(topLatitude double, leftLongitude double, bottomLatitude double, rightLongitude double, lastProjection Location, routeNodes List&lt;Location&gt;, cd int, it Iterator&lt;RouteDirectionInfo&gt;, zoom int) : void</code> in class <code>net.osmand.plus.views.RouteLayer</code>"
        ]
    },
    {
        "id": 1121732,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "ffae1691c0cd526ed1095fbabbc0855d016790d7",
        "author": "Jinfeng Ni",
        "time": "6/20/15 7:42 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected convertToDrel(relNode RelNode) : DrillRel</code> extracted from <code>protected convertToDrel(relNode RelNode, validatedRowType RelDataType) : DrillRel</code> in class <code>org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler</code>",
            "<b>Extract Method</b> <code>protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode</code> extracted from <code>public getPlan(sqlNode SqlNode) : PhysicalPlan</code> in class <code>org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler</code>"
        ]
    },
    {
        "id": 1120496,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "5d1a70a4d32ac4c96a32535c68c69b20288d8968",
        "author": "jinchul.kim",
        "time": "6/20/15 9:39 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public killProcessGroup(uid int, pid int) : void</code> extracted from <code>private crashApplication(r ProcessRecord, crashInfo CrashInfo) : void</code> in class <code>com.android.server.am.ActivityManagerService</code>"
        ]
    },
    {
        "id": 1120803,
        "repository": "https://github.com/codefollower/Lealone.git",
        "sha1": "7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
        "author": "Honghua Zhu",
        "time": "6/20/15 11:57 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package setPassword(user User, session Session, password Expression) : void</code> extracted from <code>public update() : int</code> in class <code>org.lealone.command.ddl.CreateUser</code>",
            "<b>Extract Method</b> <code>package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void</code> extracted from <code>public update() : int</code> in class <code>org.lealone.command.ddl.CreateUser</code>"
        ]
    },
    {
        "id": 1120898,
        "repository": "https://github.com/joel-costigliola/assertj-core.git",
        "sha1": "b36ab386559d04db114db8edd87c8d4cbf850c12",
        "author": "Joel Costigliola",
        "time": "6/21/15 2:25 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.assertj.core.api.StrictAssertions</code> from class <code>org.assertj.core.api.Assertions</code>"
        ]
    },
    {
        "id": 1121417,
        "repository": "https://github.com/languagetool-org/languagetool.git",
        "sha1": "bec15926deb49d2b3f7b979d4cfc819947a434ec",
        "author": "Andriy Rysin",
        "time": "6/21/15 12:33 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>public VIDMINKY_MAP : Map&lt;String,String&gt;</code> from class <code>org.languagetool.tagging.uk.UkrainianTagger</code> to class <code>org.languagetool.tagging.uk.PosTagHelper</code>"
        ]
    },
    {
        "id": 1120785,
        "repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
        "sha1": "4ffcb5a65e6d24c58ef75a5cd7692e875619548d",
        "author": "Justin Wetherell",
        "time": "6/21/15 4:41 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private collectGarbage() : void</code> extracted from <code>public main(args String[]) : void</code> in class <code>com.jwetherell.algorithms.sorts.timing.SortsTiming</code>"
        ]
    },
    {
        "id": 1120782,
        "repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
        "sha1": "f2385a56e6aa040ea4ff18a23ce5b63a4eeacf29",
        "author": "Justin Wetherell",
        "time": "6/21/15 5:27 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private putOutTheGarbage() : void</code> extracted from <code>public main(args String[]) : void</code> in class <code>com.jwetherell.algorithms.sorts.timing.SortsTiming</code>"
        ]
    },
    {
        "id": 1121326,
        "repository": "https://github.com/droolsjbpm/drools.git",
        "sha1": "c8e09e2056c54ead97bce4386a25b222154223b1",
        "author": "kedzie",
        "time": "6/21/15 6:50 PM",
        "refactorings": [
            "<b>Extract Interface</b> <code>org.drools.core.util.ByteArrayClassLoader</code> from type <code>org.drools.core.base.ClassFieldAccessorCache.DefaultByteArrayClassLoader</code>",
            "<b>Extract Method</b> <code>public instantiateObject(className String, args Object[]) : Object</code> extracted from <code>public instantiateObject(className String) : Object</code> in class <code>org.drools.core.util.ClassUtils</code>",
            "<b>Extract Method</b> <code>public loadClass(className String, classLoader ClassLoader) : Class&lt;?&gt;</code> extracted from <code>public instantiateObject(className String, classLoader ClassLoader) : Object</code> in class <code>org.drools.core.util.ClassUtils</code>"
        ]
    },
    {
        "id": 1120650,
        "repository": "https://github.com/querydsl/querydsl.git",
        "sha1": "09b9d989658ef5bf9333c081c92b57a7611ad207",
        "author": "Ruben Dijkstra",
        "time": "6/21/15 7:29 PM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest</code> from classes <code>com.querydsl.sql.types.JSR310InstantTypeTest</code> and 6 others"
        ]
    },
    {
        "id": 1121426,
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "dd4bc630c3de70204081ab196945d6b55ab03beb",
        "author": "Juergen Hoeller",
        "time": "6/21/15 7:29 PM",
        "refactorings": [
            "<b>Move Class</b> <code>CompletableFutureDelegate</code> moved from <code>org.springframework.aop.interceptor.AsyncExecutionInterceptor</code> to <code>org.springframework.aop.interceptor.AsyncExecutionAspectSupport</code>",
            "<b>Pull Up Attribute</b> <code>private completableFuturePresent : boolean</code> from class <code>org.springframework.aop.interceptor.AsyncExecutionInterceptor</code> to class <code>org.springframework.aop.interceptor.AsyncExecutionAspectSupport</code>"
        ]
    },
    {
        "id": 1120903,
        "repository": "https://github.com/k9mail/k-9.git",
        "sha1": "9d44f0e06232661259681d64002dd53c7c43099d",
        "author": "cketti",
        "time": "6/21/15 7:43 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private handleSendFailure(account Account, localStore Store, localFolder Folder, message Message, exception Exception, permanentFailure boolean) : void</code> extracted from <code>public sendPendingMessagesSynchronous(account Account) : void</code> in class <code>com.fsck.k9.controller.MessagingController</code>"
        ]
    },
    {
        "id": 1121834,
        "repository": "https://github.com/languagetool-org/languagetool.git",
        "sha1": "01cddc5afb590b4d36cb784637a8ea8aa31d3561",
        "author": "Daniel Naber",
        "time": "6/22/15 5:37 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createNonOfficeElements(cons GridBagConstraints, portPanel JPanel) : void</code> extracted from <code>public show(rules List&lt;Rule&gt;) : void</code> in class <code>org.languagetool.gui.ConfigurationDialog</code>",
            "<b>Extract Method</b> <code>private getMotherTonguePanel(cons GridBagConstraints) : JPanel</code> extracted from <code>public show(rules List&lt;Rule&gt;) : void</code> in class <code>org.languagetool.gui.ConfigurationDialog</code>",
            "<b>Extract Method</b> <code>private getMouseAdapter() : MouseAdapter</code> extracted from <code>public show(rules List&lt;Rule&gt;) : void</code> in class <code>org.languagetool.gui.ConfigurationDialog</code>",
            "<b>Extract Method</b> <code>private getTreeButtonPanel() : JPanel</code> extracted from <code>public show(rules List&lt;Rule&gt;) : void</code> in class <code>org.languagetool.gui.ConfigurationDialog</code>",
            "<b>Extract Method</b> <code>private getTreeModel(rootNode DefaultMutableTreeNode) : DefaultTreeModel</code> extracted from <code>public show(rules List&lt;Rule&gt;) : void</code> in class <code>org.languagetool.gui.ConfigurationDialog</code>"
        ]
    },
    {
        "id": 1122167,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
        "author": "Alistair Jones",
        "time": "6/22/15 7:06 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private availability() : Availability</code> extracted from <code>private availability(millis long) : Availability</code> in class <code>org.neo4j.kernel.AvailabilityGuard</code>"
        ]
    },
    {
        "id": 1121723,
        "repository": "https://github.com/wicketstuff/core.git",
        "sha1": "8ea46f48063c38473c12ca7c114106ca910b6e74",
        "author": "Andrea Del Bene",
        "time": "6/22/15 7:56 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private testRenderedTab() : void</code> extracted from <code>public renderSimpleTab() : void</code> in class <code>org.wicketstuff.foundation.tab.FoundationTabTest</code>"
        ]
    },
    {
        "id": 1121850,
        "repository": "https://github.com/mongodb/morphia.git",
        "sha1": "70a25d4afdc435e9cad4460b2a20b7aabdd21e35",
        "author": "Ross Lodge",
        "time": "6/22/15 10:05 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private performBasicMappingTest() : void</code> extracted from <code>public testBasicMapping() : void</code> in class <code>org.mongodb.morphia.TestMapping</code>"
        ]
    },
    {
        "id": 1121836,
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "31a5434ea433bdec2283797bf9415c02bb2f41c1",
        "author": "Sebastien Deleuze",
        "time": "6/22/15 12:05 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected addDefaultHeaders(headers HttpHeaders, t T, contentType MediaType) : void</code> extracted from <code>public write(t T, contentType MediaType, outputMessage HttpOutputMessage) : void</code> in class <code>org.springframework.http.converter.AbstractHttpMessageConverter</code>"
        ]
    },
    {
        "id": 1121861,
        "repository": "https://github.com/Graylog2/graylog2-server.git",
        "sha1": "72acc2126611f0bff9b672de18b9b2f8dacdc03a",
        "author": "Kay Roepke",
        "time": "6/22/15 1:20 PM",
        "refactorings": [
            "<b>Extract Interface</b> <code>org.graylog2.bootstrap.CliCommand</code> from types <code>org.graylog2.bootstrap.CmdLineTool</code> and <code>org.graylog2.bootstrap.commands.ShowVersion</code>",
            "<b>Move Class</b> <code>UI</code> moved from <code>org.graylog2</code> to <code>org.graylog2.shared</code>",
            "<b>Move Class</b> <code>Server</code> moved from <code>org.graylog2.bootstrap.commands</code> to <code>org.graylog2.commands</code>",
            "<b>Move Class</b> <code>Radio</code> moved from <code>org.graylog2.bootstrap.commands</code> to <code>org.graylog2.radio.commands</code>",
            "<b>Move Classes</b> from <code>org.graylog2.bootstrap.commands.journal</code> to <code>org.graylog2.commands.journal</code>:<ul><li><code>AbstractJournalCommand</code></li><li><code>JournalDecode</code></li><li><code>JournalShow</code></li><li><code>JournalTruncate</code></li></ul>"
        ]
    },
    {
        "id": 1122164,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "001de307492df8f84ad15f6aaa0bd1e748d4ce27",
        "author": "Davide Grohmann",
        "time": "6/22/15 1:34 PM",
        "refactorings": [
            "<b>Move Class</b> <code>Recovery</code> moved from <code>org.neo4j.kernel</code> to <code>org.neo4j.kernel.recovery</code>"
        ]
    },
    {
        "id": 1121855,
        "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
        "sha1": "3b95d10985776fb7b710089ff71074fd2bf860ee",
        "author": "Will Kwon",
        "time": "6/22/15 1:48 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getBlogsForCurrentView() : List&lt;Map&lt;String,Object&gt;&gt;</code> extracted from <code>protected doInBackground(params Void[]) : SiteList</code> in class <code>org.wordpress.android.ui.main.SitePickerAdapter.LoadSitesTask</code>"
        ]
    },
    {
        "id": 1122159,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "77fab3caea4495798a248035f0e928f745c7c2db",
        "author": "Jacob Hansson",
        "time": "6/22/15 2:06 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>public releaseAllExclusive() : void</code> inlined to <code>public releaseAll() : void</code> in class <code>org.neo4j.kernel.impl.locking.community.CommunityLockClient</code>",
            "<b>Inline Method</b> <code>public releaseAllShared() : void</code> inlined to <code>public releaseAll() : void</code> in class <code>org.neo4j.kernel.impl.locking.community.CommunityLockClient</code>"
        ]
    },
    {
        "id": 1121720,
        "repository": "https://github.com/mrniko/redisson.git",
        "sha1": "186357ac6c2da1a5a12c0287a08408ac5ec6683b",
        "author": "Nikita",
        "time": "6/22/15 2:24 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public createClient(host String, port int, timeout int) : RedisClient</code> extracted from <code>public createClient(host String, port int) : RedisClient</code> in class <code>org.redisson.connection.MasterSlaveConnectionManager</code>"
        ]
    },
    {
        "id": 1121538,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "ebb1c2c364e888d4a0f47abe691cb2bad4eb4e75",
        "author": "Xin Jia",
        "time": "6/22/15 3:24 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private isGroupbyMatchingIndex(matchingCase MatViewIndexMacthingGroupby, groupbyColRefs List&lt;ColumnRef&gt;, groupbyExprs List&lt;AbstractExpression&gt;, indexedColRefs List&lt;ColumnRef&gt;, indexedExprs List&lt;AbstractExpression&gt;, srcColumnArray List&lt;Column&gt;) : boolean</code> extracted from <code>private findBestMatchIndexForMatviewMinOrMax(matviewinfo MaterializedViewInfo, srcTable Table, groupbyExprs List&lt;AbstractExpression&gt;, singleUniqueMinMaxAggExpr AbstractExpression) : Index</code> in class <code>org.voltdb.compiler.DDLCompiler</code>",
            "<b>Extract Method</b> <code>private isIndexOptimalForMinMax(matchingCase MatViewIndexMacthingGroupby, singleUniqueMinMaxAggExpr AbstractExpression, indexedColRefs List&lt;ColumnRef&gt;, indexedExprs List&lt;AbstractExpression&gt;, srcColumnArray List&lt;Column&gt;) : boolean</code> extracted from <code>private findBestMatchIndexForMatviewMinOrMax(matviewinfo MaterializedViewInfo, srcTable Table, groupbyExprs List&lt;AbstractExpression&gt;, singleUniqueMinMaxAggExpr AbstractExpression) : Index</code> in class <code>org.voltdb.compiler.DDLCompiler</code>"
        ]
    },
    {
        "id": 1122778,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "4d05a3b1168441216dcaea8282c39338285182af",
        "author": "alarmnummer",
        "time": "6/22/15 3:53 PM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>com.hazelcast.spi.impl.SimpleExecutionCallback</code> from classes <code>com.hazelcast.cache.impl.operation.CacheCreateConfigOperation.CacheConfigCreateCallback</code> and 3 others",
            "<b>Move Class</b> <code>ExecutorCallbackAdapter</code> moved from <code>com.hazelcast.spi.impl.operationservice.impl.InvocationFuture</code> to <code>com.hazelcast.spi.InvocationBuilder</code>"
        ]
    },
    {
        "id": 1122760,
        "repository": "https://github.com/openhab/openhab.git",
        "sha1": "a9b1e5d67421ed98b49ae25c3bbd6e27a0ab1590",
        "author": "Bernd Pfrommer",
        "time": "6/22/15 4:45 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private bail(txt String) : void</code> extracted from <code>public processData() : Msg</code> in class <code>org.openhab.binding.insteonplm.internal.message.MsgFactory</code>",
            "<b>Extract Method</b> <code>private processBindingConfiguration() : void</code> extracted from <code>public updated(config Dictionary&lt;String,?&gt;) : void</code> in class <code>org.openhab.binding.insteonplm.InsteonPLMActiveBinding</code>"
        ]
    },
    {
        "id": 1123128,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "711992f22ae6d6dfc43bdb4c01bf8f921d175b38",
        "author": "dbarclay",
        "time": "6/22/15 5:05 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private nextRowInternally() : boolean</code> extracted from <code>public next() : boolean</code> in class <code>org.apache.drill.jdbc.impl.DrillCursor</code>"
        ]
    },
    {
        "id": 1122348,
        "repository": "https://github.com/mongodb/mongo-java-driver.git",
        "sha1": "8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
        "author": "Jeff Yemin",
        "time": "6/22/15 6:05 PM",
        "refactorings": [
            "<b>Move Class</b> <code>JsonPoweredTestHelper</code> moved from <code>com.mongodb</code> to <code>util</code>"
        ]
    },
    {
        "id": 1121904,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "f166866cd68efa963534c5bc7fc9ca38e4aa2838",
        "author": "Kra1o5",
        "time": "6/22/15 7:02 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>public is24HourFormatLocale(context Context) : boolean</code> inlined to <code>public is24HourFormat(context Context, userHandle int) : boolean</code> in class <code>android.text.format.DateFormat</code>"
        ]
    },
    {
        "id": 1122130,
        "repository": "https://github.com/facebook/presto.git",
        "sha1": "b7f4914d81a7a618acf2eba52af1093fc23cfba9",
        "author": "Nileema Shingte",
        "time": "6/22/15 9:56 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private tryGetLookupSource() : void</code> extracted from <code>public getOutput() : Page</code> and <code>public needsInput() : boolean</code> in class <code>com.facebook.presto.operator.LookupJoinOperator</code>"
        ]
    },
    {
        "id": 1122508,
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
        "author": "Rossen Stoyanchev",
        "time": "6/22/15 11:30 PM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.springframework.web.socket.server.support.AbstractHandshakeHandler</code> from class <code>org.springframework.web.socket.server.support.DefaultHandshakeHandler</code>"
        ]
    },
    {
        "id": 1121897,
        "repository": "https://github.com/spring-projects/spring-boot.git",
        "sha1": "becced5f0b7bac8200df7a5706b568687b517b90",
        "author": "Tomasz Przyby?a",
        "time": "6/23/15 3:43 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createEnvironmentPreparedEvent(propName String, propValue String) : SpringApplicationEvent</code> extracted from <code>public differentEventTypes() : void</code> in class <code>org.springframework.boot.actuate.system.ApplicationPidFileWriterTests</code>",
            "<b>Extract Method</b> <code>private createPreparedEvent(propName String, propValue String) : SpringApplicationEvent</code> extracted from <code>public overridePidFileWithSpring() : void</code> in class <code>org.springframework.boot.actuate.system.ApplicationPidFileWriterTests</code>"
        ]
    },
    {
        "id": 1121973,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "6540dde58190f642e59ca10516f84eb85f855373",
        "author": "Alexey Kudravtsev",
        "time": "6/23/15 6:36 AM",
        "refactorings": [
            "<b>Move Method</b> <code>public averageAmongMedians(time long[], part int) : long</code> from class <code>com.intellij.testFramework.PlatformTestUtil</code> to class <code>com.intellij.util.ArrayUtil</code>"
        ]
    },
    {
        "id": 1122338,
        "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
        "sha1": "0b93231025f51c7ec62fd8588985c5dc807854e4",
        "author": "Sergey Ignatov",
        "time": "6/23/15 6:55 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected doSomething(virtualFile VirtualFile, module Module, project Project, title String, withProgress boolean) : boolean</code> extracted from <code>protected doSomething(virtualFile VirtualFile, module Module, project Project, title String) : boolean</code> in class <code>com.goide.actions.fmt.GoExternalToolsAction</code>"
        ]
    },
    {
        "id": 1122401,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
        "author": "branimir",
        "time": "6/23/15 8:03 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void</code> extracted from <code>private generateFakeEndpoints(numOldNodes int) : void</code> in class <code>org.apache.cassandra.dht.BootStrapperTest</code>",
            "<b>Extract Method</b> <code>private getSpecifiedTokens(metadata TokenMetadata, initialTokens Collection&lt;String&gt;) : Collection&lt;Token&gt;</code> extracted from <code>public getBootstrapTokens(metadata TokenMetadata) : Collection&lt;Token&gt;</code> in class <code>org.apache.cassandra.dht.BootStrapper</code>",
            "<b>Extract Method</b> <code>public getRandomToken(r Random) : LongToken</code> extracted from <code>public getRandomToken() : LongToken</code> in class <code>org.apache.cassandra.dht.Murmur3Partitioner</code>"
        ]
    },
    {
        "id": 1123482,
        "repository": "https://github.com/infinispan/infinispan.git",
        "sha1": "4184c577f4bbc57f3ac13639557cfd99cdaca3e7",
        "author": "Karsten Blees",
        "time": "6/23/15 8:24 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private stopped : boolean</code> from class <code>org.infinispan.persistence.async.State</code> to class <code>org.infinispan.persistence.async.AsyncCacheWriter</code>"
        ]
    },
    {
        "id": 1122541,
        "repository": "https://github.com/mongodb/morphia.git",
        "sha1": "5db323b99f7064af8780f2c35f245461cf55cc8e",
        "author": "Justin Lee",
        "time": "6/23/15 9:30 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private performBasicMappingTest() : void</code> extracted from <code>public testBasicMapping() : void</code> in class <code>org.mongodb.morphia.TestMapping</code>"
        ]
    },
    {
        "id": 1122454,
        "repository": "https://github.com/crate/crate.git",
        "sha1": "5373a852a7e45715e0a6771b7cd56592994c07dd",
        "author": "Philipp Bogensberger",
        "time": "6/23/15 10:52 AM",
        "refactorings": [
            "<b>Push Down Method</b> <code>public plan() : Plan</code> from class <code>io.crate.planner.node.dql.ESDQLPlanNode</code> to class <code>io.crate.planner.node.dql.ESGetNode</code>"
        ]
    },
    {
        "id": 1123108,
        "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
        "sha1": "b8929ccb4057c74ac64679216487a4abcd3ae1c3",
        "author": "Alexander Zolotov",
        "time": "6/23/15 1:18 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected isAvailableInModule(module Module) : boolean</code> extracted from <code>protected setupConfigurationFromContext(configuration GoTestRunConfigurationBase, context ConfigurationContext, sourceElement Ref) : boolean</code> in class <code>com.goide.runconfig.testing.GoTestRunConfigurationProducerBase</code>",
            "<b>Move Multiple Attributes</b> from class <code>com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration</code> to <code>com.goide.runconfig.GoRunUtil</code>:<ul><li><code>private GO_CHECK_GITHUB_IMPORT_PATH : Pattern</code></li><li><code>private GO_CHECK_IMPORT_PATH : Pattern</code></li></ul>"
        ]
    },
    {
        "id": 1123651,
        "repository": "https://github.com/WhisperSystems/TextSecure.git",
        "sha1": "99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
        "author": "Moxie Marlinspike",
        "time": "6/23/15 2:15 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private getSynchronousRecipient(context Context, recipientId long) : Recipient</code> inlined to <code>package getRecipient(context Context, recipientId long, asynchronous boolean) : Recipient</code> in class <code>org.thoughtcrime.securesms.recipients.RecipientProvider</code>",
            "<b>Move Class</b> <code>ExpandingLayerDrawable</code> moved from <code>org.thoughtcrime.securesms.contacts.ContactPhotoFactory</code> to <code>org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto</code>"
        ]
    },
    {
        "id": 1124846,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "d3533c1a0716ca114d294b3ea183504c9725698f",
        "author": "Jacob Hansson",
        "time": "6/23/15 2:17 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createNewThread(group Group, job Runnable, metadata Map&lt;String,String&gt;) : Thread</code> extracted from <code>public schedule(group Group, job Runnable, metadata Map&lt;String,String&gt;) : JobHandle</code> in class <code>org.neo4j.kernel.impl.util.Neo4jJobScheduler</code>"
        ]
    },
    {
        "id": 1123376,
        "repository": "https://github.com/springfox/springfox.git",
        "sha1": "e70b04810eb1e73f60e3d8b3980b8271ce473565",
        "author": "Dilip Krishnan",
        "time": "6/23/15 2:54 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>springfox.documentation.schema.property.provider</code> to <code>springfox.documentation.schema.property</code>:<ul><li><code>DefaultModelPropertiesProvider</code></li><li><code>ModelPropertiesProvider</code></li></ul>"
        ]
    },
    {
        "id": 1123509,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "abe6cd5d4614eb2ae3a78d85196f4d786d5886bd",
        "author": "Pengcheng Xiong",
        "time": "6/23/15 3:02 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private uniqueCounter : int</code> from class <code>org.apache.hadoop.hive.ql.optimizer.calcite.translator.HiveOpConverterPostProc</code> to class <code>org.apache.hadoop.hive.ql.optimizer.calcite.translator.HiveOpConverter</code>"
        ]
    },
    {
        "id": 1123124,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "8815eb7d947be6d2a0281c15a3a60d8ba040db95",
        "author": "Sudheesh Katkam",
        "time": "6/23/15 4:01 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.common.exceptions.TestUserException</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.client.PrintingResultsListener</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.expr.fn.impl.AggregateErrorFunctions</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.planner.sql.DrillSqlWorker</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.planner.sql.SchemaUtilites</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.planner.sql.handlers.CreateTableHandler</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.planner.sql.handlers.ShowTablesHandler</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.store.parquet.ParquetReaderUtility</code>",
            "<b>Move Attribute</b> <code>private logger : Logger</code> from class <code>org.apache.drill.common.exceptions.UserException</code> to class <code>org.apache.drill.exec.vector.complex.impl.$</code>"
        ]
    },
    {
        "id": 1123103,
        "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
        "sha1": "3d5e343df6a39ce3b41624b90974d83e9899541e",
        "author": "Alexander Zolotov",
        "time": "6/23/15 4:19 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public processResolveVariants(processor GoScopeProcessor) : void</code> extracted from <code>public resolveInner() : PsiElement</code> in class <code>com.goide.psi.impl.GoVarReference</code>"
        ]
    },
    {
        "id": 1123153,
        "repository": "https://github.com/spring-projects/spring-integration.git",
        "sha1": "ec5230abc7500734d7b78a176c291378e100a927",
        "author": "Gary Russell",
        "time": "6/23/15 4:35 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private doClose() : void</code> inlined to <code>public close() : void</code> in class <code>org.springframework.integration.ip.tcp.connection.CachingClientConnectionFactory.CachedConnection</code>"
        ]
    },
    {
        "id": 1123501,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "5f78f9ef1e6c798849d34cc66721e6c1d9709b6f",
        "author": "Prasanth Jayachandran",
        "time": "6/23/15 6:19 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package generateSplitsInfo(conf Configuration, numSplits int) : List&lt;OrcSplit&gt;</code> extracted from <code>package generateSplitsInfo(conf Configuration) : List&lt;OrcSplit&gt;</code> in class <code>org.apache.hadoop.hive.ql.io.orc.OrcInputFormat</code>"
        ]
    },
    {
        "id": 1122787,
        "repository": "https://github.com/wildfly/wildfly.git",
        "sha1": "37d842bfed9779e662321a5ee43c36b058386843",
        "author": "Brian Stansberry",
        "time": "6/23/15 8:14 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void</code> extracted from <code>public executeReloadAndWaitForCompletion(client ModelControllerClient) : void</code> in class <code>org.jboss.as.test.shared.ServerReload</code>"
        ]
    },
    {
        "id": 1122892,
        "repository": "https://github.com/Netflix/zuul.git",
        "sha1": "b25d3f32ed2e2da86f5c746098686445c2e2a314",
        "author": "Mike Smith",
        "time": "6/23/15 11:44 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private putFilter(sName String, filter ZuulFilter, lastModified long) : void</code> extracted from <code>public putFilter(file File) : boolean</code> in class <code>com.netflix.zuul.FilterLoader</code>"
        ]
    },
    {
        "id": 1123789,
        "repository": "https://github.com/jersey/jersey.git",
        "sha1": "fab1516773d50bf86d9cc37e2f6db13496f0ecae",
        "author": "Michal Gajdos",
        "time": "6/24/15 6:33 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private init() : void</code> extracted from <code>public FilesScanner(fileNames String[], recursive boolean)</code> and <code>public reset() : void</code> in class <code>org.glassfish.jersey.server.internal.scanning.FilesScanner</code>",
            "<b>Extract Method</b> <code>public close() : void</code> extracted from <code>public hasNext() : boolean</code> in class <code>org.glassfish.jersey.server.internal.scanning.JarFileScanner</code>"
        ]
    },
    {
        "id": 1122979,
        "repository": "https://github.com/jankotek/MapDB.git",
        "sha1": "32dd05fc13b53873bf18c589622b55d12e3883c7",
        "author": "Jan Kotek",
        "time": "6/24/15 8:51 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private insertOrUpdate(recid long, out DataOutputByteArray, isInsert boolean) : void</code> extracted from <code>protected update2(recid long, out DataOutputByteArray) : void</code> in class <code>org.mapdb.StoreAppend</code>",
            "<b>Pull Up Method</b> <code>protected longStackValParityGet(value long) : long</code> from class <code>org.mapdb.StoreDirect</code> to class <code>org.mapdb.Store</code>",
            "<b>Pull Up Method</b> <code>protected longStackValParitySet(value long) : long</code> from class <code>org.mapdb.StoreDirect</code> to class <code>org.mapdb.Store</code>"
        ]
    },
    {
        "id": 1123773,
        "repository": "https://github.com/bitcoinj/bitcoinj.git",
        "sha1": "2fd96c777164dd812e8b5a4294b162889601df1d",
        "author": "Amichai Rothman",
        "time": "6/24/15 10:21 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public newSha256Digest() : MessageDigest</code> extracted from <code>public sha256hash160(input byte[]) : byte[]</code> in class <code>org.bitcoinj.core.Utils</code>"
        ]
    },
    {
        "id": 1123770,
        "repository": "https://github.com/bitcoinj/bitcoinj.git",
        "sha1": "a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
        "author": "Amichai Rothman",
        "time": "6/24/15 10:21 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private digest : MessageDigest</code> from class <code>org.bitcoinj.core.Utils</code> to class <code>org.bitcoinj.core.Sha256Hash</code>"
        ]
    },
    {
        "id": 1123761,
        "repository": "https://github.com/bitcoinj/bitcoinj.git",
        "sha1": "1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
        "author": "Michael Bell",
        "time": "6/24/15 10:29 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>package updatedChannel(channel StoredClientChannel) : void</code> extracted from <code>package removeChannel(channel StoredClientChannel) : void</code> and <code>private putChannel(channel StoredClientChannel, updateWallet boolean) : void</code> in class <code>org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates</code>",
            "<b>Extract Method</b> <code>public updatedChannel(channel StoredServerChannel) : void</code> extracted from <code>public closeChannel(channel StoredServerChannel) : void</code> in class <code>org.bitcoinj.protocols.channels.StoredPaymentChannelServerStates</code>"
        ]
    },
    {
        "id": 1123527,
        "repository": "https://github.com/structr/structr.git",
        "sha1": "6c59050b8b03adf6d8043f3fb7add0496f447edf",
        "author": "Axel Morgner",
        "time": "6/24/15 10:45 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getSchemaProperties(schemaNode SchemaNode) : List&lt;SchemaProperty&gt;</code> extracted from <code>private getPropertiesForView(type Class, view String, schemaNode SchemaNode) : Map&lt;String,Object&gt;</code> in class <code>org.structr.rest.resource.SchemaTypeResource</code>"
        ]
    },
    {
        "id": 1123736,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "cfea606b129dbfc5703eb279d4803185afc99c58",
        "author": "Natthu Bharambe",
        "time": "6/24/15 1:08 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getPathToJSBundleDir(target BuildTarget) : Path</code> extracted from <code>protected ReactNativeBundle(ruleParams BuildRuleParams, resolver SourcePathResolver, entryPath SourcePath, isDevMode boolean, bundleName String, jsPackager SourcePath, platform ReactNativePlatform, depsFinder ReactNativeDeps)</code> in class <code>com.facebook.buck.js.ReactNativeBundle</code>"
        ]
    },
    {
        "id": 1123899,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "f797bfa4da53315b49f8d97b784047f33ba1bf5f",
        "author": "Stefania Alborghetti",
        "time": "6/24/15 1:10 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage</code> extracted from <code>public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage</code> in class <code>org.apache.cassandra.cql3.statements.BatchStatement</code>",
            "<b>Extract Method</b> <code>private fromUnixTimestamp(timestamp long, nanos long) : long</code> extracted from <code>private fromUnixTimestamp(timestamp long) : long</code> in class <code>org.apache.cassandra.utils.UUIDGen</code>",
            "<b>Extract Method</b> <code>private makeCasRequest(options BatchQueryOptions, state QueryState) : Pair&lt;CQL3CasRequest,Set&lt;ColumnDefinition&gt;&gt;</code> extracted from <code>private executeWithConditions(options BatchQueryOptions, state QueryState) : ResultMessage</code> in class <code>org.apache.cassandra.cql3.statements.BatchStatement</code>",
            "<b>Extract Method</b> <code>private makeCasRequest(queryState QueryState, options QueryOptions) : CQL3CasRequest</code> extracted from <code>public executeWithCondition(queryState QueryState, options QueryOptions) : ResultMessage</code> in class <code>org.apache.cassandra.cql3.statements.ModificationStatement</code>",
            "<b>Extract Method</b> <code>protected assertInvalidThrowMessage(errorMessage String, exception Class&lt;? extends Throwable&gt;, query String, values Object[]) : void</code> extracted from <code>protected assertInvalidMessage(errorMessage String, query String, values Object[]) : void</code> in class <code>org.apache.cassandra.cql3.CQLTester</code>",
            "<b>Extract Method</b> <code>protected createTableName() : String</code> extracted from <code>protected createTable(query String) : String</code> in class <code>org.apache.cassandra.cql3.CQLTester</code>",
            "<b>Extract Method</b> <code>public executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage</code> extracted from <code>public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage</code> in class <code>org.apache.cassandra.cql3.statements.ModificationStatement</code>",
            "<b>Move Class</b> <code>TypeTest</code> moved from <code>org.apache.cassandra.cql3</code> to <code>org.apache.cassandra.cql3.validation.entities</code>",
            "<b>Move Classes</b> from <code>org.apache.cassandra.cql3</code> to <code>org.apache.cassandra.cql3.validation.miscellaneous</code>:<ul><li><code>CrcCheckChanceTest</code></li><li><code>SSTableMetadataTrackingTest</code></li></ul>"
        ]
    },
    {
        "id": 1123715,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "d49765899cb9df6781fff9773ffc244b5167351c",
        "author": "Russell Porter",
        "time": "6/24/15 1:21 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet&lt;Path&gt;, locales ImmutableSet&lt;String&gt;) : Predicate&lt;Path&gt;</code> extracted from <code>public testFilterLocales() : void</code> and <code>public testFilterStrings() : void</code> in class <code>com.facebook.buck.android.FilterResourcesStepTest</code>"
        ]
    },
    {
        "id": 1123712,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "84b7b3974ae8171a4de2f804eb94fcd1d6cd6647",
        "author": "Simon Stewart",
        "time": "6/24/15 1:23 PM",
        "refactorings": [
            "<b>Move Class</b> <code>ReportGenerator</code> moved from <code>com.facebook.buck.java</code> to <code>com.facebook.buck.java.coverage</code>"
        ]
    },
    {
        "id": 1123966,
        "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
        "sha1": "071588a418dbc743e0f7dbfe218cd8a6c0f97421",
        "author": "Vince Bickers",
        "time": "6/24/15 2:10 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.extensions</code> to <code>org.springframework.data.neo4j.extensions</code>:<ul><li><code>CustomGraphRepository</code></li><li><code>CustomGraphRepositoryImpl</code></li><li><code>CustomGraphRepositoryTest</code></li><li><code>CustomPersistenceContext</code></li><li><code>UserRepository</code></li></ul>",
            "<b>Move Class</b> <code>User</code> moved from <code>org.springframework.data.neo4j.integration.extensions.domain</code> to <code>org.springframework.data.neo4j.extensions.domain</code>",
            "<b>Move Class</b> <code>GalaxyServiceTest</code> moved from <code>org.springframework.data.neo4j.integration.helloworld</code> to <code>org.springframework.data.neo4j.examples.galaxy</code>",
            "<b>Move Class</b> <code>GalaxyService</code> moved from <code>org.springframework.data.neo4j.integration.helloworld.service</code> to <code>org.springframework.data.neo4j.examples.galaxy.service</code>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.jsr303</code> to <code>org.springframework.data.neo4j.examples.jsr303</code>:<ul><li><code>JSR303Test</code></li><li><code>WebConfiguration</code></li></ul>",
            "<b>Move Class</b> <code>AdultController</code> moved from <code>org.springframework.data.neo4j.integration.jsr303.controller</code> to <code>org.springframework.data.neo4j.examples.jsr303.controller</code>",
            "<b>Move Class</b> <code>Adult</code> moved from <code>org.springframework.data.neo4j.integration.jsr303.domain</code> to <code>org.springframework.data.neo4j.examples.jsr303.domain</code>",
            "<b>Move Class</b> <code>AdultRepository</code> moved from <code>org.springframework.data.neo4j.integration.jsr303.repo</code> to <code>org.springframework.data.neo4j.examples.jsr303.repo</code>",
            "<b>Move Class</b> <code>AdultService</code> moved from <code>org.springframework.data.neo4j.integration.jsr303.service</code> to <code>org.springframework.data.neo4j.examples.jsr303.service</code>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.movies</code> to <code>org.springframework.data.neo4j.queries</code>:<ul><li><code>DerivedQueryTest</code></li><li><code>QueryIntegrationTest</code></li></ul>",
            "<b>Move Class</b> <code>TransactionIntegrationTest</code> moved from <code>org.springframework.data.neo4j.integration.movies</code> to <code>org.springframework.data.neo4j.transactions</code>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.movies.domain</code> to <code>org.springframework.data.neo4j.examples.movies.domain</code>:<ul><li><code>AbstractAnnotatedEntity</code></li><li><code>AbstractEntity</code></li><li><code>Actor</code></li><li><code>Cinema</code></li><li><code>Genre</code></li><li><code>Movie</code></li><li><code>Person</code></li><li><code>Rating</code></li><li><code>ReleasedMovie</code></li><li><code>TempMovie</code></li><li><code>User</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.movies.domain.queryresult</code> to <code>org.springframework.data.neo4j.examples.movies.domain.queryresult</code>:<ul><li><code>EntityWrappingQueryResult</code></li><li><code>RichUserQueryResult</code></li><li><code>UserQueryResult</code></li><li><code>UserQueryResultInterface</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.movies.repo</code> to <code>org.springframework.data.neo4j.examples.movies.repo</code>:<ul><li><code>AbstractAnnotatedEntityRepository</code></li><li><code>AbstractEntityRepository</code></li><li><code>ActorRepository</code></li><li><code>CinemaRepository</code></li><li><code>GenreRepository</code></li><li><code>RatingRepository</code></li><li><code>TempMovieRepository</code></li><li><code>UnmanagedUserPojo</code></li><li><code>UserRepository</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.movies.service</code> to <code>org.springframework.data.neo4j.examples.movies.service</code>:<ul><li><code>UserService</code></li><li><code>UserServiceImpl</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.repositories</code> to <code>org.springframework.data.neo4j.repositories</code>:<ul><li><code>ProgrammaticRepositoryTest</code></li><li><code>RepoScanningTest</code></li><li><code>RepositoryDefinitionTest</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.repositories.domain</code> to <code>org.springframework.data.neo4j.repositories.domain</code>:<ul><li><code>Movie</code></li><li><code>User</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.repositories.repo</code> to <code>org.springframework.data.neo4j.repositories.repo</code>:<ul><li><code>MovieRepository</code></li><li><code>PersistenceContextInTheSamePackage</code></li><li><code>UserRepository</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.template</code> to <code>org.springframework.data.neo4j.template</code>:<ul><li><code>ExceptionTranslationTest</code></li><li><code>Neo4jTemplateTest</code></li><li><code>TemplateApplicationEventTest</code></li><li><code>TestNeo4jEventListener</code></li></ul>",
            "<b>Move Class</b> <code>DataManipulationEventConfiguration</code> moved from <code>org.springframework.data.neo4j.integration.template.context</code> to <code>org.springframework.data.neo4j.template.context</code>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.transactions</code> to <code>org.springframework.data.neo4j.transactions</code>:<ul><li><code>ApplicationConfig</code></li><li><code>TransactionBoundaryTest</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.transactions.service</code> to <code>org.springframework.data.neo4j.transactions.service</code>:<ul><li><code>BusinessService</code></li><li><code>WrapperService</code></li></ul>",
            "<b>Move Class</b> <code>WebIntegrationTest</code> moved from <code>org.springframework.data.neo4j.integration.web</code> to <code>org.springframework.data.neo4j.web</code>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.web.context</code> to <code>org.springframework.data.neo4j.web.context</code>:<ul><li><code>WebAppContext</code></li><li><code>WebPersistenceContext</code></li></ul>",
            "<b>Move Class</b> <code>UserController</code> moved from <code>org.springframework.data.neo4j.integration.web.controller</code> to <code>org.springframework.data.neo4j.web.controller</code>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.web.domain</code> to <code>org.springframework.data.neo4j.web.domain</code>:<ul><li><code>Cinema</code></li><li><code>Genre</code></li><li><code>User</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.web.repo</code> to <code>org.springframework.data.neo4j.web.repo</code>:<ul><li><code>GenreRepository</code></li><li><code>UserRepository</code></li></ul>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.integration.web.service</code> to <code>org.springframework.data.neo4j.web.service</code>:<ul><li><code>UserService</code></li><li><code>UserServiceImpl</code></li></ul>",
            "<b>Move Class</b> <code>GraphRepositoryFactoryTest</code> moved from <code>org.springframework.data.neo4j.repository.support</code> to <code>org.springframework.data.neo4j.repositories.support</code>"
        ]
    },
    {
        "id": 1123699,
        "repository": "https://github.com/rackerlabs/blueflood.git",
        "sha1": "fce2d1f07c14bbac286e16ec666fd4bf26abd43d",
        "author": "Chinmay Gupte",
        "time": "6/24/15 2:36 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private sendResponseTimer : Timer</code> from class <code>com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler</code> to class <code>com.rackspacecloud.blueflood.http.DefaultHandler</code>",
            "<b>Move Method</b> <code>public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void</code> from class <code>com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler</code> to class <code>com.rackspacecloud.blueflood.http.DefaultHandler</code>"
        ]
    },
    {
        "id": 1123840,
        "repository": "https://github.com/apache/giraph.git",
        "sha1": "add1d4f07c925b8a9044cb3aa5bb4abdeaf49fc7",
        "author": "Maja Kabiljo",
        "time": "6/24/15 4:23 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private registerSerializer(kryo HadoopKryo, className String, serializer Serializer) : void</code> extracted from <code>private createKryo() : HadoopKryo</code> in class <code>org.apache.giraph.writable.kryo.HadoopKryo</code>"
        ]
    },
    {
        "id": 1123684,
        "repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
        "sha1": "ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
        "author": "Justin Wetherell",
        "time": "6/24/15 5:48 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int</code> extracted from <code>public main(args String[]) : void</code> in class <code>com.jwetherell.algorithms.sorts.timing.SortsTiming</code>"
        ]
    },
    {
        "id": 1124507,
        "repository": "https://github.com/gwtproject/gwt.git",
        "sha1": "22fb2c9c6974bd1fe0f6ff684f52e6cfbed1a387",
        "author": "Goktug Gokdogan",
        "time": "6/24/15 6:41 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void</code> extracted from <code>public visit(type JInterfaceType, ctx Context) : boolean</code> in class <code>com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor</code>"
        ]
    },
    {
        "id": 1125111,
        "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
        "sha1": "abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
        "author": "Chris Kittrell",
        "time": "6/24/15 6:52 PM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.broadleafcommerce.openadmin.dto.override.MetadataOverride</code> from class <code>org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride</code>"
        ]
    },
    {
        "id": 1124355,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "00aa01fb90f3210d1e3027d7f759fb1085b814bd",
        "author": "Sudheesh Katkam",
        "time": "6/24/15 8:24 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public setSessionOption(drillClient DrillClient, option String, value String) : void</code> extracted from <code>public setControls(drillClient DrillClient, controls String) : void</code> in class <code>org.apache.drill.exec.testing.ControlsInjectionUtil</code>",
            "<b>Inline Method</b> <code>private assertCancelled(controls String, testQuery String, listener WaitUntilCompleteListener) : void</code> inlined to <code>private assertCancelledWithoutException(controls String, listener WaitUntilCompleteListener, query String) : void</code> in class <code>org.apache.drill.exec.server.TestDrillbitResilience</code>"
        ]
    },
    {
        "id": 1124370,
        "repository": "https://github.com/aws/aws-sdk-java.git",
        "sha1": "4baf0a4de8d03022df48d696d210cc8b3117d38a",
        "author": "AWS",
        "time": "6/24/15 8:54 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private pause(delay long) : void</code> extracted from <code>private pauseExponentially(retries int) : void</code> in class <code>com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper</code>",
            "<b>Inline Method</b> <code>private killServer() : void</code> inlined to <code>public cleanUp() : void</code> in class <code>com.amazonaws.util.EC2MetadataUtilsTest</code>"
        ]
    },
    {
        "id": 1124354,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "3f0d9221d3f96c20db10e868cc33c2e972318ba6",
        "author": "adeneche",
        "time": "6/24/15 8:54 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public createNewWrapperCurrent(batchRecordCount int) : SelectionVector4</code> extracted from <code>public createNewWrapperCurrent() : SelectionVector4</code> in class <code>org.apache.drill.exec.record.selection.SelectionVector4</code>"
        ]
    },
    {
        "id": 1124301,
        "repository": "https://github.com/mockito/mockito.git",
        "sha1": "7f20e63a7252f33c888085134d16ee8bf45f183f",
        "author": "Szczepan Faber",
        "time": "6/25/15 11:28 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.mockito.MockitoMatcher</code> from class <code>org.mockito.internal.matchers.LocalizedMatcher</code>",
            "<b>Move Class</b> <code>MatchersPrinter</code> moved from <code>org.mockito.internal.matchers</code> to <code>org.mockito.internal.matchers.text</code>",
            "<b>Move Classes</b> from <code>org.mockito.internal.util.text</code> to <code>org.mockito.internal.matchers.text</code>:<ul><li><code>ArrayIterator</code></li><li><code>HamcrestPrinter</code></li><li><code>ValuePrinter</code></li></ul>"
        ]
    },
    {
        "id": 1124509,
        "repository": "https://github.com/libgdx/libgdx.git",
        "sha1": "2bd1557bc293cb8c2348374771aad832befbe26f",
        "author": "NathanSweet",
        "time": "6/25/15 11:30 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>public setCheckBoxRight(right boolean) : void</code> inlined to <code>public CheckBox(text String, style CheckBoxStyle)</code> in class <code>com.badlogic.gdx.scenes.scene2d.ui.CheckBox</code>"
        ]
    },
    {
        "id": 1124816,
        "repository": "https://github.com/SonarSource/sonarqube.git",
        "sha1": "0d9fcaa4415ee996e423a97cfe0d965586ca59a5",
        "author": "Julien HENRY",
        "time": "6/25/15 11:49 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private doStop(swallowException boolean) : void</code> extracted from <code>public stop() : void</code> in class <code>org.sonar.batch.bootstrapper.Batch</code>"
        ]
    },
    {
        "id": 1125095,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
        "author": "vkorukanti",
        "time": "6/25/15 11:53 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createTestData() : void</code> extracted from <code>public addMiniDfsBasedStorageAndGenerateTestData() : void</code> in class <code>org.apache.drill.exec.impersonation.TestImpersonationQueries</code>",
            "<b>Move Classes</b> from <code>org.apache.drill.exec.store.hive.schema.HiveSchemaFactory</code> to <code>org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching</code>:<ul><li><code>DatabaseLoader</code></li><li><code>TableLoader</code></li><li><code>TableLoaderLoader</code></li><li><code>TableNameLoader</code></li></ul>",
            "<b>Pull Up Attribute</b> <code>protected MINIDFS_STORAGE_PLUGIN_NAME : String</code> from classes <code>org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS</code> and 2 others to class <code>org.apache.drill.exec.impersonation.BaseTestImpersonation</code>",
            "<b>Pull Up Attribute</b> <code>protected org1Groups : String[]</code> from class <code>org.apache.drill.exec.impersonation.TestImpersonationQueries</code> to class <code>org.apache.drill.exec.impersonation.BaseTestImpersonation</code>",
            "<b>Pull Up Attribute</b> <code>protected org1Users : String[]</code> from class <code>org.apache.drill.exec.impersonation.TestImpersonationQueries</code> to class <code>org.apache.drill.exec.impersonation.BaseTestImpersonation</code>",
            "<b>Pull Up Attribute</b> <code>protected org2Groups : String[]</code> from class <code>org.apache.drill.exec.impersonation.TestImpersonationQueries</code> to class <code>org.apache.drill.exec.impersonation.BaseTestImpersonation</code>",
            "<b>Pull Up Attribute</b> <code>protected org2Users : String[]</code> from class <code>org.apache.drill.exec.impersonation.TestImpersonationQueries</code> to class <code>org.apache.drill.exec.impersonation.BaseTestImpersonation</code>"
        ]
    },
    {
        "id": 1124975,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "be292763b8c4cb09988023d6081b0a2d57b4c778",
        "author": "Simon Stewart",
        "time": "6/25/15 3:55 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private PATH_TO_URL : Function&lt;Path,URL&gt;</code> from class <code>com.facebook.buck.util.ClassLoaderCache</code> to class <code>com.facebook.buck.java.JarBackedJavac</code>",
            "<b>Move Attribute</b> <code>private PATH_TO_URL : Function&lt;Path,URL&gt;</code> from class <code>com.facebook.buck.util.ClassLoaderCacheTest</code> to class <code>com.facebook.buck.java.JarBackedJavac</code>"
        ]
    },
    {
        "id": 1125333,
        "repository": "https://github.com/facebook/facebook-android-sdk.git",
        "sha1": "e813a0be86c87366157a0201e6c61662cadee586",
        "author": "Sean Wiese",
        "time": "6/25/15 3:56 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getAndroidIdViaReflection(context Context) : AttributionIdentifiers</code> extracted from <code>private getAndroidId(context Context) : AttributionIdentifiers</code> in class <code>com.facebook.internal.AttributionIdentifiers</code>",
            "<b>Move Classes</b> from <code>com.facebook.iconicus</code> to <code>com.example.iconicus</code>:<ul><li><code>GameBoard</code></li><li><code>GameController</code></li></ul>",
            "<b>Move Classes</b> from <code>com.facebook.samples.hellofacebook</code> to <code>com.example.hellofacebook</code>:<ul><li><code>HelloFacebookBroadcastReceiver</code></li><li><code>HelloFacebookSampleActivity</code></li></ul>",
            "<b>Move Classes</b> from <code>com.facebook.samples.rps</code> to <code>com.example.rps</code>:<ul><li><code>CommonObjects</code></li><li><code>ContentFragment</code></li><li><code>MainActivity</code></li><li><code>OpenGraphConsts</code></li><li><code>RpsFragment</code></li><li><code>RpsGameUtils</code></li></ul>",
            "<b>Move Class</b> <code>UserSettingsFragment</code> moved from <code>com.facebook.samples.rps.usersettings</code> to <code>com.example.rps.usersettings</code>",
            "<b>Move Classes</b> from <code>com.facebook.samples.switchuser</code> to <code>com.example.switchuser</code>:<ul><li><code>MainActivity</code></li><li><code>ProfileFragment</code></li><li><code>SettingsFragment</code></li><li><code>Slot</code></li><li><code>UserInfo</code></li><li><code>UserInfoCache</code></li></ul>",
            "<b>Move Classes</b> from <code>com.facebook.scrumptious</code> to <code>com.example.scrumptious</code>:<ul><li><code>BaseListElement</code></li><li><code>FullListView</code></li><li><code>MainActivity</code></li><li><code>PickerActivity</code></li><li><code>ScrumptiousApplication</code></li><li><code>SelectionFragment</code></li><li><code>SplashFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.facebook.scrumptious.picker</code> to <code>com.example.scrumptious.picker</code>:<ul><li><code>FriendPickerFragment</code></li><li><code>GraphObjectAdapter</code></li><li><code>GraphObjectCursor</code></li><li><code>GraphObjectPagingLoader</code></li><li><code>PickerFragment</code></li><li><code>PlacePickerFragment</code></li></ul>",
            "<b>Move Class</b> <code>UserSettingsFragment</code> moved from <code>com.facebook.scrumptious.usersettings</code> to <code>com.example.scrumptious.usersettings</code>"
        ]
    },
    {
        "id": 1125062,
        "repository": "https://github.com/fabric8io/fabric8.git",
        "sha1": "e068eb7f484f24dee285d29b8a910d9019592020",
        "author": "Jimmi Dyson",
        "time": "6/25/15 4:54 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getHTTPGetAction(prefix String, properties Properties) : HTTPGetAction</code> extracted from <code>protected getProbe(prefix String) : Probe</code> in class <code>io.fabric8.maven.JsonMojo</code>"
        ]
    },
    {
        "id": 1125334,
        "repository": "https://github.com/killbill/killbill.git",
        "sha1": "4b5b74b6467a28fb9b7712f8091e4aa61c2d64b6",
        "author": "Pierre-Alexandre Meyer",
        "time": "6/26/15 8:14 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public updatePaymentAndTransactionIfNeeded(payment PaymentModelDao, paymentTransaction PaymentTransactionModelDao, paymentTransactionInfoPlugin PaymentTransactionInfoPlugin, internalTenantContext InternalTenantContext) : boolean</code> extracted from <code>public doIteration(paymentTransaction PaymentTransactionModelDao) : void</code> in class <code>org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask</code>",
            "<b>Push Down Attribute</b> <code>private pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner</code> from class <code>org.killbill.billing.payment.core.janitor.CompletionTaskBase</code> to class <code>org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask</code>"
        ]
    },
    {
        "id": 1125117,
        "repository": "https://github.com/redsolution/xabber-android.git",
        "sha1": "faaf826e901f43d1b46105b18e655eb120f3ffef",
        "author": "Grigory Fedorov",
        "time": "6/26/15 10:16 AM",
        "refactorings": [
            "<b>Extract Interface</b> <code>com.xabber.android.ui.ContactAdder</code> from type <code>com.xabber.android.ui.ContactAddFragment</code>"
        ]
    },
    {
        "id": 1126550,
        "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
        "sha1": "d4992887291cc0a7eeda87ad547fa9e1e7fda41c",
        "author": "Adam Gibson",
        "time": "6/27/15 2:38 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public output(x INDArray, test boolean) : INDArray</code> extracted from <code>public output(x INDArray) : INDArray</code> in class <code>org.deeplearning4j.nn.layers.OutputLayer</code>"
        ]
    },
    {
        "id": 1126248,
        "repository": "https://github.com/cbeust/testng.git",
        "sha1": "b5cf7a0252c8b0465c4dbd906717f7a12e26e6f8",
        "author": "Julien Herr",
        "time": "6/27/15 6:02 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>test.testng234</code> to <code>test.inheritance.testng234</code>:<ul><li><code>ChildTest</code></li><li><code>ParentTest</code></li><li><code>PolymorphicFailureTest</code></li></ul>"
        ]
    },
    {
        "id": 1125721,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "8d7a26edd1fedb9505b4f2b4fe57b2d2958b4dd9",
        "author": "Kirill Likhodedov",
        "time": "6/27/15 6:56 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private writeContentToFile(revision byte[]) : void</code> inlined to <code>private write(revision byte[]) : void</code> in class <code>com.intellij.openapi.vcs.history.FileHistoryPanelImpl.MyGetVersionAction</code>"
        ]
    },
    {
        "id": 1126591,
        "repository": "https://github.com/AntennaPod/AntennaPod.git",
        "sha1": "c64217e2b485f3c6b997a55b1ef910c8b72779d3",
        "author": "Martin Fietz",
        "time": "6/27/15 1:01 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public addQueueItem(context Context, performAutoDownload boolean, itemIds long[]) : Future&lt;?&gt;</code> extracted from <code>public addQueueItem(context Context, itemIds long[]) : Future&lt;?&gt;</code> in class <code>de.danoeh.antennapod.core.storage.DBWriter</code>"
        ]
    },
    {
        "id": 1125661,
        "repository": "https://github.com/datastax/java-driver.git",
        "sha1": "9de5f0d408f861455716b8410fd53f62b360787d",
        "author": "Andrew Tolbert",
        "time": "6/27/15 8:18 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package sendRequest(reportNoMoreHosts boolean) : boolean</code> extracted from <code>package sendRequest() : void</code> in class <code>com.datastax.driver.core.RequestHandler.SpeculativeExecution</code>",
            "<b>Extract Method</b> <code>private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel, connection Connection, response Response) : void</code> extracted from <code>private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel) : void</code> in class <code>com.datastax.driver.core.RequestHandler.SpeculativeExecution</code>",
            "<b>Extract Method</b> <code>protected query(session Session) : ResultSet</code> extracted from <code>protected query() : ResultSet</code> in class <code>com.datastax.driver.core.policies.AbstractRetryPolicyIntegrationTest</code>"
        ]
    },
    {
        "id": 1127274,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
        "author": "Swarnim Kulkarni",
        "time": "6/27/15 8:33 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private unionTester(ws Schema, rs Schema, record Record) : ResultPair</code> extracted from <code>private unionTester(s Schema, record Record) : ResultPair</code> in class <code>org.apache.hadoop.hive.serde2.avro.TestAvroDeserializer</code>"
        ]
    },
    {
        "id": 1126459,
        "repository": "https://github.com/ratpack/ratpack.git",
        "sha1": "2581441eda268c45306423dd4c515514d98a14a0",
        "author": "John Engelman",
        "time": "6/28/15 12:21 PM",
        "refactorings": [
            "<b>Move Class</b> <code>JacksonModule</code> moved from <code>ratpack.jackson</code> to <code>ratpack.jackson.guice</code>"
        ]
    },
    {
        "id": 1126576,
        "repository": "https://github.com/apache/zookeeper.git",
        "sha1": "3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
        "author": "Raúl Gutiérrez Segalés",
        "time": "6/28/15 4:09 PM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>private cleanupWriterSocket(pwriter PrintWriter) : void</code> from classes <code>org.apache.zookeeper.server.NIOServerCnxn</code> and <code>org.apache.zookeeper.server.NettyServerCnxn</code> to class <code>org.apache.zookeeper.server.ServerCnxn</code>"
        ]
    },
    {
        "id": 1126206,
        "repository": "https://github.com/QuantumBadger/RedReader.git",
        "sha1": "51b8b0e1ad4be1b137d67774eab28dc0ef52cb0a",
        "author": "QuantumBadger",
        "time": "6/28/15 5:50 PM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void</code> from class <code>org.quantumbadger.redreader.activities.MainActivity</code> to class <code>org.quantumbadger.redreader.activities.RefreshableActivity</code>"
        ]
    },
    {
        "id": 1125606,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "e58c9c3eef4c6e44b21a97cfbd2862bb2eb4627a",
        "author": "Bill White",
        "time": "6/28/15 6:25 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public hasSize(size int) : SymbolTableAssert</code> extracted from <code>public isEmpty() : SymbolTableAssert</code> in class <code>org.voltdb.sqlparser.symtab.SymbolTableAssert</code>"
        ]
    },
    {
        "id": 1127199,
        "repository": "https://github.com/koush/AndroidAsync.git",
        "sha1": "1bc7905b07821f840068089343e6b77a8686d1ab",
        "author": "Koushik Dutta",
        "time": "6/28/15 6:25 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private terminate() : void</code> extracted from <code>protected report(e Exception) : void</code> in class <code>com.koushikdutta.async.http.AsyncHttpResponseImpl</code>"
        ]
    },
    {
        "id": 1126720,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "0e7345a9c10863dca9217ad902b825db50fed01f",
        "author": "Lari Hotari",
        "time": "6/28/15 8:10 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getConfiguration() : Configuration</code> extracted from <code>package getFileCollection() : FileCollection</code> in class <code>org.gradle.play.plugins.PlayPluginConfigurations.PlayConfiguration</code>"
        ]
    },
    {
        "id": 1127268,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "102b23b16bf26cbf439009b4b95542490a082710",
        "author": "Ferdinand Xu",
        "time": "6/28/15 9:42 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private executeInternal(sql String, call boolean) : boolean</code> extracted from <code>private execute(line String, call boolean, entireLineAsCommand boolean) : boolean</code> in class <code>org.apache.hive.beeline.Commands</code>",
            "<b>Extract Method</b> <code>public handleMultiLineCmd(line String) : String</code> extracted from <code>private execute(line String, call boolean, entireLineAsCommand boolean) : boolean</code> in class <code>org.apache.hive.beeline.Commands</code>",
            "<b>Move Multiple Methods</b> from class <code>org.apache.hive.beeline.BeeLine</code> to <code>org.apache.hive.beeline.Commands</code>:<ul><li><code>private getFirstCmd(cmd String, length int) : String</code></li><li><code>private isSourceCMD(cmd String) : boolean</code></li></ul>"
        ]
    },
    {
        "id": 1126709,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "79c66ceab11dae0b9fd1dade7bb4120028738705",
        "author": "Lorant Pinter",
        "time": "6/29/15 5:34 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getInputs() : Set&lt;LanguageSourceSet&gt;</code> extracted from <code>public getAllSources() : Set&lt;LanguageSourceSet&gt;</code> in class <code>org.gradle.platform.base.binary.BaseBinarySpec</code>"
        ]
    },
    {
        "id": 1126375,
        "repository": "https://github.com/spring-projects/spring-data-jpa.git",
        "sha1": "c13f3469e1d64ec97b11f0509e45f9c3fa8ff88a",
        "author": "Oliver Gierke",
        "time": "6/29/15 7:28 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected getCountQuery(spec Specification&lt;T&gt;, mode QueryMode) : TypedQuery&lt;Long&gt;</code> extracted from <code>protected getCountQuery(spec Specification&lt;T&gt;) : TypedQuery&lt;Long&gt;</code> in class <code>org.springframework.data.jpa.repository.support.SimpleJpaRepository</code>"
        ]
    },
    {
        "id": 1127907,
        "repository": "https://github.com/facebook/presto.git",
        "sha1": "364f50274d4b4b83d40930c0d2c4d0e57fb34589",
        "author": "Haozhun Jin",
        "time": "6/30/15 12:08 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>com.facebook.presto.PartitionedPagePartitionFunction</code> from class <code>com.facebook.presto.HashPagePartitionFunction</code>"
        ]
    },
    {
        "id": 1130197,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "d69e5cb21c04d9eede314aaa9ad059fc603fb025",
        "author": "Rui Li",
        "time": "6/30/15 5:31 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private tag : byte</code> from class <code>org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator</code> to class <code>org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc</code>",
            "<b>Move Method</b> <code>public setTag(tag byte) : void</code> from class <code>org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator</code> to class <code>org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc</code>"
        ]
    },
    {
        "id": 1127383,
        "repository": "https://github.com/spring-projects/spring-boot.git",
        "sha1": "1e464da2480568014a87dd0bac6febe63a76c889",
        "author": "Dave Syer",
        "time": "6/30/15 5:42 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private addStaticIndexHtmlViewControllers(registry ViewControllerRegistry) : void</code> inlined to <code>public addViewControllers(registry ViewControllerRegistry) : void</code> in class <code>org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter</code>",
            "<b>Move Multiple Attributes</b> from class <code>org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration</code> to <code>org.springframework.boot.autoconfigure.web.ResourceProperties</code>:<ul><li><code>private CLASSPATH_RESOURCE_LOCATIONS : String[]</code></li><li><code>private RESOURCE_LOCATIONS : String[]</code></li><li><code>private SERVLET_RESOURCE_LOCATIONS : String[]</code></li><li><code>private STATIC_INDEX_HTML_RESOURCES : String[]</code></li></ul>",
            "<b>Move Attribute</b> <code>private resourceLoader : ResourceLoader</code> from class <code>org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration</code> to class <code>org.springframework.boot.autoconfigure.web.ResourceProperties</code>",
            "<b>Move Method</b> <code>public setResourceLoader(resourceLoader ResourceLoader) : void</code> from class <code>org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration</code> to class <code>org.springframework.boot.autoconfigure.web.ResourceProperties</code>"
        ]
    },
    {
        "id": 1129518,
        "repository": "https://github.com/droolsjbpm/jbpm.git",
        "sha1": "a739d16d301f0e89ab0b9dfa56b4585bbad6b793",
        "author": "Jan Hrcek",
        "time": "6/30/15 6:06 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createUser(id String) : User</code> extracted from <code>public testActivateFromIncorrectStatus() : void</code> and 10 others in class <code>org.jbpm.services.task.LifeCycleBaseTest</code>"
        ]
    },
    {
        "id": 1129517,
        "repository": "https://github.com/droolsjbpm/jbpm.git",
        "sha1": "83cfa21578e63956bca0715eefee2860c3b6d39a",
        "author": "Tibor Zimanyi",
        "time": "6/30/15 7:05 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private prepareWorkItemWithTaskVariables(taskDescriptionParam String) : WorkItemImpl</code> extracted from <code>public testTaskWithVariables() : void</code> in class <code>org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest</code>",
            "<b>Extract Method</b> <code>private testTaskWithExpectedDescription(task Task, expectedDescription String) : void</code> extracted from <code>public testTaskWithVariables() : void</code> in class <code>org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest</code>"
        ]
    },
    {
        "id": 1130163,
        "repository": "https://github.com/Graylog2/graylog2-server.git",
        "sha1": "f05e86c4d31987ff2f30330745c3eb605de4c4dc",
        "author": "Jochen Schalanda",
        "time": "6/30/15 8:11 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>package COMPARATOR : Comparator&lt;IndexRange&gt;</code> from class <code>org.graylog2.indexer.ranges.MongoIndexRangeService</code> to class <code>org.graylog2.indexer.ranges.IndexRange</code>"
        ]
    },
    {
        "id": 1130153,
        "repository": "https://github.com/Graylog2/graylog2-server.git",
        "sha1": "767171c90110c4c5781e8f6d19ece1fba0d492e9",
        "author": "Jochen Schalanda",
        "time": "6/30/15 8:46 AM",
        "refactorings": [
            "<b>Move Multiple Methods</b> from class <code>org.graylog2.indexer.searches.SearchesTest</code> to <code>org.graylog2.indexer.ranges.EsIndexRangeServiceTest</code>:<ul><li><code>public testTimestampStatsOfIndex() : void</code></li><li><code>public testTimestampStatsOfIndexWithEmptyIndex() : void</code></li><li><code>public testTimestampStatsOfIndexWithNonExistingIndex() : void</code></li></ul>",
            "<b>Move Method</b> <code>public timestampStatsOfIndex(index String) : TimestampStats</code> from class <code>org.graylog2.indexer.searches.Searches</code> to class <code>org.graylog2.indexer.ranges.EsIndexRangeService</code>"
        ]
    },
    {
        "id": 1129630,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "35668435090eb47cf8c5e704243510b6cee35a7b",
        "author": "Aleksey Yeschenko",
        "time": "6/30/15 9:04 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private onCreateFunctionInternal(ksName String, functionName String, argTypes List&lt;AbstractType&lt;?&gt;&gt;) : void</code> extracted from <code>public onCreateAggregate(ksName String, aggregateName String, argTypes List&lt;AbstractType&lt;?&gt;&gt;) : void</code> and <code>public onCreateFunction(ksName String, functionName String, argTypes List&lt;AbstractType&lt;?&gt;&gt;) : void</code> in class <code>org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber</code>",
            "<b>Extract Method</b> <code>private onDropFunctionInternal(ksName String, functionName String, argTypes List&lt;AbstractType&lt;?&gt;&gt;) : void</code> extracted from <code>public onDropAggregate(ksName String, aggregateName String, argTypes List&lt;AbstractType&lt;?&gt;&gt;) : void</code> and <code>public onDropFunction(ksName String, functionName String, argTypes List&lt;AbstractType&lt;?&gt;&gt;) : void</code> in class <code>org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber</code>"
        ]
    },
    {
        "id": 1129713,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "527ac38334000e105daacb2aca25cb345d77c01e",
        "author": "Gary Hale",
        "time": "6/30/15 9:10 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private stopped : AtomicBoolean</code> from class <code>org.gradle.play.internal.run.PlayApplicationDeploymentHandle</code> to class <code>org.gradle.play.internal.run.PlayApplicationRunnerToken</code>"
        ]
    },
    {
        "id": 1129294,
        "repository": "https://github.com/Activiti/Activiti.git",
        "sha1": "53036cece662f9c796d2a187b0077059c3d9088a",
        "author": "Tijs Rademakers",
        "time": "6/30/15 9:29 AM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>protected asynchronous : boolean</code> from classes <code>org.activiti.bpmn.model.Activity</code> and <code>org.activiti.bpmn.model.Gateway</code> to class <code>org.activiti.bpmn.model.FlowNode</code>",
            "<b>Pull Up Attribute</b> <code>protected notExclusive : boolean</code> from classes <code>org.activiti.bpmn.model.Activity</code> and <code>org.activiti.bpmn.model.Gateway</code> to class <code>org.activiti.bpmn.model.FlowNode</code>",
            "<b>Pull Up Method</b> <code>public isAsynchronous() : boolean</code> from classes <code>org.activiti.bpmn.model.Activity</code> and <code>org.activiti.bpmn.model.Gateway</code> to class <code>org.activiti.bpmn.model.FlowNode</code>",
            "<b>Pull Up Method</b> <code>public isNotExclusive() : boolean</code> from classes <code>org.activiti.bpmn.model.Activity</code> and <code>org.activiti.bpmn.model.Gateway</code> to class <code>org.activiti.bpmn.model.FlowNode</code>",
            "<b>Pull Up Method</b> <code>public setAsynchronous(asynchronous boolean) : void</code> from classes <code>org.activiti.bpmn.model.Activity</code> and <code>org.activiti.bpmn.model.Gateway</code> to class <code>org.activiti.bpmn.model.FlowNode</code>",
            "<b>Pull Up Method</b> <code>public setNotExclusive(notExclusive boolean) : void</code> from classes <code>org.activiti.bpmn.model.Activity</code> and <code>org.activiti.bpmn.model.Gateway</code> to class <code>org.activiti.bpmn.model.FlowNode</code>"
        ]
    },
    {
        "id": 1129493,
        "repository": "https://github.com/FasterXML/jackson-databind.git",
        "sha1": "cfe88fe3fbcc6b02ca55cee7b1f4ab13e249edea",
        "author": "lufe66",
        "time": "6/30/15 10:35 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected classForName(name String) : Class&lt;?&gt;</code> extracted from <code>public findClass(className String) : Class&lt;?&gt;</code> in class <code>com.fasterxml.jackson.databind.type.TypeFactory</code>",
            "<b>Extract Method</b> <code>protected classForName(name String, initialize boolean, loader ClassLoader) : Class&lt;?&gt;</code> extracted from <code>public findClass(className String) : Class&lt;?&gt;</code> in class <code>com.fasterxml.jackson.databind.type.TypeFactory</code>"
        ]
    },
    {
        "id": 1130125,
        "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
        "sha1": "9dc3cbd59a20f03406f295a4a8f3b8676dbc939e",
        "author": "Dan Roundhill",
        "time": "6/30/15 2:48 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.wordpress.android.ui.prefs</code> to <code>org.wordpress.android.ui.prefs.notifications</code>:<ul><li><code>NotificationsPreference</code></li><li><code>NotificationsSettingsActivity</code></li><li><code>NotificationsSettingsFragment</code></li></ul>"
        ]
    },
    {
        "id": 1127493,
        "repository": "https://github.com/rstudio/rstudio.git",
        "sha1": "229d1b60c03a3f8375451c68a6911660a3993777",
        "author": "Jonathan McPherson",
        "time": "6/30/15 3:32 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private isUpdate() : boolean</code> extracted from <code>public getResult() : RSConnectPublishResult</code> in class <code>org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy</code>",
            "<b>Inline Method</b> <code>private fireValidatedRSconnectPublish(result RSConnectPublishResult, launchBrowser boolean) : void</code> inlined to <code>public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void</code> in class <code>org.rstudio.studio.client.rsconnect.RSConnect</code>",
            "<b>Move Method</b> <code>public checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput&lt;Boolean&gt;) : void</code> from class <code>org.rstudio.studio.client.rsconnect.RSConnect</code> to class <code>org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy</code>"
        ]
    },
    {
        "id": 1130638,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "8d9bedbf96b14beb027ebc1338bc6d5750e1feb5",
        "author": "Tobias Lindaaker",
        "time": "7/2/15 2:23 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.neo4j.kernel.api.constraints.PropertyConstraint</code> from class <code>org.neo4j.kernel.api.constraints.UniquenessConstraint</code>"
        ]
    },
    {
        "id": 1130631,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "d1a6ae2a16ba1d53b1de02eea8745d67c6a1a005",
        "author": "pgpv",
        "time": "7/2/15 5:18 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private fileSelection() : File</code> extracted from <code>public actionPerformed(e ActionEvent) : void</code> in class <code>org.neo4j.desktop.ui.BrowseForDatabaseActionListener</code>"
        ]
    },
    {
        "id": 1130859,
        "repository": "https://github.com/katzer/cordova-plugin-local-notifications.git",
        "sha1": "51f498a96b2fa1822e392027982c20e950535fd1",
        "author": "PKnittel",
        "time": "7/2/15 11:49 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public handleEndTag(xml XmlPullParser) : void</code> extracted from <code>public parse(xml XmlResourceParser) : void</code> in class <code>org.apache.cordova.ConfigXmlParser</code>",
            "<b>Extract Method</b> <code>public handleStartTag(xml XmlPullParser) : void</code> extracted from <code>public parse(xml XmlResourceParser) : void</code> in class <code>org.apache.cordova.ConfigXmlParser</code>"
        ]
    },
    {
        "id": 1132279,
        "repository": "https://github.com/JetBrains/MPS.git",
        "sha1": "fe6653db5fb9f1a25d5ee30e4d5d54ccdaba65fa",
        "author": "Simon Alperovich",
        "time": "7/2/15 5:52 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private createManyCells() : EditorCell_Collection</code> inlined to <code>public createCell() : EditorCell</code> in class <code>jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider</code>"
        ]
    },
    {
        "id": 1132496,
        "repository": "https://github.com/jboss-developer/jboss-eap-quickstarts.git",
        "sha1": "983e0e0e22ab5bd2c6ea44235518057ea45dcca9",
        "author": "Bruno Oliveira",
        "time": "7/2/15 10:09 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.jboss.as.quickstarts.poh5helloworld</code> to <code>org.jboss.as.quickstarts.html5rest</code>:<ul><li><code>HelloService</code></li><li><code>HelloWorld</code></li></ul>"
        ]
    },
    {
        "id": 1131927,
        "repository": "https://github.com/square/wire.git",
        "sha1": "85a690e3cdbbb8447342eefdf690e22ad1b33e02",
        "author": "jwilson",
        "time": "7/3/15 1:18 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private fieldInitializer(type ProtoTypeName, value Object) : CodeBlock</code> extracted from <code>private defaultValue(field WireField) : CodeBlock</code> in class <code>com.squareup.wire.java.TypeWriter</code>"
        ]
    },
    {
        "id": 1131681,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "3f2a0e7629d032712ab38ab1431cd0a9d91d4db6",
        "author": "d34d",
        "time": "7/3/15 3:18 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private IDMAP_HASH_VERSION : byte</code> from class <code>com.android.server.pm.PackageManagerService</code> to class <code>android.content.pm.ThemeUtils</code>"
        ]
    },
    {
        "id": 1131658,
        "repository": "https://github.com/realm/realm-java.git",
        "sha1": "9b5b10a0c254017a48651771029f4dfc0a61bcfa",
        "author": "Chen Mulong",
        "time": "7/3/15 5:44 AM",
        "refactorings": [
            "<b>Move Multiple Attributes</b> from class <code>io.realm.processor.RealmProxyClassGenerator</code> to <code>io.realm.processor.Constants</code>:<ul><li><code>package CASTING_TYPES : Map&lt;String,String&gt;</code></li><li><code>package JAVA_TO_COLUMN_TYPES : Map&lt;String,String&gt;</code></li><li><code>package JAVA_TO_REALM_TYPES : Map&lt;String,String&gt;</code></li><li><code>package NULLABLE_JAVA_TYPES : Map&lt;String,String&gt;</code></li></ul>"
        ]
    },
    {
        "id": 1131689,
        "repository": "https://github.com/orientechnologies/orientdb.git",
        "sha1": "0a1ff849ec7709be8553383fe9c2c7301980dde0",
        "author": "Luigi Dell'Aquila",
        "time": "7/3/15 5:48 AM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>public getDatabase() : ODatabaseDocumentInternal</code> from class <code>com.orientechnologies.orient.core.sql.parser.OStatement</code> to class <code>com.orientechnologies.orient.core.sql.parser.SimpleNode</code>"
        ]
    },
    {
        "id": 1133259,
        "repository": "https://github.com/slapperwan/gh4a.git",
        "sha1": "b8fffb706258db4c4d2f608d8e8dad9312e2230d",
        "author": "Danny Baumann",
        "time": "7/6/15 4:56 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private isExtensionIn(filename String, extensions List&lt;String&gt;) : boolean</code> extracted from <code>public isImage(filename String) : boolean</code> in class <code>com.gh4a.utils.FileUtils</code>",
            "<b>Move Attribute</b> <code>private SKIP_PRETTIFY_EXT : List&lt;String&gt;</code> from class <code>com.gh4a.Constants</code> to class <code>com.gh4a.activities.WebViewerActivity</code>",
            "<b>Move Multiple Methods</b> from class <code>com.gh4a.utils.StringUtils</code> to <code>com.gh4a.activities.WebViewerActivity</code>:<ul><li><code>private writeCssInclude(builder StringBuilder, cssType String) : void</code></li><li><code>private writeScriptInclude(builder StringBuilder, scriptName String) : void</code></li></ul>",
            "<b>Move Method</b> <code>public highlightImage(imageUrl String) : String</code> from class <code>com.gh4a.utils.StringUtils</code> to class <code>com.gh4a.activities.FileViewerActivity</code>"
        ]
    },
    {
        "id": 1132974,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "c00275e7f85c8a9af5785f66cc0f75dc027b6cb6",
        "author": "mustafaiman",
        "time": "7/6/15 5:59 AM",
        "refactorings": [
            "<b>Push Down Method</b> <code>protected getConnection() : HazelcastConnection</code> from class <code>com.hazelcast.jca.AbstractDeploymentTest</code> to class <code>com.hazelcast.jca.XATransactionTest</code>"
        ]
    },
    {
        "id": 1133936,
        "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
        "sha1": "3325f5ccd23f8016fa28a24f878b54f1918546ed",
        "author": "Carsten Schnober",
        "time": "7/6/15 7:41 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public loadGoogleModel(modelFile File, binary boolean, lineBreaks boolean) : Word2Vec</code> extracted from <code>public loadGoogleModel(modelFile File, binary boolean) : Word2Vec</code> in class <code>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer</code>"
        ]
    },
    {
        "id": 1134191,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "ba1da95200d080aef6251f13ced0ca67dff282be",
        "author": "Rene Groeschke",
        "time": "7/6/15 7:43 AM",
        "refactorings": [
            "<b>Move Class</b> <code>TestExecutionException</code> moved from <code>org.gradle.tooling.tests</code> to <code>org.gradle.tooling.test</code>"
        ]
    },
    {
        "id": 1134188,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "b1fb1192daa1647b0bd525600dd41063765eca70",
        "author": "Benjamin Muschko",
        "time": "7/6/15 10:08 AM",
        "refactorings": [
            "<b>Push Down Attribute</b> <code>private arguments : List&lt;String&gt;</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Attribute</b> <code>private gradleUserHomeDir : File</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Attribute</b> <code>private taskNames : List&lt;String&gt;</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Attribute</b> <code>private workingDirectory : File</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public getArguments() : List&lt;String&gt;</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public getGradleUserHomeDir() : File</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public getTasks() : List&lt;String&gt;</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public getWorkingDir() : File</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public setArguments(arguments List&lt;String&gt;) : void</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public setGradleUserHomeDir(gradleUserHomeDir File) : void</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public setTasks(taskNames List&lt;String&gt;) : void</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>",
            "<b>Push Down Method</b> <code>public setWorkingDir(workingDirectory File) : void</code> from class <code>org.gradle.testkit.functional.GradleRunner</code> to class <code>org.gradle.testkit.functional.internal.DefaultGradleRunner</code>"
        ]
    },
    {
        "id": 1132674,
        "repository": "https://github.com/orientechnologies/orientdb.git",
        "sha1": "f50f234b24e6ada29c82ce57830118508bf55d51",
        "author": "laa",
        "time": "7/6/15 10:20 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.orientechnologies.orient.core.index.hashindex.local.cache</code> to <code>com.orientechnologies.orient.core.storage.cache</code>:<ul><li><code>OBlockedPageException</code></li><li><code>OCachePointer</code></li><li><code>OPageDataVerificationError</code></li><li><code>OReadCache</code></li></ul>",
            "<b>Move Classes</b> from <code>com.orientechnologies.orient.core.index.hashindex.local.cache</code> to <code>com.orientechnologies.orient.core.storage.cache.local</code>:<ul><li><code>ConcurrentLRUList</code></li><li><code>HashLRUList</code></li><li><code>HashLRUListTest</code></li><li><code>LRUEntry</code></li><li><code>LRUList</code></li><li><code>PageGroup</code></li><li><code>ReadWriteDiskCacheTest</code></li><li><code>SynchronizedLRUList</code></li></ul>"
        ]
    },
    {
        "id": 1134252,
        "repository": "https://github.com/crate/crate.git",
        "sha1": "d5f10a4958f5e870680be906689d92d1efb42480",
        "author": "Christian Haudum",
        "time": "7/6/15 11:45 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public add(info ReferenceInfo, partitionBy boolean) : Builder</code> extracted from <code>public add(column String, type DataType, path List&lt;String&gt;, columnPolicy ColumnPolicy, indexType IndexType, partitionBy boolean) : Builder</code> in class <code>io.crate.metadata.table.TestingTableInfo.Builder</code>"
        ]
    },
    {
        "id": 1133661,
        "repository": "https://github.com/real-logic/Aeron.git",
        "sha1": "4b762c2c70f06b0c5d2cd85866424c46478c827b",
        "author": "Martin Thompson",
        "time": "7/6/15 12:18 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private flowControl : FlowControl</code> from class <code>uk.co.real_logic.aeron.driver.cmd.NewPublicationCmd</code> to class <code>uk.co.real_logic.aeron.driver.NetworkPublication</code>"
        ]
    },
    {
        "id": 1134634,
        "repository": "https://github.com/infinispan/infinispan.git",
        "sha1": "35b6c869546a7968b6fd2f640add6eea87e03c22",
        "author": "Adrian Nistor",
        "time": "7/6/15 1:12 PM",
        "refactorings": [
            "<b>Move Class</b> <code>ReverseFilterResultComparator</code> moved from <code>org.infinispan.query.dsl.embedded.impl.EmbeddedQuery</code> to <code>org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery</code>"
        ]
    },
    {
        "id": 1133583,
        "repository": "https://github.com/google/guava.git",
        "sha1": "5bab9e837cf273250aa26702204f139fdcfd9e7a",
        "author": "Chris Povirk",
        "time": "7/6/15 1:19 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private checkForConcurrentModification() : void</code> inlined to <code>public hasNext() : boolean</code> and <code>public remove() : void</code> in class <code>com.google.common.collect.HashBiMap.Itr</code>"
        ]
    },
    {
        "id": 1134102,
        "repository": "https://github.com/hibernate/hibernate-orm.git",
        "sha1": "2f1b67b03f6c48aa189d7478e16ed0dcf8d50af8",
        "author": "Radim Vansa",
        "time": "7/6/15 1:40 PM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>protected MUTABLE_NON_VERSIONED : CacheDataDescription</code> from classes <code>org.hibernate.test.cache.infinispan.collection.CollectionRegionImplTestCase</code> and <code>org.hibernate.test.cache.infinispan.entity.EntityRegionImplTestCase</code> to class <code>org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase</code>"
        ]
    },
    {
        "id": 1133238,
        "repository": "https://github.com/google/truth.git",
        "sha1": "1768840bf1e69892fd2a23776817f620edfed536",
        "author": "kak",
        "time": "7/6/15 1:54 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.google.common.truth.ListTest</code> to <code>com.google.common.truth.IterableTest</code>:<ul><li><code>Bar</code></li><li><code>Foo</code></li></ul>"
        ]
    },
    {
        "id": 1133240,
        "repository": "https://github.com/google/truth.git",
        "sha1": "200f1577d238a6d3fbcf99cb2a2585b2071214a6",
        "author": "kak",
        "time": "7/6/15 1:54 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public isOrdered() : void</code> extracted from <code>public isPartiallyOrdered() : void</code> in class <code>com.google.common.truth.IterableSubject</code>",
            "<b>Extract Method</b> <code>public isOrdered(comparator Comparator&lt;? super T&gt;) : void</code> extracted from <code>public isPartiallyOrdered(comparator Comparator&lt;? super T&gt;) : void</code> in class <code>com.google.common.truth.IterableSubject</code>"
        ]
    },
    {
        "id": 1132984,
        "repository": "https://github.com/wildfly/wildfly.git",
        "sha1": "c0f8a7f2b4341601df63c5470f41f157dbd83781",
        "author": "Josh Kinlaw",
        "time": "7/6/15 3:03 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private standaloneCollect(cli CLI, protocol String, host String, port int) : void</code> extracted from <code>public main(args String[]) : void</code> in class <code>org.jboss.as.jdr.CommandLineMain</code>"
        ]
    },
    {
        "id": 1134096,
        "repository": "https://github.com/hibernate/hibernate-orm.git",
        "sha1": "44a02e5efc39c6953ca6dd631669d91293ab67f6",
        "author": "barreiro",
        "time": "7/6/15 3:34 PM",
        "refactorings": [
            "<b>Move Class</b> <code>MyEntity</code> moved from <code>org.hibernate.test.bytecode.enhancement.entity</code> to <code>org.hibernate.test.bytecode.enhancement.basic</code>",
            "<b>Move Classes</b> from <code>org.hibernate.test.bytecode.enhancement.entity</code> to <code>org.hibernate.test.bytecode.enhancement.dirty</code>:<ul><li><code>Address</code></li><li><code>Country</code></li><li><code>SimpleEntity</code></li></ul>",
            "<b>Move Classes</b> from <code>org.hibernate.test.bytecode.enhancement.entity.customer</code> to <code>org.hibernate.test.bytecode.enhancement.association</code>:<ul><li><code>Group</code></li><li><code>User</code></li></ul>"
        ]
    },
    {
        "id": 1132646,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "4587c32ab8a1c8e2169e4f93491a8c927216a6ab",
        "author": "Charles Tsai",
        "time": "7/6/15 3:49 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private startAsync() : void</code> extracted from <code>public start() : void</code> in class <code>com.android.systemui.usb.StorageNotification</code>"
        ]
    },
    {
        "id": 1132736,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "05bd8ecda456e0901ef7375b9ff7b120ae668eca",
        "author": "peter shaw",
        "time": "7/6/15 4:02 PM",
        "refactorings": [
            "<b>Move Class</b> <code>Connect2Server</code> moved from <code>exportbenchmark</code> to <code>exportbenchmark2.client.exportbenchmark</code>",
            "<b>Move Classes</b> from <code>exportbenchmark</code> to <code>exportbenchmark2.exporter.exportbenchmark</code>:<ul><li><code>NoOpExporter</code></li><li><code>SocketExporter</code></li></ul>",
            "<b>Move Classes</b> from <code>exportbenchmark.procedures</code> to <code>exportbenchmark2.db.exportbenchmark.procedures</code>:<ul><li><code>InsertExport</code></li><li><code>InsertExport0</code></li><li><code>InsertExport1</code></li><li><code>InsertExport10</code></li><li><code>InsertExport5</code></li><li><code>SampleRecord</code></li><li><code>TruncateTables</code></li></ul>"
        ]
    },
    {
        "id": 1133355,
        "repository": "https://github.com/abarisain/dmix.git",
        "sha1": "885771d57c97bd2dd48951e8aeaaa87ceb87532b",
        "author": "Avuton Olrich",
        "time": "7/6/15 5:49 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>package processIntent(action String, mpd MPD) : void</code> inlined to <code>protected onHandleIntent(intent Intent) : void</code> in class <code>com.namelessdev.mpdroid.widgets.WidgetHelperService</code>"
        ]
    },
    {
        "id": 1133977,
        "repository": "https://github.com/cucumber/cucumber-jvm.git",
        "sha1": "0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
        "author": "Aslak Hellesøy",
        "time": "7/6/15 7:36 PM",
        "refactorings": [
            "<b>Move Class</b> <code>ObjectFactory</code> moved from <code>cucumber.runtime.java</code> to <code>cucumber.api.java</code>"
        ]
    },
    {
        "id": 1133865,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "b2bbd9941be6b132a83d27c0ae02c935e1dec5dd",
        "author": "Hanifi Gunes",
        "time": "7/6/15 8:28 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private allocateBytes(size long) : void</code> extracted from <code>public allocateNew(valueCount int) : void</code> and <code>public allocateNewSafe() : boolean</code> in class <code>org.apache.drill.exec.vector.$</code>",
            "<b>Extract Method</b> <code>private allocateBytes(size long) : void</code> extracted from <code>public allocateNew(valueCount int) : void</code> and <code>public allocateNewSafe() : boolean</code> in class <code>org.apache.drill.exec.vector.BitVector</code>"
        ]
    },
    {
        "id": 1134151,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "36ccb0f5c6771ff4be87a282560c090447520b66",
        "author": "Daz DeBoer",
        "time": "7/6/15 8:45 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph</code> to <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult</code>:<ul><li><code>AbstractArtifactSet</code></li><li><code>ArtifactSet</code></li><li><code>ConfigurationArtifactSet</code></li><li><code>DependencyArtifactSet</code></li><li><code>ResolvedConfigurationDependencyGraphVisitor</code></li></ul>",
            "<b>Move Class</b> <code>ResolvedLocalComponentsResultGraphVisitor</code> moved from <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph</code> to <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.projectresult</code>",
            "<b>Move Class</b> <code>ResolutionResultDependencyGraphVisitor</code> moved from <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph</code> to <code>org.gradle.api.internal.artifacts.ivyservice.resolveengine.result</code>"
        ]
    },
    {
        "id": 1133054,
        "repository": "https://github.com/WhisperSystems/TextSecure.git",
        "sha1": "fa62b9bde224341e0c2d43c0694fc10c4df7336f",
        "author": "Jake McGinty",
        "time": "7/6/15 8:50 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private init() : void</code> inlined to <code>public EmojiDrawer(context Context, attrs AttributeSet, defStyle int)</code> in class <code>org.thoughtcrime.securesms.components.emoji.EmojiDrawer</code>",
            "<b>Inline Method</b> <code>private initializeResources() : void</code> inlined to <code>private initialize() : void</code> in class <code>org.thoughtcrime.securesms.components.emoji.EmojiToggle</code>"
        ]
    },
    {
        "id": 1133515,
        "repository": "https://github.com/spring-projects/spring-data-mongodb.git",
        "sha1": "3224fa8ce7e0079d6ad507e17534cdf01f758876",
        "author": "Christoph Strobl",
        "time": "7/7/15 4:57 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private processTypeHintForNestedDocuments(source Object, info TypeInformation&lt;?&gt;) : TypeInformation&lt;?&gt;</code> inlined to <code>private getTypeHintForEntity(source Object, entity MongoPersistentEntity&lt;?&gt;) : TypeInformation&lt;?&gt;</code> in class <code>org.springframework.data.mongodb.core.convert.UpdateMapper</code>"
        ]
    },
    {
        "id": 1134145,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "f394599bf1423be0be2d5822ed7f1271d2841225",
        "author": "Lóránt Pintér",
        "time": "7/7/15 8:09 AM",
        "refactorings": [
            "<b>Move Class</b> <code>JarBinaryRules</code> moved from <code>org.gradle.jvm.plugins</code> to <code>org.gradle.jvm.internal</code>"
        ]
    },
    {
        "id": 1133761,
        "repository": "https://github.com/spring-projects/spring-data-jpa.git",
        "sha1": "36d1b0717bc5836bba39985caadc2df5f2533ac4",
        "author": "Dev Naruka",
        "time": "7/7/15 9:13 AM",
        "refactorings": [
            "<b>Move Class</b> <code>PropertyChangeEnsuringBeanWrapper</code> moved from <code>org.springframework.data.jpa.repository.augment.JpaSoftDeleteQueryAugmentor</code> to <code>org.springframework.data.jpa.repository.augment</code>"
        ]
    },
    {
        "id": 1135417,
        "repository": "https://github.com/google/j2objc.git",
        "sha1": "fa3e6fa02dadc675f0d487a15cd842b3ac4a0c11",
        "author": "kstanger",
        "time": "7/7/15 1:03 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getOperatorFunctionModifier(expr Expression) : String</code> extracted from <code>private rewriteBoxedPrefixOrPostfix(node TreeNode, operand Expression, funcName String) : void</code> in class <code>com.google.devtools.j2objc.translate.Autoboxer</code>"
        ]
    },
    {
        "id": 1135734,
        "repository": "https://github.com/google/closure-compiler.git",
        "sha1": "b9a17665b158955ad28ef7f50cc0a8585460f053",
        "author": "tbreisacher",
        "time": "7/7/15 1:21 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private createUntaggedTemplateLiteral(n Node) : void</code> inlined to <code>package visitTemplateLiteral(t NodeTraversal, n Node) : void</code> in class <code>com.google.javascript.jscomp.Es6TemplateLiterals</code>"
        ]
    },
    {
        "id": 1135604,
        "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
        "sha1": "91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
        "author": "nyghtowl",
        "time": "7/7/15 8:06 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getNewScore(oldParameters INDArray) : double</code> extracted from <code>public optimize(initialStep double, parameters INDArray, gradients INDArray) : double</code> in class <code>org.deeplearning4j.optimize.solvers.BackTrackLineSearch</code>",
            "<b>Move Method</b> <code>public testBackTrackLine() : void</code> from class <code>org.deeplearning4j.plot.ListenerTest</code> to class <code>org.deeplearning4j.optimize.solver.BackTrackLineSearchTest</code>"
        ]
    },
    {
        "id": 1135909,
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "ef0eb01f93d6c485cf37692fd193833a6821272a",
        "author": "Brian Clozel",
        "time": "7/7/15 8:08 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected checkRequest(request HttpServletRequest) : void</code> extracted from <code>protected checkAndPrepare(request HttpServletRequest, response HttpServletResponse, cacheControl CacheControl) : void</code> in class <code>org.springframework.web.servlet.support.WebContentGenerator</code>"
        ]
    },
    {
        "id": 1136002,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
        "author": "Sergey Shelukhin",
        "time": "7/7/15 10:30 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private doFirstFetchIfNeeded() : void</code> extracted from <code>private joinFinalLeftData() : void</code> and <code>public process(row Object, tag int) : void</code> in class <code>org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator</code>"
        ]
    },
    {
        "id": 1135559,
        "repository": "https://github.com/tomahawk-player/tomahawk-android.git",
        "sha1": "56c273ee11296288cb15320c3de781b94a1e8eb4",
        "author": "Enno Gottschalk",
        "time": "7/7/15 10:44 PM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>protected mAlbumArtists : Set&lt;Artist&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.Collection</code>",
            "<b>Pull Up Attribute</b> <code>protected mAlbumTracks : ConcurrentHashMap&lt;Album,Set&lt;Query&gt;&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.Collection</code>",
            "<b>Pull Up Attribute</b> <code>protected mAlbums : Set&lt;Album&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.Collection</code>",
            "<b>Pull Up Attribute</b> <code>protected mArtistAlbums : ConcurrentHashMap&lt;Artist,Set&lt;Album&gt;&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.Collection</code>",
            "<b>Pull Up Attribute</b> <code>protected mArtists : Set&lt;Artist&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.Collection</code>",
            "<b>Pull Up Attribute</b> <code>protected mQueries : Set&lt;Query&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.Collection</code>",
            "<b>Pull Up Method</b> <code>public wipe() : void</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.Collection</code>",
            "<b>Push Down Attribute</b> <code>private mAlbumTimeStamps : ConcurrentHashMap&lt;Album,Long&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.UserCollection</code>",
            "<b>Push Down Attribute</b> <code>private mArtistTimeStamps : ConcurrentHashMap&lt;Artist,Long&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.UserCollection</code>",
            "<b>Push Down Attribute</b> <code>private mQueryTimeStamps : ConcurrentHashMap&lt;Query,Long&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.UserCollection</code>",
            "<b>Push Down Method</b> <code>public addQuery(query Query, addedTimeStamp long) : void</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.UserCollection</code>",
            "<b>Push Down Method</b> <code>public getAlbumTimeStamps() : ConcurrentHashMap&lt;Album,Long&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.UserCollection</code>",
            "<b>Push Down Method</b> <code>public getArtistTimeStamps() : ConcurrentHashMap&lt;Artist,Long&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.UserCollection</code>",
            "<b>Push Down Method</b> <code>public getQueryTimeStamps() : ConcurrentHashMap&lt;Query,Long&gt;</code> from class <code>org.tomahawk.libtomahawk.collection.NativeCollection</code> to class <code>org.tomahawk.libtomahawk.collection.UserCollection</code>"
        ]
    },
    {
        "id": 1136424,
        "repository": "https://github.com/nutzam/nutz.git",
        "sha1": "de7efe40dad0f4bb900c4fffa80ed377745532b3",
        "author": "kouxian",
        "time": "7/8/15 5:25 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public migration(dao Dao, klass Class&lt;?&gt;, add boolean, del boolean, tableName Object) : void</code> extracted from <code>public migration(dao Dao, klass Class&lt;?&gt;, add boolean, del boolean) : void</code> in class <code>org.nutz.dao.util.Daos</code>"
        ]
    },
    {
        "id": 1136909,
        "repository": "https://github.com/amplab/tachyon.git",
        "sha1": "b0938501f1014cf663e33b44ed5bb9b24d19a358",
        "author": "Gene Pang",
        "time": "7/8/15 1:29 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream</code> extracted from <code>public disableLocalWriteTest() : void</code> and <code>public enableLocalWriteTest() : void</code> in class <code>tachyon.client.BlockOutStreamIntegrationTest</code>"
        ]
    },
    {
        "id": 1136760,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "f283ed29814403bde6350a2598cdd6e2c8b983d5",
        "author": "Yuki Morishita",
        "time": "7/8/15 1:58 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List&lt;Future&lt;?&gt;&gt;</code> inlined to <code>public submitBackground(cfs ColumnFamilyStore) : List&lt;Future&lt;?&gt;&gt;</code> in class <code>org.apache.cassandra.db.compaction.CompactionManager</code>"
        ]
    },
    {
        "id": 1136668,
        "repository": "https://github.com/orfjackal/retrolambda.git",
        "sha1": "46b0d84de9c309bca48a99e572e6611693ed5236",
        "author": "Esko Luontola",
        "time": "7/8/15 2:08 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public saveResource(relativePath Path, content byte[]) : void</code> extracted from <code>public save(bytecode byte[]) : void</code> in class <code>net.orfjackal.retrolambda.files.ClassSaver</code>"
        ]
    },
    {
        "id": 1136831,
        "repository": "https://github.com/JetBrains/MPS.git",
        "sha1": "7b5622d41537315710b6fd57b2739a3a64698375",
        "author": "Fedor Isakov",
        "time": "7/8/15 2:53 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getTreePath(components List&lt;String&gt;, escapePathSep boolean) : TreePath</code> extracted from <code>private stringToPath(pathString String) : TreePath</code> in class <code>jetbrains.mps.ide.ui.tree.MPSTree</code>"
        ]
    },
    {
        "id": 1137049,
        "repository": "https://github.com/Jasig/cas.git",
        "sha1": "7fb0d1ce3b6583013e81ac05eb9afb15d20eab7f",
        "author": "Misagh Moayyed",
        "time": "7/8/15 2:56 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private NTLMSSP_SIGNATURE : Byte[]</code> from class <code>org.jasig.cas.support.spnego.util.SpnegoConstants</code> to class <code>org.jasig.cas.support.spnego.authentication.principal.SpnegoCredential</code>"
        ]
    },
    {
        "id": 1137085,
        "repository": "https://github.com/facebook/facebook-android-sdk.git",
        "sha1": "19d1936c3b07d97d88646aeae30de747715e3248",
        "author": "Ming Li",
        "time": "7/8/15 3:33 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getError(extras Bundle) : String</code> extracted from <code>private handleResultOk(request Request, data Intent) : Result</code> in class <code>com.facebook.login.KatanaProxyLoginMethodHandler</code>",
            "<b>Extract Method</b> <code>private getErrorMessage(extras Bundle) : String</code> extracted from <code>private handleResultOk(request Request, data Intent) : Result</code> in class <code>com.facebook.login.KatanaProxyLoginMethodHandler</code>",
            "<b>Extract Method</b> <code>public sdkInitialize(applicationContext Context, callback InitializeCallback) : void</code> extracted from <code>public sdkInitialize(applicationContext Context) : void</code> in class <code>com.facebook.FacebookSdk</code>",
            "<b>Extract Method</b> <code>public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int, callback InitializeCallback) : void</code> extracted from <code>public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int) : void</code> in class <code>com.facebook.FacebookSdk</code>",
            "<b>Move Multiple Attributes</b> from class <code>com.facebook.share.internal.ShareInternalUtility</code> to <code>com.facebook.GraphRequest</code>:<ul><li><code>private CAPTION_PARAM : String</code></li><li><code>private PICTURE_PARAM : String</code></li></ul>"
        ]
    },
    {
        "id": 1136996,
        "repository": "https://github.com/gwtproject/gwt.git",
        "sha1": "e0dda9f61b7c409944c4734edf75b108e0288f59",
        "author": "Daniel Kurka",
        "time": "7/8/15 4:20 PM",
        "refactorings": [
            "<b>Move Class</b> <code>Md5Digest</code> moved from <code>com.google.gwt.core.client.impl</code> to <code>java.security.MessageDigest</code>"
        ]
    },
    {
        "id": 1136335,
        "repository": "https://github.com/WhisperSystems/TextSecure.git",
        "sha1": "f0b2cc559026871c1b4d8e008666afb590553004",
        "author": "Christoph Haefner",
        "time": "7/8/15 4:55 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private craftIntent(context Context, intentAction String, extras Bundle) : PendingIntent</code> extracted from <code>public getMarkAsReadIntent(context Context, masterSecret MasterSecret) : PendingIntent</code> in class <code>org.thoughtcrime.securesms.notifications.NotificationState</code>"
        ]
    },
    {
        "id": 1136184,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
        "author": "Vassiliy.Kudryashov",
        "time": "7/8/15 5:41 PM",
        "refactorings": [
            "<b>Move Method</b> <code>private getLiveIndicator(base Icon) : Icon</code> from class <code>com.intellij.execution.ui.RunContentManagerImpl</code> to class <code>com.intellij.execution.runners.ExecutionUtil</code>"
        ]
    },
    {
        "id": 1136537,
        "repository": "https://github.com/bitcoinj/bitcoinj.git",
        "sha1": "95bfa40630e34f6f369e0055d9f37f49bca60247",
        "author": "Mike Hearn",
        "time": "7/8/15 7:36 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getUTXOs(outPoints List&lt;TransactionOutPoint&gt;, includeMempool boolean) : ListenableFuture&lt;UTXOsMessage&gt;</code> extracted from <code>public getUTXOs(outPoints List&lt;TransactionOutPoint&gt;) : ListenableFuture&lt;UTXOsMessage&gt;</code> in class <code>org.bitcoinj.core.Peer</code>"
        ]
    },
    {
        "id": 1136333,
        "repository": "https://github.com/WhisperSystems/TextSecure.git",
        "sha1": "c4a37e38aba926c2bef27e4fc00e3a4848ce46bd",
        "author": "Calvin Hu",
        "time": "7/8/15 8:01 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public setMedia(slide Slide, masterSecret MasterSecret) : void</code> extracted from <code>public setMedia(slide Slide) : void</code> in class <code>org.thoughtcrime.securesms.mms.AttachmentManager</code>"
        ]
    },
    {
        "id": 1137157,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "f664789737d516ac664462732664121acc111a1e",
        "author": "Eugene Koifman",
        "time": "7/8/15 9:53 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private dumpConfig(conf Configuration, sb StringBuilder) : void</code> extracted from <code>private dumpEnvironent() : String</code> in class <code>org.apache.hive.hcatalog.templeton.AppConfig</code>"
        ]
    },
    {
        "id": 1136737,
        "repository": "https://github.com/checkstyle/checkstyle.git",
        "sha1": "a07cae0aca9f9072256b3a5fd05779e8d69b9748",
        "author": "Baratali Izmailov",
        "time": "7/8/15 10:27 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private leaveLiteralIf(literalIf DetailAST) : void</code> inlined to <code>public leaveToken(literalIf DetailAST) : void</code> in class <code>com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck</code>",
            "<b>Inline Method</b> <code>private leaveLiteralTry() : void</code> inlined to <code>public leaveToken(literalTry DetailAST) : void</code> in class <code>com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck</code>",
            "<b>Inline Method</b> <code>private visitLiteralIf(literalIf DetailAST) : void</code> inlined to <code>public visitToken(literalIf DetailAST) : void</code> in class <code>com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck</code>",
            "<b>Inline Method</b> <code>private visitLiteralTry(literalTry DetailAST) : void</code> inlined to <code>public visitToken(literalTry DetailAST) : void</code> in class <code>com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck</code>"
        ]
    },
    {
        "id": 1138074,
        "repository": "https://github.com/amplab/tachyon.git",
        "sha1": "9aeefcd8120bb3b89cdb437d8c32d2ed84b8a825",
        "author": "Carson Wang",
        "time": "7/9/15 1:34 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getCandidateDirInTier(tier StorageTier, blockSize long) : StorageDir</code> extracted from <code>public allocateBlock(userId long, blockId long, blockSize long, location BlockStoreLocation) : TempBlockMeta</code> in class <code>tachyon.worker.block.allocator.MaxFreeAllocator</code>"
        ]
    },
    {
        "id": 1136729,
        "repository": "https://github.com/reactor/reactor.git",
        "sha1": "669b96c8aa4ed5134617932118de563bd4c34066",
        "author": "Stephane Maldini",
        "time": "7/9/15 6:45 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>reactor.bus.alloc</code> to <code>reactor.alloc</code>:<ul><li><code>EventAllocator</code></li><li><code>EventAllocatorTests</code></li><li><code>EventFactorySupplier</code></li></ul>",
            "<b>Move Classes</b> from <code>reactor.core.alloc</code> to <code>reactor.alloc</code>:<ul><li><code>AbstractReference</code></li><li><code>Allocator</code></li><li><code>RecyclableNumber</code></li><li><code>RecyclableString</code></li><li><code>Reference</code></li><li><code>ReferenceCountingAllocator</code></li></ul>",
            "<b>Move Class</b> <code>Recyclable</code> moved from <code>reactor.core.alloc</code> to <code>reactor.core.support</code>"
        ]
    },
    {
        "id": 1136870,
        "repository": "https://github.com/crate/crate.git",
        "sha1": "563d281b61e9f8748858e911eaa810e981f1e953",
        "author": "dobe",
        "time": "7/9/15 6:48 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getCustomRoutingCol() : ColumnIdent</code> extracted from <code>private getRoutingCol() : ColumnIdent</code> in class <code>io.crate.metadata.doc.DocIndexMetaData</code>"
        ]
    },
    {
        "id": 1136480,
        "repository": "https://github.com/siacs/Conversations.git",
        "sha1": "bdc9f9a44f337ab595a3570833dc6a0558df904c",
        "author": "Andreas Straub",
        "time": "7/9/15 9:23 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor</code> extracted from <code>private getIdentityKeyCursor(account Account, name String, own boolean) : Cursor</code> in class <code>eu.siacs.conversations.persistance.DatabaseBackend</code>"
        ]
    },
    {
        "id": 1137389,
        "repository": "https://github.com/openhab/openhab.git",
        "sha1": "cf1efb6d27a4037cdbe5a780afa6053859a60d4a",
        "author": "HelmutL",
        "time": "7/9/15 9:46 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private initializeGeneralGlobals() : void</code> extracted from <code>private initializeSciptGlobals() : void</code> in class <code>org.openhab.core.jsr223.internal.engine.scriptmanager.Script</code>",
            "<b>Extract Method</b> <code>private initializeNashornGlobals() : void</code> extracted from <code>private initializeSciptGlobals() : void</code> in class <code>org.openhab.core.jsr223.internal.engine.scriptmanager.Script</code>"
        ]
    },
    {
        "id": 1136374,
        "repository": "https://github.com/novoda/android-demos.git",
        "sha1": "5cdabae35f0642e9fe243afe12e4c16b3378a150",
        "author": "Friedger Müffke",
        "time": "7/9/15 10:00 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.novoda</code> to <code>com.novoda.demo.encryption</code>:<ul><li><code>Base64</code></li><li><code>Base64DecoderException</code></li></ul>"
        ]
    },
    {
        "id": 1138004,
        "repository": "https://github.com/netty/netty.git",
        "sha1": "8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
        "author": "nmittler",
        "time": "7/9/15 11:35 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private cancelPendingStreams() : void</code> inlined to <code>public close() : void</code> in class <code>io.netty.handler.codec.http2.StreamBufferingEncoder</code>"
        ]
    },
    {
        "id": 1138152,
        "repository": "https://github.com/apache/camel.git",
        "sha1": "9f319029ecc031cf8bf1756ab8a0e9e4e52c2902",
        "author": "Claus Ibsen",
        "time": "7/9/15 1:06 PM",
        "refactorings": [
            "<b>Extract Interface</b> <code>org.apache.camel.model.OtherAttributesAware</code> from type <code>org.apache.camel.model.ProcessorDefinition</code>"
        ]
    },
    {
        "id": 1137619,
        "repository": "https://github.com/spotify/helios.git",
        "sha1": "da39bfeb9c370abe2d86e6e327fade252434090d",
        "author": "David Xia",
        "time": "7/9/15 3:44 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package run0(client HeliosClient, out PrintStream, json boolean, name String, full boolean) : int</code> extracted from <code>package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int</code> in class <code>com.spotify.helios.cli.command.DeploymentGroupStatusCommand</code>"
        ]
    },
    {
        "id": 1137231,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "910397f2390d6821a006991ed6035c76cbc74897",
        "author": "Jorge Ruesga",
        "time": "7/9/15 4:42 PM",
        "refactorings": [
            "<b>Extract Interface</b> <code>com.android.systemui.statusbar.policy.BatteryStateRegistar</code> from type <code>com.android.systemui.statusbar.policy.BatteryController</code>",
            "<b>Extract Method</b> <code>private queryProperty(id int, fromDock boolean) : long</code> extracted from <code>private queryProperty(id int) : long</code> in class <code>android.os.BatteryManager</code>",
            "<b>Extract Method</b> <code>protected getBoltPointsArrayResource() : int</code> extracted from <code>private loadBoltPoints(res Resources) : float[]</code> in class <code>com.android.systemui.BatteryMeterView.NormalBatteryMeterDrawable</code>",
            "<b>Extract Method</b> <code>public internalStoreStatsHistoryInFile(stats BatteryStats, fname String) : void</code> extracted from <code>public storeStatsHistoryInFile(fname String) : void</code> in class <code>com.android.internal.os.BatteryStatsHelper</code>"
        ]
    },
    {
        "id": 1137794,
        "repository": "https://github.com/thymeleaf/thymeleaf.git",
        "sha1": "aed371dac5e1248880e869930c636994c3d0f8dc",
        "author": "Daniel Fernández",
        "time": "7/9/15 6:57 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private fillUpOverflow() : void</code> extracted from <code>public read(cbuf char[], off int, len int) : int</code> in class <code>org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader</code>",
            "<b>Extract Method</b> <code>private processReadBuffer(buffer char[], off int, len int) : int</code> extracted from <code>public read(cbuf char[], off int, len int) : int</code> in class <code>org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader</code>"
        ]
    },
    {
        "id": 1137182,
        "repository": "https://github.com/HubSpot/Singularity.git",
        "sha1": "944aea445051891280a8ab7fbbd514c19646f1ab",
        "author": "Whitney Sorenson",
        "time": "7/9/15 7:21 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, updateTime long, instanceNo int, initialTaskState TaskState) : SingularityTask</code> extracted from <code>protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, instanceNo int, initialTaskState TaskState) : SingularityTask</code> in class <code>com.hubspot.singularity.SingularitySchedulerTestBase</code>"
        ]
    },
    {
        "id": 1137576,
        "repository": "https://github.com/google/auto.git",
        "sha1": "8fc60d81fe0e46e7e5c96e71d4a93fcadc6bde4f",
        "author": "dpb",
        "time": "7/9/15 9:16 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private deferredElements() : ImmutableMap&lt;String,Optional&lt;? extends Element&gt;&gt;</code> extracted from <code>public process(annotations Set&lt;? extends TypeElement&gt;, roundEnv RoundEnvironment) : boolean</code> in class <code>com.google.auto.common.BasicAnnotationProcessor</code>",
            "<b>Extract Method</b> <code>private process(validElements ImmutableSetMultimap&lt;Class&lt;? extends Annotation&gt;,Element&gt;) : void</code> extracted from <code>public process(annotations Set&lt;? extends TypeElement&gt;, roundEnv RoundEnvironment) : boolean</code> in class <code>com.google.auto.common.BasicAnnotationProcessor</code>",
            "<b>Extract Method</b> <code>private validElements(deferredElements ImmutableMap&lt;String,Optional&lt;? extends Element&gt;&gt;, roundEnv RoundEnvironment) : ImmutableSetMultimap&lt;Class&lt;? extends Annotation&gt;,Element&gt;</code> extracted from <code>public process(annotations Set&lt;? extends TypeElement&gt;, roundEnv RoundEnvironment) : boolean</code> in class <code>com.google.auto.common.BasicAnnotationProcessor</code>"
        ]
    },
    {
        "id": 1137575,
        "repository": "https://github.com/google/auto.git",
        "sha1": "8967e7c33c59e1336e1e3b4671293ced5697fca6",
        "author": "emcmanus",
        "time": "7/9/15 9:16 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private doTestMissingClass(tempDir File) : void</code> extracted from <code>public testMissingClass() : void</code> in class <code>com.google.auto.value.processor.AutoAnnotationCompilationTest</code>"
        ]
    },
    {
        "id": 1137793,
        "repository": "https://github.com/thymeleaf/thymeleaf.git",
        "sha1": "378ba37750a9cb1b19a6db434dfa59308f721ea6",
        "author": "Daniel Fernández",
        "time": "7/9/15 9:20 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private matchOverflow(structure char[]) : boolean</code> extracted from <code>public read(cbuf char[], off int, len int) : int</code> in class <code>org.thymeleaf.templateparser.reader.BlockAwareReader</code>"
        ]
    },
    {
        "id": 1137397,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
        "author": "Marko Topolnik",
        "time": "7/10/15 5:19 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>public UTF_8 : Charset</code> from class <code>com.hazelcast.client.impl.protocol.util.SafeBuffer</code> to class <code>com.hazelcast.nio.Bits</code>",
            "<b>Move Attribute</b> <code>public UTF_8 : Charset</code> from class <code>com.hazelcast.client.impl.protocol.util.UnsafeBuffer</code> to class <code>com.hazelcast.nio.Bits</code>",
            "<b>Move Class</b> <code>Int2ObjectHashMap</code> moved from <code>com.hazelcast.client.impl.protocol.util</code> to <code>com.hazelcast.util.collection</code>",
            "<b>Move Class</b> <code>Int2ObjectHashMapTest</code> moved from <code>com.hazelcast.client.protocol</code> to <code>com.hazelcast.util.collection</code>"
        ]
    },
    {
        "id": 1137627,
        "repository": "https://github.com/siacs/Conversations.git",
        "sha1": "925801c14e7500313069b2bc04abd066798a881c",
        "author": "Daniel Gultsch",
        "time": "7/10/15 9:14 AM",
        "refactorings": [
            "<b>Move Method</b> <code>private setupTrustManager(connection HttpsURLConnection, interactive boolean) : void</code> from class <code>eu.siacs.conversations.http.HttpConnection</code> to class <code>eu.siacs.conversations.http.HttpConnectionManager</code>"
        ]
    },
    {
        "id": 1137311,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "e1625136ba12907696ef4c6e922ce073293f3a2c",
        "author": "Vladislav.Soroka",
        "time": "7/10/15 10:34 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private addAnnotationProcessorOption(compilerArg String, optionsMap Map&lt;String,String&gt;) : void</code> extracted from <code>private getAnnotationProcessorOptionsFromCompilerConfig(compilerConfig Element) : Map&lt;String,String&gt;</code> in class <code>org.jetbrains.idea.maven.project.MavenProject</code>"
        ]
    },
    {
        "id": 1138135,
        "repository": "https://github.com/apache/camel.git",
        "sha1": "cb0935e3af05b333b5c85a4fb3b1846836218f11",
        "author": "Jonathan Anstey",
        "time": "7/10/15 11:17 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private storeCamelContextInQuartzContext() : SchedulerContext</code> extracted from <code>private createAndInitScheduler() : void</code> in class <code>org.apache.camel.component.quartz2.QuartzComponent</code>"
        ]
    },
    {
        "id": 1139380,
        "repository": "https://github.com/square/javapoet.git",
        "sha1": "5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
        "author": "Thomas Broyer",
        "time": "7/10/15 11:56 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>com.squareup.javapoet.AbstractTypesTest</code> from class <code>com.squareup.javapoet.TypesTest</code>",
            "<b>Move Class</b> <code>Parameterized</code> moved from <code>com.squareup.javapoet.TypesTest</code> to <code>com.squareup.javapoet.AbstractTypesTest</code>"
        ]
    },
    {
        "id": 1139036,
        "repository": "https://github.com/spotify/helios.git",
        "sha1": "dd8753cfb0f67db4dde6c5254e2df3104b635dae",
        "author": "Rohan Singh",
        "time": "7/10/15 6:18 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getDeploymentGroup(client ZooKeeperClient, name String) : DeploymentGroup</code> extracted from <code>public getDeploymentGroup(name String) : DeploymentGroup</code> in class <code>com.spotify.helios.master.ZooKeeperMasterModel</code>"
        ]
    },
    {
        "id": 1138354,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "76331570e68446c17e4ff5287f5b7b2b6b472895",
        "author": "Andy Mast",
        "time": "7/11/15 2:50 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public clearFailedUnlockAttempts(clearFingers boolean) : void</code> extracted from <code>public clearFailedUnlockAttempts() : void</code> in class <code>com.android.keyguard.KeyguardUpdateMonitor</code>"
        ]
    },
    {
        "id": 1139092,
        "repository": "https://github.com/github/android.git",
        "sha1": "a7401e5091c06c68fae499ea1972b40143c66fa9",
        "author": "Henrik",
        "time": "7/11/15 9:20 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private onUserLoggedIn(uri Uri) : void</code> extracted from <code>protected onNewIntent(intent Intent) : void</code> in class <code>com.github.mobile.accounts.LoginActivity</code>"
        ]
    },
    {
        "id": 1139562,
        "repository": "https://github.com/amplab/tachyon.git",
        "sha1": "5b184ac783784c1ca4baf1437888c79bd9460763",
        "author": "cc",
        "time": "7/11/15 9:32 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private freeSpace(bytesToBeAvailable long, location BlockStoreLocation) : EvictionPlan</code> inlined to <code>public freeSpaceWithView(bytesToBeAvailable long, location BlockStoreLocation, view BlockMetadataManagerView) : EvictionPlan</code> in class <code>tachyon.worker.block.evictor.LRUEvictor</code>"
        ]
    },
    {
        "id": 1138932,
        "repository": "https://github.com/QuantumBadger/RedReader.git",
        "sha1": "2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
        "author": "QuantumBadger",
        "time": "7/11/15 11:33 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>public UI_THREAD_HANDLER : Handler</code> from class <code>org.quantumbadger.redreader.common.General</code> to class <code>org.quantumbadger.redreader.common.AndroidApi</code>"
        ]
    },
    {
        "id": 1139721,
        "repository": "https://github.com/liferay/liferay-plugins.git",
        "sha1": "78b54757c0d234db671526aed9b3288a85048e22",
        "author": "Minhchau Dang",
        "time": "7/11/15 5:06 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.liferay.portal.metadata</code> to <code>com.liferay.tika.metadata</code>:<ul><li><code>BaseRawMetadataProcessor</code></li><li><code>TikaRawMetadataProcessor</code></li><li><code>XMPDM</code></li><li><code>XugglerRawMetadataProcessor</code></li></ul>",
            "<b>Move Class</b> <code>MimeTypesImpl</code> moved from <code>com.liferay.portal.util</code> to <code>com.liferay.tika.util</code>"
        ]
    },
    {
        "id": 1139304,
        "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
        "sha1": "3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
        "author": "jyt109",
        "time": "7/11/15 11:47 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public readCaffeModel(is InputStream, sizeLimitMb int) : NetParameter</code> extracted from <code>public readCaffeModel(caffeModelPath String, sizeLimitMb int) : NetParameter</code> in class <code>org.deeplearning4j.translate.CaffeModelToJavaClass</code>"
        ]
    },
    {
        "id": 1139443,
        "repository": "https://github.com/checkstyle/checkstyle.git",
        "sha1": "febbc986cb25ed460ea601c0a68c7d2597f89ee4",
        "author": "Michal Kordas",
        "time": "7/12/15 2:07 AM",
        "refactorings": [
            "<b>Move Class</b> <code>PackageNameInputBad</code> moved from <code>com.google.checkstyle.test.chapter5naming.rule521packageNames</code> to <code>com.google.checkstyle.test.chapter5naming.rule521packageNamesCamelCase</code>"
        ]
    },
    {
        "id": 1138530,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "679d38d4316c16ccba4982d7f3ba13c147a451cb",
        "author": "Serkan OZAL",
        "time": "7/12/15 6:06 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected getFromNearCache(keyData Data, async boolean) : Object</code> extracted from <code>protected getInternal(key K, expiryPolicy ExpiryPolicy, async boolean) : Object</code> in class <code>com.hazelcast.client.cache.impl.AbstractClientCacheProxy</code>"
        ]
    },
    {
        "id": 1139097,
        "repository": "https://github.com/cgeo/cgeo.git",
        "sha1": "7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
        "author": "Bananeweizen",
        "time": "7/12/15 7:01 AM",
        "refactorings": [
            "<b>Move Class</b> <code>TerraCachingConnector</code> moved from <code>cgeo.geocaching.connector</code> to <code>cgeo.geocaching.connector.tc</code>"
        ]
    },
    {
        "id": 1139075,
        "repository": "https://github.com/SimonVT/schematic.git",
        "sha1": "c1a9dd63aca8bf488f9a671aa6281538540397f8",
        "author": "Simon Vig Therkildsen",
        "time": "7/12/15 10:27 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private printNotifyInsert(writer JavaWriter, uri UriContract) : void</code> extracted from <code>public write(filer Filer) : void</code> in class <code>net.simonvt.schematic.compiler.ContentProviderWriter</code>"
        ]
    },
    {
        "id": 1140032,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
        "author": "Mikhaylo Demianenko",
        "time": "7/13/15 8:59 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createCountsTracker() : CountsTracker</code> extracted from <code>public shouldCreateACountStoreWhenDBContainsDenseNodes() : void</code> and 5 others in class <code>org.neo4j.kernel.impl.store.counts.CountsComputerTest</code>",
            "<b>Extract Method</b> <code>private createCountsTracker(pageCache PageCache) : CountsTracker</code> extracted from <code>public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void</code> and 2 others in class <code>org.neo4j.kernel.impl.store.counts.CountsRotationTest</code>"
        ]
    },
    {
        "id": 1140061,
        "repository": "https://github.com/jline/jline2.git",
        "sha1": "80d3ffb5aafa90992385c17e8338c2cc5def3cec",
        "author": "Luke Call",
        "time": "7/13/15 10:30 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public readCharacter(checkForAltKeyCombo boolean) : int</code> extracted from <code>public readCharacter() : int</code> in class <code>jline.console.ConsoleReader</code>",
            "<b>Extract Method</b> <code>public readCharacter(checkForAltKeyCombo boolean, allowed char[]) : int</code> extracted from <code>public readCharacter(allowed char[]) : int</code> in class <code>jline.console.ConsoleReader</code>"
        ]
    },
    {
        "id": 1140320,
        "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
        "sha1": "9687048f76519fc89b4151cbe2841bbba61a401d",
        "author": "Jerry Ocanas",
        "time": "7/13/15 11:12 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected getEntityForm(info DynamicEntityFormInfo, dynamicFormOverride EntityForm) : EntityForm</code> extracted from <code>protected getBlankDynamicFieldTemplateForm(info DynamicEntityFormInfo, dynamicFormOverride EntityForm) : EntityForm</code> in class <code>org.broadleafcommerce.openadmin.web.controller.AdminAbstractController</code>"
        ]
    },
    {
        "id": 1140131,
        "repository": "https://github.com/Netflix/feign.git",
        "sha1": "b2b4085348de32f10903970dded99fdf0376a43c",
        "author": "Adrian Cole",
        "time": "7/13/15 1:49 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private headersFromAnnotation(targetType Class&lt;?&gt;, data MethodMetadata) : void</code> extracted from <code>public parseAndValidatateMetadata(method Method) : MethodMetadata</code> in class <code>feign.Contract.Default</code>",
            "<b>Extract Method</b> <code>protected parseAndValidateMetadata(targetType Class&lt;?&gt;, method Method) : MethodMetadata</code> extracted from <code>public parseAndValidatateMetadata(method Method) : MethodMetadata</code> in class <code>feign.Contract.BaseContract</code>",
            "<b>Extract Method</b> <code>public configKey(targetType Class, method Method) : String</code> extracted from <code>public configKey(method Method) : String</code> in class <code>feign.Feign</code>"
        ]
    },
    {
        "id": 1140316,
        "repository": "https://github.com/aws/aws-sdk-java.git",
        "sha1": "14593c6379445f260baeb5287f618758da6d9952",
        "author": "David Murray",
        "time": "7/13/15 3:02 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.amazonaws.service.codecommit</code> to <code>com.amazonaws.services.codecommit</code>:<ul><li><code>AWSCodeCommit</code></li><li><code>AWSCodeCommitAsync</code></li><li><code>AWSCodeCommitAsyncClient</code></li><li><code>AWSCodeCommitClient</code></li></ul>",
            "<b>Move Classes</b> from <code>com.amazonaws.service.codecommit.model</code> to <code>com.amazonaws.services.codecommit.model</code>:<ul><li><code>BatchGetRepositoriesRequest</code></li><li><code>BatchGetRepositoriesResult</code></li><li><code>BranchDoesNotExistException</code></li><li><code>BranchInfo</code></li><li><code>BranchNameExistsException</code></li><li><code>BranchNameRequiredException</code></li><li><code>CommitDoesNotExistException</code></li><li><code>CommitIdRequiredException</code></li><li><code>CreateBranchRequest</code></li><li><code>CreateRepositoryRequest</code></li><li><code>CreateRepositoryResult</code></li><li><code>DeleteRepositoryRequest</code></li><li><code>DeleteRepositoryResult</code></li><li><code>EncryptionIntegrityChecksFailedException</code></li><li><code>EncryptionKeyAccessDeniedException</code></li><li><code>EncryptionKeyDisabledException</code></li><li><code>EncryptionKeyNotFoundException</code></li><li><code>EncryptionKeyUnavailableException</code></li><li><code>GetBranchRequest</code></li><li><code>GetBranchResult</code></li><li><code>GetRepositoryRequest</code></li><li><code>GetRepositoryResult</code></li><li><code>InvalidBranchNameException</code></li><li><code>InvalidCommitIdException</code></li><li><code>InvalidContinuationTokenException</code></li><li><code>InvalidOrderException</code></li><li><code>InvalidRepositoryDescriptionException</code></li><li><code>InvalidRepositoryNameException</code></li><li><code>InvalidSortByException</code></li><li><code>ListBranchesRequest</code></li><li><code>ListBranchesResult</code></li><li><code>ListRepositoriesRequest</code></li><li><code>ListRepositoriesResult</code></li><li><code>MaximumRepositoryNamesExceededException</code></li><li><code>RepositoryDoesNotExistException</code></li><li><code>RepositoryLimitExceededException</code></li><li><code>RepositoryMetadata</code></li><li><code>RepositoryNameExistsException</code></li><li><code>RepositoryNameIdPair</code></li><li><code>RepositoryNameRequiredException</code></li><li><code>RepositoryNamesRequiredException</code></li><li><code>UpdateDefaultBranchRequest</code></li><li><code>UpdateRepositoryDescriptionRequest</code></li><li><code>UpdateRepositoryNameRequest</code></li></ul>",
            "<b>Move Classes</b> from <code>com.amazonaws.service.codecommit.model.transform</code> to <code>com.amazonaws.services.codecommit.model.transform</code>:<ul><li><code>BatchGetRepositoriesRequestMarshaller</code></li><li><code>BatchGetRepositoriesResultJsonUnmarshaller</code></li><li><code>BranchInfoJsonMarshaller</code></li><li><code>BranchInfoJsonUnmarshaller</code></li><li><code>CreateBranchRequestMarshaller</code></li><li><code>CreateRepositoryRequestMarshaller</code></li><li><code>CreateRepositoryResultJsonUnmarshaller</code></li><li><code>DeleteRepositoryRequestMarshaller</code></li><li><code>DeleteRepositoryResultJsonUnmarshaller</code></li><li><code>GetBranchRequestMarshaller</code></li><li><code>GetBranchResultJsonUnmarshaller</code></li><li><code>GetRepositoryRequestMarshaller</code></li><li><code>GetRepositoryResultJsonUnmarshaller</code></li><li><code>ListBranchesRequestMarshaller</code></li><li><code>ListBranchesResultJsonUnmarshaller</code></li><li><code>ListRepositoriesRequestMarshaller</code></li><li><code>ListRepositoriesResultJsonUnmarshaller</code></li><li><code>RepositoryMetadataJsonMarshaller</code></li><li><code>RepositoryMetadataJsonUnmarshaller</code></li><li><code>RepositoryNameIdPairJsonMarshaller</code></li><li><code>RepositoryNameIdPairJsonUnmarshaller</code></li><li><code>UpdateDefaultBranchRequestMarshaller</code></li><li><code>UpdateRepositoryDescriptionRequestMarshaller</code></li><li><code>UpdateRepositoryNameRequestMarshaller</code></li></ul>"
        ]
    },
    {
        "id": 1139781,
        "repository": "https://github.com/structr/structr.git",
        "sha1": "15afd616cba5fb3d432d11a6de0d4f7805b202db",
        "author": "Christian Morgner",
        "time": "7/13/15 4:05 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package handleObject(nodeFactory NodeFactory, relFactory RelationshipFactory, key String, value Object, includeHiddenAndDeleted boolean, publicOnly boolean, level int) : Object</code> extracted from <code>public execute(query String, parameters Map&lt;String,Object&gt;, includeHiddenAndDeleted boolean, publicOnly boolean) : List&lt;GraphObject&gt;</code> in class <code>org.structr.core.graph.CypherQueryCommand</code>"
        ]
    },
    {
        "id": 1139976,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
        "author": "sancar",
        "time": "7/13/15 8:28 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected createAddress(host String, port int) : Address</code> extracted from <code>private createAddresses(count int) : Address[]</code> in class <code>com.hazelcast.test.TestHazelcastInstanceFactory</code>",
            "<b>Extract Method</b> <code>protected initializeSelectors(client HazelcastClientInstanceImpl) : void</code> extracted from <code>public ClientConnectionManagerImpl(client HazelcastClientInstanceImpl, addressTranslator AddressTranslator)</code> in class <code>com.hazelcast.client.connection.nio.ClientConnectionManagerImpl</code>",
            "<b>Extract Method</b> <code>protected shutdownSelectors() : void</code> extracted from <code>public shutdown() : void</code> in class <code>com.hazelcast.client.connection.nio.ClientConnectionManagerImpl</code>",
            "<b>Extract Method</b> <code>protected startSelectors() : void</code> extracted from <code>public start() : void</code> in class <code>com.hazelcast.client.connection.nio.ClientConnectionManagerImpl</code>"
        ]
    },
    {
        "id": 1140269,
        "repository": "https://github.com/geometer/FBReaderJ.git",
        "sha1": "42e0649f82779ecd48bff6448924fc7dc2534554",
        "author": "Nikolay Pultsin",
        "time": "7/13/15 11:13 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private allTopLevelNodes() : List&lt;MenuNode&gt;</code> extracted from <code>public topLevelNodes() : List&lt;MenuNode&gt;</code> in class <code>org.geometerplus.android.fbreader.MenuData</code>"
        ]
    },
    {
        "id": 1139995,
        "repository": "https://github.com/spring-projects/spring-security.git",
        "sha1": "64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
        "author": "Rob Winch",
        "time": "7/14/15 12:45 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap&lt;MessageMatcher&lt;?&gt;,String&gt;, handler SecurityExpressionHandler&lt;Message&lt;Object&gt;&gt;) : MessageSecurityMetadataSource</code> extracted from <code>public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap&lt;MessageMatcher&lt;?&gt;,String&gt;) : MessageSecurityMetadataSource</code> in class <code>org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory</code>"
        ]
    },
    {
        "id": 1140071,
        "repository": "https://github.com/plutext/docx4j.git",
        "sha1": "e29924b33ec0c0298ba4fc3f7a8c218c8e6cfa0c",
        "author": "Jason Harrop",
        "time": "7/14/15 12:58 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public save(outFile File, flags int, password String) : void</code> extracted from <code>public save(outFile File, flags int) : void</code> and <code>public save(outStream OutputStream, flags int) : void</code> in class <code>org.docx4j.openpackaging.packages.OpcPackage</code>",
            "<b>Extract Method</b> <code>public save(outStream OutputStream, flags int, password String) : void</code> extracted from <code>public save(outStream OutputStream, flags int) : void</code> in class <code>org.docx4j.openpackaging.packages.OpcPackage</code>",
            "<b>Move Classes</b> from <code>org.apache.poi</code> to <code>org.docx4j.org.apache.poi</code>:<ul><li><code>EmptyFileException</code></li><li><code>EncryptedDocumentException</code></li><li><code>OldFileFormatException</code></li><li><code>UnsupportedFileFormatException</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.hpsf</code> to <code>org.docx4j.org.apache.poi.hpsf</code>:<ul><li><code>Array</code></li><li><code>Blob</code></li><li><code>ClassID</code></li><li><code>ClipboardData</code></li><li><code>CodePageString</code></li><li><code>Currency</code></li><li><code>CustomProperties</code></li><li><code>CustomProperty</code></li><li><code>Date</code></li><li><code>Decimal</code></li><li><code>DocumentSummaryInformation</code></li><li><code>Filetime</code></li><li><code>GUID</code></li><li><code>HPSFException</code></li><li><code>HPSFRuntimeException</code></li><li><code>IllegalPropertySetDataException</code></li><li><code>IndirectPropertyName</code></li><li><code>MarkUnsupportedException</code></li><li><code>MissingSectionException</code></li><li><code>MutableProperty</code></li><li><code>MutablePropertySet</code></li><li><code>MutableSection</code></li><li><code>NoFormatIDException</code></li><li><code>NoPropertySetStreamException</code></li><li><code>NoSingleSectionException</code></li><li><code>Property</code></li><li><code>PropertySet</code></li><li><code>PropertySetFactory</code></li><li><code>ReadingNotSupportedException</code></li><li><code>Section</code></li><li><code>SpecialPropertySet</code></li><li><code>SummaryInformation</code></li><li><code>TypeWriter</code></li><li><code>TypedPropertyValue</code></li><li><code>UnexpectedPropertySetTypeException</code></li><li><code>UnicodeString</code></li><li><code>UnsupportedVariantTypeException</code></li><li><code>Util</code></li><li><code>Variant</code></li><li><code>VariantBool</code></li><li><code>VariantSupport</code></li><li><code>VariantTypeException</code></li><li><code>Vector</code></li><li><code>VersionedStream</code></li><li><code>WritingNotSupportedException</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.hpsf.wellknown</code> to <code>org.docx4j.org.apache.poi.hpsf.wellknown</code>:<ul><li><code>PropertyIDMap</code></li><li><code>SectionIDMap</code></li></ul>",
            "<b>Move Class</b> <code>OldExcelFormatException</code> moved from <code>org.apache.poi.hssf</code> to <code>org.docx4j.org.apache.poi.hssf</code>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.common</code> to <code>org.docx4j.org.apache.poi.poifs.common</code>:<ul><li><code>POIFSBigBlockSize</code></li><li><code>POIFSConstants</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.crypt</code> to <code>org.docx4j.org.apache.poi.poifs.crypt</code>:<ul><li><code>ChunkedCipherInputStream</code></li><li><code>ChunkedCipherOutputStream</code></li><li><code>CryptoFunctions</code></li><li><code>DataSpaceMapUtils</code></li><li><code>Decryptor</code></li><li><code>EncryptionHeader</code></li><li><code>EncryptionInfo</code></li><li><code>EncryptionInfoBuilder</code></li><li><code>EncryptionVerifier</code></li><li><code>Encryptor</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.crypt.agile</code> to <code>org.docx4j.org.apache.poi.poifs.crypt.agile</code>:<ul><li><code>AgileDecryptor</code></li><li><code>AgileEncryptionHeader</code></li><li><code>AgileEncryptionVerifier</code></li><li><code>AgileEncryptor</code></li><li><code>EncryptionDocument</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.crypt.binaryrc4</code> to <code>org.docx4j.org.apache.poi.poifs.crypt.binaryrc4</code>:<ul><li><code>BinaryRC4Decryptor</code></li><li><code>BinaryRC4EncryptionHeader</code></li><li><code>BinaryRC4EncryptionInfoBuilder</code></li><li><code>BinaryRC4EncryptionVerifier</code></li><li><code>BinaryRC4Encryptor</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.crypt.cryptoapi</code> to <code>org.docx4j.org.apache.poi.poifs.crypt.cryptoapi</code>:<ul><li><code>CryptoAPIDecryptor</code></li><li><code>CryptoAPIEncryptionHeader</code></li><li><code>CryptoAPIEncryptionInfoBuilder</code></li><li><code>CryptoAPIEncryptionVerifier</code></li><li><code>CryptoAPIEncryptor</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.crypt.standard</code> to <code>org.docx4j.org.apache.poi.poifs.crypt.standard</code>:<ul><li><code>EncryptionRecord</code></li><li><code>StandardDecryptor</code></li><li><code>StandardEncryptionHeader</code></li><li><code>StandardEncryptionInfoBuilder</code></li><li><code>StandardEncryptionVerifier</code></li><li><code>StandardEncryptor</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.dev</code> to <code>org.docx4j.org.apache.poi.poifs.dev</code>:<ul><li><code>POIFSLister</code></li><li><code>POIFSViewEngine</code></li><li><code>POIFSViewable</code></li><li><code>POIFSViewer</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.eventfilesystem</code> to <code>org.docx4j.org.apache.poi.poifs.eventfilesystem</code>:<ul><li><code>POIFSReader</code></li><li><code>POIFSReaderEvent</code></li><li><code>POIFSReaderListener</code></li><li><code>POIFSReaderRegistry</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.filesystem</code> to <code>org.docx4j.org.apache.poi.poifs.filesystem</code>:<ul><li><code>BATManaged</code></li><li><code>BlockStore</code></li><li><code>DirectoryEntry</code></li><li><code>DirectoryNode</code></li><li><code>DocumentDescriptor</code></li><li><code>DocumentEntry</code></li><li><code>DocumentInputStream</code></li><li><code>DocumentNode</code></li><li><code>DocumentOutputStream</code></li><li><code>Entry</code></li><li><code>EntryNode</code></li><li><code>EntryUtils</code></li><li><code>FilteringDirectoryNode</code></li><li><code>NDocumentInputStream</code></li><li><code>NDocumentOutputStream</code></li><li><code>NPOIFSDocument</code></li><li><code>NPOIFSFileSystem</code></li><li><code>NPOIFSMiniStore</code></li><li><code>NPOIFSStream</code></li><li><code>NotOLE2FileException</code></li><li><code>ODocumentInputStream</code></li><li><code>OPOIFSDocument</code></li><li><code>OPOIFSFileSystem</code></li><li><code>OfficeXmlFileException</code></li><li><code>Ole10Native</code></li><li><code>Ole10NativeException</code></li><li><code>POIFSDocumentPath</code></li><li><code>POIFSFileSystem</code></li><li><code>POIFSWriterEvent</code></li><li><code>POIFSWriterListener</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.nio</code> to <code>org.docx4j.org.apache.poi.poifs.nio</code>:<ul><li><code>ByteArrayBackedDataSource</code></li><li><code>DataSource</code></li><li><code>FileBackedDataSource</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.property</code> to <code>org.docx4j.org.apache.poi.poifs.property</code>:<ul><li><code>Child</code></li><li><code>DirectoryProperty</code></li><li><code>DocumentProperty</code></li><li><code>NPropertyTable</code></li><li><code>Parent</code></li><li><code>Property</code></li><li><code>PropertyConstants</code></li><li><code>PropertyFactory</code></li><li><code>PropertyTable</code></li><li><code>PropertyTableBase</code></li><li><code>RootProperty</code></li></ul>",
            "<b>Move Classes</b> from <code>org.apache.poi.poifs.storage</code> to <code>org.docx4j.org.apache.poi.poifs.storage</code>:<ul><li><code>BigBlock</code></li><li><code>BlockAllocationTableReader</code></li><li><code>BlockAllocationTableWriter</code></li><li><code>BlockList</code></li><li><code>BlockListImpl</code></li><li><code>BlockWritable</code></li><li><code>DataInputBlock</code></li><li><code>DocumentBlock</code></li><li><code>HeaderBlock</code></li><li><code>HeaderBlockConstants</code></li><li><code>HeaderBlockWriter</code></li><li><code>ListManagedBlock</code></li><li><code>PropertyBlock</code></li><li><code>RawDataBlock</code></li><li><code>RawDataBlockList</code></li><li><code>SmallBlockTableWriter</code></li><li><code>SmallDocumentBlockList</code></li></ul>",
            "<b>Move Class</b> <code>BATBlockAndIndex</code> moved from <code>org.apache.poi.poifs.storage.BATBlock</code> to <code>org.docx4j.org.apache.poi.poifs.storage.BATBlock</code>",
            "<b>Move Classes</b> from <code>org.apache.poi.util</code> to <code>org.docx4j.org.apache.poi.util</code>:<ul><li><code>BitField</code></li><li><code>BitFieldFactory</code></li><li><code>BoundedInputStream</code></li><li><code>ByteField</code></li><li><code>CloseIgnoringInputStream</code></li><li><code>CodePageUtil</code></li><li><code>DelayableLittleEndianOutput</code></li><li><code>DocumentHelper</code></li><li><code>FixedField</code></li><li><code>HexDump</code></li><li><code>HexRead</code></li><li><code>IOUtils</code></li><li><code>IntList</code></li><li><code>IntegerField</code></li><li><code>LittleEndian</code></li><li><code>LittleEndianByteArrayOutputStream</code></li><li><code>LittleEndianConsts</code></li><li><code>LittleEndianInput</code></li><li><code>LittleEndianInputStream</code></li><li><code>LittleEndianOutput</code></li><li><code>LittleEndianOutputStream</code></li><li><code>LongField</code></li><li><code>PngUtils</code></li><li><code>RecordFormatException</code></li><li><code>SAXHelper</code></li><li><code>ShortField</code></li><li><code>StringUtil</code></li><li><code>TempFile</code></li><li><code>TempFileCreationStrategy</code></li></ul>"
        ]
    },
    {
        "id": 1140621,
        "repository": "https://github.com/springfox/springfox.git",
        "sha1": "2307ff3a4ca367aaf64088b7b1e1bbf212c9bf3a",
        "author": "Dilip Krishnan",
        "time": "7/14/15 1:47 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>springfox.documentation.spring.web</code> to <code>springfox.documentation.spring.web.paths</code>:<ul><li><code>AbstractPathProvider</code></li><li><code>Paths</code></li><li><code>RelativePathProvider</code></li></ul>"
        ]
    },
    {
        "id": 1140686,
        "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
        "sha1": "1b21ba4bcea986988d4bbd578e3bb9a20ec69606",
        "author": "Tony Rankin",
        "time": "7/14/15 2:27 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private privacyStringForValue(value int) : String</code> extracted from <code>public onPreferenceChange(preference Preference, newValue Object) : boolean</code> in class <code>org.wordpress.android.ui.prefs.SiteSettingsFragment</code>"
        ]
    },
    {
        "id": 1140028,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "a26b61201cd86c9a8773b418d9c84b446e95a601",
        "author": "Mattias Persson",
        "time": "7/14/15 5:14 AM",
        "refactorings": [
            "<b>Move Method</b> <code>public arrayAsCollection(arrayValue Object) : Collection&lt;Object&gt;</code> from class <code>org.neo4j.kernel.impl.util.IoPrimitiveUtils</code> to class <code>org.neo4j.graphdb.Neo4jMatchers</code>"
        ]
    },
    {
        "id": 1140505,
        "repository": "https://github.com/robovm/robovm.git",
        "sha1": "7837d0baf1aef45340eec699516a8c3a22aeb553",
        "author": "Alex Itelman",
        "time": "7/14/15 5:28 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private signFrameworks(appDir File, getTaskAllow boolean) : void</code> extracted from <code>protected prepareLaunch(appDir File) : void</code> in class <code>org.robovm.compiler.target.ios.IOSTarget</code>"
        ]
    },
    {
        "id": 1139897,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "af618666043f21b3db7e6a1be2aa225ae0f432b4",
        "author": "peter",
        "time": "7/14/15 6:34 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private isNavigationBlocked(renderer GutterIconRenderer, project Project) : boolean</code> extracted from <code>public mouseReleased(e MouseEvent) : void</code> in class <code>com.intellij.openapi.editor.impl.EditorGutterComponentImpl</code>"
        ]
    },
    {
        "id": 1140435,
        "repository": "https://github.com/droolsjbpm/drools.git",
        "sha1": "7ffc62aa554f5884064b81ee80078e35e3833006",
        "author": "Maciej Swiderski",
        "time": "7/14/15 6:51 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected addInterceptor(interceptor Interceptor, store boolean) : void</code> extracted from <code>public addInterceptor(interceptor Interceptor) : void</code> in class <code>org.drools.persistence.SingleSessionCommandService</code>"
        ]
    },
    {
        "id": 1140275,
        "repository": "https://github.com/Activiti/Activiti.git",
        "sha1": "a70ca1d9ad2ea07b19c5e1f9540c809d7a12d3fb",
        "author": "Joram Barrez",
        "time": "7/14/15 8:27 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected flushPersistentObjects(persistentObjectClass Class&lt;? extends PersistentObject&gt;, persistentObjectsToInsert List&lt;PersistentObject&gt;) : void</code> extracted from <code>protected flushInserts() : void</code> in class <code>org.activiti.engine.impl.db.DbSqlSession</code>"
        ]
    },
    {
        "id": 1139791,
        "repository": "https://github.com/spring-projects/spring-boot.git",
        "sha1": "84937551787072a4befac29fb48436b3187ac4c6",
        "author": "Andy Wilkinson",
        "time": "7/14/15 8:30 AM",
        "refactorings": [
            "<b>Move Class</b> <code>SpringBootSecDispatcher</code> moved from <code>org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration</code> to <code>org.springframework.boot.cli.compiler.MavenSettingsReader</code>"
        ]
    },
    {
        "id": 1140273,
        "repository": "https://github.com/Activiti/Activiti.git",
        "sha1": "ca7d0c3b33a0863bed04c77932b9ef6b1317f34e",
        "author": "Joram Barrez",
        "time": "7/14/15 8:59 AM",
        "refactorings": [
            "<b>Move Class</b> <code>UserEntityTest</code> moved from <code>org.activiti.engine.impl.persistence.entity</code> to <code>org.activiti.engine.test.api.identity</code>"
        ]
    },
    {
        "id": 1141018,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "106d1d51754f454fa673976665e41f463316e084",
        "author": "Roman Shevchenko",
        "time": "7/14/15 10:55 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private dummy(builder PsiBuilder) : void</code> extracted from <code>public parseTypeParameter(builder PsiBuilder) : Marker</code> in class <code>com.intellij.lang.java.parser.ReferenceParser</code>"
        ]
    },
    {
        "id": 1141343,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "8184a32a019b2ed956e8f24c18cb49a266af47bf",
        "author": "Shenwei Liu",
        "time": "7/14/15 12:10 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private generateSingleCopyFilesBuildPhase(target PBXNativeTarget, destinationSpec CopyFilePhaseDestinationSpec, targetNodes Iterable&lt;TargetNode&lt;?&gt;&gt;) : void</code> extracted from <code>private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable&lt;TargetNode&lt;?&gt;&gt;) : void</code> in class <code>com.facebook.buck.apple.ProjectGenerator</code>"
        ]
    },
    {
        "id": 1141428,
        "repository": "https://github.com/linkedin/rest.li.git",
        "sha1": "ec5ea36faa3dd74585bb339beabdba6149ed63be",
        "author": "Erluo Li",
        "time": "7/14/15 1:26 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private buildErrorResponse(result RestLiServiceException, errorResponseFormat ErrorResponseFormat) : ErrorResponse</code> extracted from <code>public buildErrorResponse(result RestLiServiceException) : ErrorResponse</code> in class <code>com.linkedin.restli.internal.server.methods.response.ErrorResponseBuilder</code>"
        ]
    },
    {
        "id": 1142126,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "999e0e3616525d77cf46c5865f9981b5a6b5609a",
        "author": "Jesus Camacho Rodriguez",
        "time": "7/14/15 3:18 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private hepPlan(basePlan RelNode, followPlanChanges boolean, mdProvider RelMetadataProvider, order HepMatchOrder, rules RelOptRule[]) : RelNode</code> extracted from <code>private hepPlan(basePlan RelNode, followPlanChanges boolean, mdProvider RelMetadataProvider, rules RelOptRule[]) : RelNode</code> in class <code>org.apache.hadoop.hive.ql.parse.CalcitePlanner.CalcitePlannerAction</code>"
        ]
    },
    {
        "id": 1142116,
        "repository": "https://github.com/infinispan/infinispan.git",
        "sha1": "8f446b6ddf540e1b1fefca34dd10f45ba7256095",
        "author": "Tristan Tarrant",
        "time": "7/14/15 4:06 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.jboss.as.clustering.concurrent</code> to <code>org.infinispan.server.commons.concurrent</code>:<ul><li><code>ManagedExecutorService</code></li><li><code>ManagedScheduledExecutorService</code></li></ul>",
            "<b>Move Class</b> <code>ServiceContainerHelper</code> moved from <code>org.jboss.as.clustering.jgroups</code> to <code>org.infinispan.server.commons.msc</code>",
            "<b>Move Classes</b> from <code>org.jboss.as.clustering.jgroups</code> to <code>org.infinispan.server.jgroups</code>:<ul><li><code>ChannelFactory</code></li><li><code>LogFactory</code></li><li><code>ManagedSocketFactory</code></li><li><code>ManagedSocketFactoryTest</code></li><li><code>ProtocolDefaults</code></li><li><code>TopologyAddressGenerator</code></li></ul>",
            "<b>Move Classes</b> from <code>org.jboss.as.clustering.jgroups</code> to <code>org.infinispan.server.jgroups.security</code>:<ul><li><code>RealmAuthorizationCallbackHandler</code></li><li><code>SaslClientCallbackHandler</code></li></ul>",
            "<b>Move Classes</b> from <code>org.jboss.as.clustering.jgroups</code> to <code>org.infinispan.server.jgroups.spi</code>:<ul><li><code>ProtocolConfiguration</code></li><li><code>ProtocolStackConfiguration</code></li><li><code>RelayConfiguration</code></li><li><code>RemoteSiteConfiguration</code></li><li><code>SaslConfiguration</code></li><li><code>TransportConfiguration</code></li></ul>",
            "<b>Move Class</b> <code>ClusteringSubsystemTest</code> moved from <code>org.jboss.as.clustering.jgroups.subsystem</code> to <code>org.infinispan.server.commons.subsystem</code>",
            "<b>Move Classes</b> from <code>org.jboss.as.clustering.jgroups.subsystem</code> to <code>org.infinispan.server.jgroups.subsystem</code>:<ul><li><code>ExportNativeConfiguration</code></li><li><code>JGroupsExtension</code></li><li><code>ModelKeys</code></li><li><code>OperationSequencesTestCase</code></li><li><code>RelayResourceDefinition</code></li><li><code>SaslResourceDefinition</code></li></ul>"
        ]
    },
    {
        "id": 1140982,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "9f7de200c9aef900596b09327a52d33241a68d9c",
        "author": "Roman Shevchenko",
        "time": "7/14/15 4:07 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private dummy(builder PsiBuilder) : void</code> extracted from <code>public parseTypeParameter(builder PsiBuilder) : Marker</code> in class <code>com.intellij.lang.java.parser.ReferenceParser</code>"
        ]
    },
    {
        "id": 1140981,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
        "author": "Anton Makeev",
        "time": "7/14/15 4:10 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean, resolveSymlinksIfNecessary boolean) : String</code> extracted from <code>private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean) : String</code> in class <code>com.intellij.openapi.util.io.FileUtil</code>"
        ]
    },
    {
        "id": 1141078,
        "repository": "https://github.com/spring-projects/spring-security.git",
        "sha1": "08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
        "author": "Rob Winch",
        "time": "7/14/15 4:48 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper</code> to <code>org.springframework.security.web.context.OnCommittedResponseWrapper</code>:<ul><li><code>SaveContextPrintWriter</code></li><li><code>SaveContextServletOutputStream</code></li></ul>"
        ]
    },
    {
        "id": 1141077,
        "repository": "https://github.com/spring-projects/spring-security.git",
        "sha1": "fcc9a34356817d93c24b5ccf3107ec234a28b136",
        "author": "Rob Winch",
        "time": "7/14/15 4:49 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper</code> to <code>org.springframework.security.web.context.OnCommittedResponseWrapper</code>:<ul><li><code>SaveContextPrintWriter</code></li><li><code>SaveContextServletOutputStream</code></li></ul>"
        ]
    },
    {
        "id": 1141203,
        "repository": "https://github.com/zeromq/jeromq.git",
        "sha1": "02d3fa171d02c9d82c7bdcaeb739f47d0c0006a0",
        "author": "Min(Dongmin Yu)",
        "time": "7/14/15 4:59 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private makeFdPair() : void</code> inlined to <code>public Signaler()</code> in class <code>zmq.Signaler</code>"
        ]
    },
    {
        "id": 1141310,
        "repository": "https://github.com/antlr/antlr4.git",
        "sha1": "b395127e733b33c27f344695ebf155ecf5edeeab",
        "author": "Terence Parr",
        "time": "7/14/15 6:29 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.antlr.v4.runtime.misc</code> to <code>org.antlr.v4.gui</code>:<ul><li><code>GraphicsSupport</code></li><li><code>JFileChooserConfirmOverwrite</code></li><li><code>TestRig</code></li></ul>",
            "<b>Move Classes</b> from <code>org.antlr.v4.runtime.tree.gui</code> to <code>org.antlr.v4.gui</code>:<ul><li><code>BasicFontMetrics</code></li><li><code>PostScriptDocument</code></li><li><code>SystemFontMetrics</code></li><li><code>TreeLayoutAdaptor</code></li><li><code>TreePostScriptGenerator</code></li><li><code>TreeTextProvider</code></li><li><code>TreeViewer</code></li></ul>"
        ]
    },
    {
        "id": 1141296,
        "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
        "sha1": "3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
        "author": "Chris Newland",
        "time": "7/14/15 7:33 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private visitTagEliminateAllocation(tag Tag, parseDictionary IParseDictionary) : void</code> extracted from <code>public visitTag(tag Tag, parseDictionary IParseDictionary) : void</code> in class <code>org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder</code>",
            "<b>Extract Method</b> <code>private visitTagParse(tag Tag, parseDictionary IParseDictionary) : void</code> extracted from <code>public visitTag(tag Tag, parseDictionary IParseDictionary) : void</code> in class <code>org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder</code>"
        ]
    },
    {
        "id": 1141149,
        "repository": "https://github.com/facebook/presto.git",
        "sha1": "cb2deceea993128c22710b0f64f1b755c9d176f7",
        "author": "yuananf",
        "time": "7/14/15 8:33 PM",
        "refactorings": [
            "<b>Move Method</b> <code>private flipComparison(type Type) : Type</code> from class <code>com.facebook.presto.sql.planner.RelationPlanner</code> to class <code>com.facebook.presto.sql.ExpressionUtils</code>"
        ]
    },
    {
        "id": 1141324,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
        "author": "Shenwei Liu",
        "time": "7/14/15 9:46 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createSymLinkSdks(sdks Iterable&lt;String&gt;, root Path, version String) : void</code> extracted from <code>private createSymLinkIosSdks(root Path, version String) : void</code> in class <code>com.facebook.buck.apple.AppleSdkDiscoveryTest</code>"
        ]
    },
    {
        "id": 1141707,
        "repository": "https://github.com/vaadin/vaadin.git",
        "sha1": "0f9d0b0bf1cd5fb58f47f22bd6d52a9fac31c530",
        "author": "Johannes Dahlström",
        "time": "7/15/15 5:41 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getVisibleFrozenColumnCount() : int</code> extracted from <code>private updateFrozenColumns() : void</code> in class <code>com.vaadin.client.widgets.Grid</code>",
            "<b>Extract Method</b> <code>protected createGrid(container PersonContainer) : Grid</code> extracted from <code>protected setup(request VaadinRequest) : void</code> in class <code>com.vaadin.tests.components.grid.GridEditorUI</code>"
        ]
    },
    {
        "id": 1140956,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
        "author": "nik",
        "time": "7/15/15 8:49 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public addJarsToRoots(jarPaths List&lt;String&gt;, libraryName String, module Module, location PsiElement) : void</code> extracted from <code>public addJarToRoots(libPath String, module Module, location PsiElement) : void</code> in class <code>com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix</code>"
        ]
    },
    {
        "id": 1141185,
        "repository": "https://github.com/plutext/docx4j.git",
        "sha1": "1ba361438ab4d7f6a0305428ba40ba62e2e6ff3c",
        "author": "Jason Harrop",
        "time": "7/15/15 8:55 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.docx4j.schemas.microsoft.com.office.word_2006.wordml</code> to <code>org.docx4j.com.microsoft.schemas.office.word.x2006.wordml</code>:<ul><li><code>CTDocEvents</code></li><li><code>CTMcd</code></li><li><code>CTMcds</code></li><li><code>CTVbaSuppData</code></li><li><code>ObjectFactory</code></li></ul>"
        ]
    },
    {
        "id": 1140931,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "10f769a60c7c7b73982e978959d381df487bbe2d",
        "author": "nik",
        "time": "7/15/15 11:13 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getLibraryPaths() : List&lt;String&gt;</code> extracted from <code>public getLibraryPath() : String</code> in class <code>com.intellij.execution.junit.JUnit4Framework</code>",
            "<b>Move Method</b> <code>private getJUnit4JarPaths() : List&lt;String&gt;</code> from class <code>com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix</code> to class <code>com.intellij.openapi.projectRoots.ex.JavaSdkUtil</code>"
        ]
    },
    {
        "id": 1140896,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "619a6012da868d0d42d9628460f2264effe9bdba",
        "author": "peter",
        "time": "7/15/15 2:24 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private fillWithScopeExpansion(elements Set&lt;Object&gt;, pattern String) : boolean</code> extracted from <code>public computeInReadAction(indicator ProgressIndicator) : void</code> in class <code>com.intellij.ide.util.gotoByName.ChooseByNameBase.CalcElementsThread</code>"
        ]
    },
    {
        "id": 1142385,
        "repository": "https://github.com/processing/processing.git",
        "sha1": "d403a0b2322a74dde824094d67b7997c1c371883",
        "author": "Akarshit Wal",
        "time": "7/15/15 2:57 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>processing.app.contrib</code> to <code>processing.app.contrib.UpdateContributionTab</code>:<ul><li><code>UpdateContribListingPanel</code></li><li><code>UpdateStatusPanel</code></li></ul>"
        ]
    },
    {
        "id": 1142230,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "e1f0dbc2f09541fc64ce88ee22d8f8f4648004fe",
        "author": "Nikolay Mikhaylov",
        "time": "7/15/15 4:10 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public resolveAndDownloadImpl(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List&lt;MavenRepositoryInfo&gt;) : List&lt;OrderRoot&gt;</code> extracted from <code>public resolveAndDownload(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List&lt;MavenRepositoryInfo&gt;) : NewLibraryConfiguration</code> in class <code>org.jetbrains.idea.maven.utils.library.RepositoryAttachHandler</code>"
        ]
    },
    {
        "id": 1142783,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "240097b78b70172e1cf9bc37876a566ddfb9e115",
        "author": "Owen O'Malley",
        "time": "7/15/15 6:41 PM",
        "refactorings": [
            "<b>Move Method</b> <code>public getAcidEventFields() : List&lt;String&gt;</code> from class <code>org.apache.hadoop.hive.ql.io.orc.OrcRecordUpdater</code> to class <code>org.apache.hadoop.hive.ql.io.orc.RecordReaderFactory</code>"
        ]
    },
    {
        "id": 1142382,
        "repository": "https://github.com/jMonkeyEngine/jmonkeyengine.git",
        "sha1": "5989711f7315abe4c3da0f1516a3eb3a81da6716",
        "author": "Nehon",
        "time": "7/15/15 6:55 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected movePanel(xoffset int, yoffset int) : void</code> extracted from <code>public mouseDragged(e MouseEvent) : void</code> in class <code>com.jme3.gde.materialdefinition.editor.DraggablePanel</code>",
            "<b>Extract Method</b> <code>protected saveLocation() : void</code> extracted from <code>public mousePressed(e MouseEvent) : void</code> in class <code>com.jme3.gde.materialdefinition.editor.DraggablePanel</code>"
        ]
    },
    {
        "id": 1142267,
        "repository": "https://github.com/facebook/presto.git",
        "sha1": "8b1f5ce432bd6f579c646705d79ff0c4690495ae",
        "author": "Xin Yao",
        "time": "7/15/15 10:34 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public checkArrayIndex(index long) : void</code> extracted from <code>public readBlockAndCheckIndex(array Slice, index long) : Block</code> in class <code>com.facebook.presto.operator.scalar.ArraySubscriptOperator</code>"
        ]
    },
    {
        "id": 1143042,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "30c4ae09745d6062077925a54f27205b7401d8df",
        "author": "Peter Veentjer",
        "time": "7/16/15 1:56 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>package getConnectionAddress() : Object</code> extracted from <code>public close(t Throwable) : void</code> in class <code>com.hazelcast.nio.tcp.TcpIpConnection</code>",
            "<b>Extract Method</b> <code>private renderClient() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderCluster() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderConnection() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderEvents() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderExecutors() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderGc() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderHeap() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderNativeMemory() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderOperationService() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderPhysicalMemory() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderProcessors() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderProxy() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderSwap() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>",
            "<b>Extract Method</b> <code>private renderThread() : void</code> extracted from <code>public toString() : String</code> in class <code>com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics</code>"
        ]
    },
    {
        "id": 1143365,
        "repository": "https://github.com/jersey/jersey.git",
        "sha1": "d57b1401f874f96a53f1ec1c0f8a6089ae66a4ce",
        "author": "Jakub Podlesak",
        "time": "7/16/15 4:51 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public _testFieldValidatedResourceNoParam(target WebTarget) : void</code> extracted from <code>public testFieldValidatedResourceNoParam() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Method</b> <code>public _testFieldValidatedResourceParamProvided(target WebTarget) : void</code> extracted from <code>public testFieldValidatedResourceParamProvided() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Method</b> <code>public _testOldFashionedResourceNoParam(target WebTarget) : void</code> extracted from <code>public testOldFashionedResourceNoParam() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Method</b> <code>public _testOldFashionedResourceParamProvided(target WebTarget) : void</code> extracted from <code>public testOldFashionedResourceParamProvided() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Method</b> <code>public _testParamValidatedResourceNoParam(target WebTarget) : void</code> extracted from <code>public testParamValidatedResourceNoParam() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Method</b> <code>public _testParamValidatedResourceParamProvided(target WebTarget) : void</code> extracted from <code>public testParamValidatedResourceParamProvided() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Method</b> <code>public _testPropertyValidatedResourceNoParam(target WebTarget) : void</code> extracted from <code>public testPropertyValidatedResourceNoParam() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Method</b> <code>public _testPropertyValidatedResourceParamProvided(target WebTarget) : void</code> extracted from <code>public testPropertyValidatedResourceParamProvided() : void</code> in class <code>org.glassfish.jersey.tests.cdi.bv.BaseValidationTest</code>",
            "<b>Extract Superclass</b> <code>org.glassfish.jersey.ext.cdi1x.internal.GenericHk2LocatorManager</code> from class <code>org.glassfish.jersey.ext.cdi1x.servlet.internal.ServletHk2LocatorManager</code>"
        ]
    },
    {
        "id": 1142429,
        "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
        "sha1": "c50064efb325b0c94cc62788b4c8935b7c39ac40",
        "author": "Alex Black",
        "time": "7/16/15 7:46 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getOptimizer(oa OptimizationAlgorithm, conf NeuralNetConfiguration, m Model) : ConvexOptimizer</code> extracted from <code>public testSphereFnOptHelper(oa OptimizationAlgorithm, numLineSearchIter int, nDimensions int) : void</code> in class <code>org.deeplearning4j.optimize.solver.TestOptimizers</code>"
        ]
    },
    {
        "id": 1142210,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
        "author": "Anton Makeev",
        "time": "7/16/15 8:31 AM",
        "refactorings": [
            "<b>Move Method</b> <code>protected createMainModule(moduleType ModuleType) : Module</code> from class <code>com.intellij.testFramework.LightPlatformTestCase</code> to class <code>com.intellij.testFramework.LightProjectDescriptor</code>"
        ]
    },
    {
        "id": 1143549,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "4fcd7d4d366d001cf5f1f7d926c608c902e3f0af",
        "author": "Sylvain Lebresne",
        "time": "7/16/15 10:21 AM",
        "refactorings": [
            "<b>Move Class</b> <code>ScoreUpdater</code> moved from <code>org.apache.cassandra.locator.DynamicEndpointSnitchTest</code> to <code>org.apache.cassandra.locator.DynamicEndpointSnitchLongTest</code>"
        ]
    },
    {
        "id": 1143739,
        "repository": "https://github.com/opentripplanner/OpenTripPlanner.git",
        "sha1": "334dbc7cf3432e7c17b0ed98801e61b0b591b408",
        "author": "Matthew Wigginton Conway",
        "time": "7/16/15 11:10 AM",
        "refactorings": [
            "<b>Move Class</b> <code>WorkerIdDefiner</code> moved from <code>org.opentripplanner.analyst.cluster.AnalystWorker</code> to <code>org.opentripplanner.analyst.cluster</code>"
        ]
    },
    {
        "id": 1143000,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "97811cf971f7ccf6a5fc5e90a491db2f58d49da1",
        "author": "Eugene Zhuravlev",
        "time": "7/16/15 12:00 PM",
        "refactorings": [
            "<b>Move Class</b> <code>MyLoggerFactory</code> moved from <code>org.jetbrains.jps.cmdline.BuildMain</code> to <code>org.jetbrains.jps.cmdline.LogSetup</code>"
        ]
    },
    {
        "id": 1143828,
        "repository": "https://github.com/Graylog2/graylog2-server.git",
        "sha1": "2d98ae165ea43e9a1ac6a905d6094f077abb2e55",
        "author": "Bernd Ahlers",
        "time": "7/16/15 12:42 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private dispatchMessage(msg Message) : void</code> extracted from <code>public onEvent(event MessageEvent) : void</code> in class <code>org.graylog2.shared.buffers.processors.ProcessBufferProcessor</code>",
            "<b>Extract Method</b> <code>private postProcessMessage(raw RawMessage, codec Codec, inputIdOnCurrentNode String, baseMetricName String, message Message, decodeTime long) : Message</code> extracted from <code>private processMessage(raw RawMessage) : Message</code> in class <code>org.graylog2.shared.buffers.processors.DecodingProcessor</code>"
        ]
    },
    {
        "id": 1142910,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "7527cfc746dc20ddb78002c7b3a65d55026a334e",
        "author": "Stefano Santoro",
        "time": "7/16/15 12:48 PM",
        "refactorings": [
            "<b>Move Class</b> <code>CallbacksRef</code> moved from <code>org.voltdb.importer.ChannelChangeNotifier</code> to <code>org.voltdb.importer.ChannelDistributer</code>"
        ]
    },
    {
        "id": 1144936,
        "repository": "https://github.com/NLPchina/ansj_seg.git",
        "sha1": "913704e835169255530c7408cad11ce9a714d4ec",
        "author": "zhl",
        "time": "7/16/15 2:33 PM",
        "refactorings": [
            "<b>Move Class</b> <code>TempFeature</code> moved from <code>org.ansj.app.crf.pojo</code> to <code>org.ansj.app.crf.CrfppModelParser</code>"
        ]
    },
    {
        "id": 1143330,
        "repository": "https://github.com/cgeo/cgeo.git",
        "sha1": "c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
        "author": "Mathieu Alorent",
        "time": "7/16/15 2:47 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getWaymarkingConnector() : IConnector</code> extracted from <code>public testCanHandle() : void</code> and <code>public testGetGeocodeFromUrl() : void</code> in class <code>cgeo.geocaching.connector.WaymarkingConnectorTest</code>"
        ]
    },
    {
        "id": 1143604,
        "repository": "https://github.com/netty/netty.git",
        "sha1": "9f422ed0f44516bea8116ed7730203e4eb316252",
        "author": "Scott Mitchell",
        "time": "7/16/15 6:41 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private initConnectionAndController() : void</code> extracted from <code>public setup() : void</code> in class <code>io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest</code>",
            "<b>Extract Method</b> <code>private resetCtx() : void</code> extracted from <code>public windowUpdateAndFlushShouldTriggerWrite() : void</code> in class <code>io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest</code>",
            "<b>Move Attribute</b> <code>private ctx : ChannelHandlerContext</code> from class <code>io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledBase</code> to class <code>io.netty.microbench.http2.NoopHttp2RemoteFlowController</code>"
        ]
    },
    {
        "id": 1143208,
        "repository": "https://github.com/loopj/android-async-http.git",
        "sha1": "af7e9e4bcd90504d6a665dbb21635eb1733fe025",
        "author": "Marek Sebera",
        "time": "7/16/15 7:18 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private TAG : WeakReference&lt;Object&gt;</code> from class <code>com.loopj.android.http.RequestHandle</code> to class <code>com.loopj.android.http.AsyncHttpResponseHandler</code>"
        ]
    },
    {
        "id": 1143786,
        "repository": "https://github.com/liferay/liferay-plugins.git",
        "sha1": "d99695841fa675ea9150602b1132f037093e867d",
        "author": "joanhyokim",
        "time": "7/16/15 8:00 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected getGetOAuthRequest(portletRequest PortletRequest, portletResponse PortletResponse) : OAuthRequest</code> extracted from <code>protected remoteRender(renderRequest RenderRequest, renderResponse RenderResponse) : void</code> in class <code>com.liferay.marketplace.store.portlet.RemoteMVCPortlet</code>"
        ]
    },
    {
        "id": 1143196,
        "repository": "https://github.com/plutext/docx4j.git",
        "sha1": "59b8e89e61432d1d8f25cb003b62b3ac004d1b6f",
        "author": "Jason Harrop",
        "time": "7/16/15 10:52 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private setProtectionPassword(password String, hashAlgo HashAlgorithm) : void</code> extracted from <code>public setEnforcementEditValue(editValue STDocProtect, password String, hashAlgo HashAlgorithm) : void</code> in class <code>org.docx4j.openpackaging.parts.WordprocessingML.DocumentSettingsPart</code>"
        ]
    },
    {
        "id": 1145105,
        "repository": "https://github.com/MovingBlocks/Terasology.git",
        "sha1": "543a9808a85619dbe5acc2373cb4fe5344442de7",
        "author": "Immortius",
        "time": "7/17/15 3:07 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private initOpenAL(context Context) : void</code> inlined to <code>public initialise(rootContext Context) : void</code> in class <code>org.terasology.engine.subsystem.lwjgl.LwjglAudio</code>",
            "<b>Inline Method</b> <code>private initTimer(context Context) : void</code> inlined to <code>public preInitialise(context Context) : void</code> in class <code>org.terasology.engine.subsystem.lwjgl.LwjglTimer</code>",
            "<b>Move Attribute</b> <code>private time : EngineTime</code> from class <code>org.terasology.engine.TerasologyEngine</code> to class <code>org.terasology.engine.subsystem.headless.HeadlessTimer</code>",
            "<b>Move Attribute</b> <code>private time : EngineTime</code> from class <code>org.terasology.engine.TerasologyEngine</code> to class <code>org.terasology.engine.subsystem.lwjgl.LwjglTimer</code>",
            "<b>Move Classes</b> from <code>org.terasology.engine.subsystem</code> to <code>org.terasology.engine.subsystem.common</code>:<ul><li><code>ThreadManager</code></li><li><code>ThreadManagerSubsystem</code></li></ul>",
            "<b>Move Method</b> <code>public isFullscreen() : boolean</code> from class <code>org.terasology.engine.TerasologyEngine</code> to class <code>org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice</code>"
        ]
    },
    {
        "id": 1142921,
        "repository": "https://github.com/datastax/java-driver.git",
        "sha1": "14abb6919a99a0d6d500198dd2e30c83b1bb6709",
        "author": "olim7t",
        "time": "7/17/15 6:52 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private validateParameters() : void</code> extracted from <code>public prepare(manager MappingManager, ps PreparedStatement) : void</code> in class <code>com.datastax.driver.mapping.MethodMapper</code>"
        ]
    },
    {
        "id": 1143517,
        "repository": "https://github.com/BuildCraft/BuildCraft.git",
        "sha1": "a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
        "author": "Hea3veN",
        "time": "7/17/15 8:32 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getAvailableRequests(station DockingStation) : Collection&lt;StackRequest&gt;</code> extracted from <code>private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest</code> in class <code>buildcraft.robotics.ai.AIRobotSearchStackRequest</code>",
            "<b>Push Down Attribute</b> <code>private index : BlockIndex</code> from class <code>buildcraft.api.robots.ResourceId</code> to class <code>buildcraft.api.robots.ResourceIdRequest</code>",
            "<b>Push Down Attribute</b> <code>private side : ForgeDirection</code> from class <code>buildcraft.api.robots.ResourceId</code> to class <code>buildcraft.api.robots.ResourceIdRequest</code>",
            "<b>Push Down Attribute</b> <code>public index : BlockIndex</code> from class <code>buildcraft.api.robots.ResourceId</code> to class <code>buildcraft.api.robots.ResourceIdBlock</code>",
            "<b>Push Down Attribute</b> <code>public side : ForgeDirection</code> from class <code>buildcraft.api.robots.ResourceId</code> to class <code>buildcraft.api.robots.ResourceIdBlock</code>",
            "<b>Push Down Method</b> <code>public equals(obj Object) : boolean</code> from class <code>buildcraft.api.robots.ResourceId</code> to class <code>buildcraft.api.robots.ResourceIdBlock</code>"
        ]
    },
    {
        "id": 1143666,
        "repository": "https://github.com/apache/camel.git",
        "sha1": "ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
        "author": "jkorab",
        "time": "7/17/15 9:56 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public createExchange(message Message, endpoint Endpoint, keyFormatStrategy KeyFormatStrategy) : Exchange</code> extracted from <code>public createExchange(message Message, endpoint Endpoint) : Exchange</code> in class <code>org.apache.camel.component.sjms.jms.JmsMessageHelper</code>"
        ]
    },
    {
        "id": 1144689,
        "repository": "https://github.com/xetorthio/jedis.git",
        "sha1": "d4b4aecbc69bbd04ba87c4e32a52cff3d129906a",
        "author": "Jay Anderson",
        "time": "7/17/15 9:00 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private poolInactive() : boolean</code> extracted from <code>public getNumActive() : int</code> and 2 others in class <code>redis.clients.util.Pool</code>"
        ]
    },
    {
        "id": 1144559,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "dc199688d69416da58b370ca2aa728e935fc8e0d",
        "author": "Stefan Plantikow",
        "time": "7/20/15 6:24 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getSortedIndexUpdates(descriptor IndexDescriptor) : TreeMap&lt;DefinedProperty,DiffSets&lt;Long&gt;&gt;</code> extracted from <code>private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets&lt;Long&gt;</code> in class <code>org.neo4j.kernel.impl.api.state.TxState</code>"
        ]
    },
    {
        "id": 1145010,
        "repository": "https://github.com/ignatov/intellij-erlang.git",
        "sha1": "3855f0ca82795f7481b34342c7d9e5644a1d42c3",
        "author": "Olya Telezhnaya",
        "time": "7/20/15 6:26 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>private getModuleFileName() : String</code> inlined to <code>public resolve() : PsiElement</code> in class <code>org.intellij.erlang.psi.impl.ErlangFunctionReferenceImpl</code>"
        ]
    },
    {
        "id": 1145557,
        "repository": "https://github.com/apache/camel.git",
        "sha1": "14a7dd79148f9306dcd2f748b56fd6550e9406ab",
        "author": "Grzegorz Grzybek",
        "time": "7/20/15 9:51 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String</code> extracted from <code>public prepareDataFormat(log Log, project MavenProject, projectHelper MavenProjectHelper, dataFormatOutDir File, schemaOutDir File, buildContext BuildContext) : void</code> in class <code>org.apache.camel.maven.packaging.PackageDataFormatMojo</code>",
            "<b>Extract Method</b> <code>private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String</code> extracted from <code>public prepareLanguage(log Log, project MavenProject, projectHelper MavenProjectHelper, languageOutDir File, schemaOutDir File, buildContext BuildContext) : void</code> in class <code>org.apache.camel.maven.packaging.PackageLanguageMojo</code>"
        ]
    },
    {
        "id": 1144806,
        "repository": "https://github.com/siacs/Conversations.git",
        "sha1": "e6cb12dfe414497b4317820497985c110cb81864",
        "author": "Raphael Pohl",
        "time": "7/20/15 11:02 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getItemViewType(message Message) : int</code> extracted from <code>public getItemViewType(position int) : int</code> in class <code>eu.siacs.conversations.ui.adapter.MessageAdapter</code>"
        ]
    },
    {
        "id": 1144393,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
        "author": "peter",
        "time": "7/20/15 12:20 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getFieldInitializerNullness(expression PsiExpression) : Nullness</code> extracted from <code>private calcInherentNullability() : Nullness</code> in class <code>com.intellij.codeInspection.dataFlow.value.DfaVariableValue</code>"
        ]
    },
    {
        "id": 1144535,
        "repository": "https://github.com/facebook/presto.git",
        "sha1": "484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
        "author": "David Phillips",
        "time": "7/20/15 1:54 PM",
        "refactorings": [
            "<b>Move Class</b> <code>TestJmxSplitManager</code> moved from <code>com.facebook.presto.split</code> to <code>com.facebook.presto.connector.jmx</code>"
        ]
    },
    {
        "id": 1144626,
        "repository": "https://github.com/jline/jline2.git",
        "sha1": "1eb3b624b288a4b1a054420d3efb05b8f1d28517",
        "author": "Guillaume Nodet",
        "time": "7/20/15 2:41 PM",
        "refactorings": [
            "<b>Move Method</b> <code>public wcwidth(cs CharSequence) : int</code> from class <code>jline.console.WCWidth</code> to class <code>jline.console.ConsoleReader</code>"
        ]
    },
    {
        "id": 1144604,
        "repository": "https://github.com/greenrobot/greenDAO.git",
        "sha1": "d6d9dd4365387816fda6987a4ad9b679c27e72a3",
        "author": "Markus",
        "time": "7/20/15 5:25 PM",
        "refactorings": [
            "<b>Move Class</b> <code>PropertyConverter</code> moved from <code>de.greenrobot.dao</code> to <code>de.greenrobot.dao.converter</code>"
        ]
    },
    {
        "id": 1144794,
        "repository": "https://github.com/spotify/helios.git",
        "sha1": "3ffd70929c08be5cf14f156189e8050969caa87e",
        "author": "Ryan Culbertson",
        "time": "7/20/15 6:04 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private isRolloutTimedOut(deploymentGroup DeploymentGroup, client ZooKeeperClient) : boolean</code> extracted from <code>private rollingUpdateAwaitRunning(deploymentGroup DeploymentGroup, host String) : RollingUpdateTaskResult</code> in class <code>com.spotify.helios.master.ZooKeeperMasterModel</code>"
        ]
    },
    {
        "id": 1148572,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "b70f7ea0ce27b5defa0a7773d448732364e7aee0",
        "author": "Paulo Motta",
        "time": "7/22/15 12:11 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private listSnapshots() : List&lt;File&gt;</code> extracted from <code>public getSnapshotDetails() : Map&lt;String,Pair&lt;Long,Long&gt;&gt;</code> in class <code>org.apache.cassandra.db.Directories</code>"
        ]
    },
    {
        "id": 1149047,
        "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
        "sha1": "ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
        "author": "Luanne Misquitta",
        "time": "7/22/15 6:08 AM",
        "refactorings": [
            "<b>Move Class</b> <code>FriendContext</code> moved from <code>org.springframework.data.neo4j.examples.friends</code> to <code>org.springframework.data.neo4j.examples.friends.context</code>",
            "<b>Move Classes</b> from <code>org.springframework.data.neo4j.examples.friends</code> to <code>org.springframework.data.neo4j.examples.friends.domain</code>:<ul><li><code>Friendship</code></li><li><code>Person</code></li></ul>"
        ]
    },
    {
        "id": 1147092,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "4beba7bbdf927486a5cbf298a0fb2be50905a590",
        "author": "lutovich",
        "time": "7/22/15 7:06 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.neo4j.kernel.impl.store</code> to <code>org.neo4j.kernel.impl.store.record</code>:<ul><li><code>MandatoryNodePropertyConstraintRule</code></li><li><code>MandatoryRelationshipPropertyConstraintRule</code></li><li><code>NodePropertyConstraintRule</code></li><li><code>PropertyConstraintRule</code></li><li><code>RelationshipPropertyConstraintRule</code></li><li><code>UniquePropertyConstraintRule</code></li></ul>"
        ]
    },
    {
        "id": 1147835,
        "repository": "https://github.com/jersey/jersey.git",
        "sha1": "ee5aa50af6b4586fbe92cab718abfae8113a81aa",
        "author": "Petr Bouda",
        "time": "7/22/15 12:37 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.glassfish.jersey.examples.hello.spring.annotations.annotations</code> to <code>org.glassfish.jersey.examples.hello.spring.annotations</code>:<ul><li><code>EnglishGoodbyeService</code></li><li><code>GoodbyeService</code></li><li><code>GreetingService</code></li><li><code>JerseyConfig</code></li><li><code>NorwegianGoodbyeService</code></li><li><code>SpringAnnotationConfig</code></li><li><code>SpringRequestResource</code></li><li><code>SpringRequestResourceTest</code></li></ul>"
        ]
    },
    {
        "id": 1147574,
        "repository": "https://github.com/spotify/helios.git",
        "sha1": "687bda5a3ea1b5daae2764653843d318c77f4590",
        "author": "David Xia",
        "time": "7/22/15 2:35 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>public KAFKA_TOPIC : String</code> from class <code>com.spotify.helios.agent.TaskHistoryWriter</code> to class <code>com.spotify.helios.common.descriptors.TaskStatusEvent</code>"
        ]
    },
    {
        "id": 1149562,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "c53c6f45988db869d56abe3b1d831ff775f4fa73",
        "author": "Alan Gates",
        "time": "7/22/15 3:17 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private protoBufStatsForOneColumn(partitionColumnStats ColumnStatistics, colStats ColumnStatisticsObj) : ColumnStats</code> extracted from <code>package serializeStatsForOneColumn(partitionColumnStats ColumnStatistics, colStats ColumnStatisticsObj) : byte[]</code> in class <code>org.apache.hadoop.hive.metastore.hbase.HBaseUtils</code>",
            "<b>Extract Method</b> <code>private statsForOneColumnFromProtoBuf(partitionColumnStats ColumnStatistics, proto ColumnStats) : ColumnStatisticsObj</code> extracted from <code>package deserializeStatsForOneColumn(partitionColumnStats ColumnStatistics, bytes byte[]) : ColumnStatisticsObj</code> in class <code>org.apache.hadoop.hive.metastore.hbase.HBaseUtils</code>"
        ]
    },
    {
        "id": 1149312,
        "repository": "https://github.com/Atmosphere/atmosphere.git",
        "sha1": "69c229b7611ff8c6a20ff2d4da917a68c1cde64a",
        "author": "jfarcand",
        "time": "7/22/15 3:38 PM",
        "refactorings": [
            "<b>Move Method</b> <code>private getInheritedPrivateFields(type Class&lt;?&gt;) : Set&lt;Field&gt;</code> from class <code>org.atmosphere.inject.InjectableObjectFactory</code> to class <code>org.atmosphere.util.Utils</code>"
        ]
    },
    {
        "id": 1146882,
        "repository": "https://github.com/querydsl/querydsl.git",
        "sha1": "e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
        "author": "Timo Westkämper",
        "time": "7/22/15 5:03 PM",
        "refactorings": [
            "<b>Move Method</b> <code>private escapeLiteral(str String) : String</code> from class <code>com.querydsl.jpa.JPQLSerializer</code> to class <code>com.querydsl.jpa.JPQLTemplates</code>"
        ]
    },
    {
        "id": 1146490,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "6ff3fe00d7ffe04dbe0904b8bad98285b6988d6d",
        "author": "Nikolay Mikhaylov",
        "time": "7/23/15 3:21 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public customizeComponents() : void</code> extracted from <code>public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void</code> in class <code>org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl</code>",
            "<b>Extract Method</b> <code>public customizeComponents() : void</code> extracted from <code>public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void</code> in class <code>org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl</code>",
            "<b>Pull Up Method</b> <code>public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List&lt;String&gt;</code> from classes <code>org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl</code> and <code>org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl</code> to class <code>org.jetbrains.idea.maven.server.Maven3ServerEmbedder</code>"
        ]
    },
    {
        "id": 1148565,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "2b0a8f6bdac621badabcb9921c077260f2470c26",
        "author": "Sylvain Lebresne",
        "time": "7/23/15 4:00 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public deleteRowAt(metadata CFMetaData, timestamp long, localDeletionTime int, key Object, clusteringValues Object[]) : Mutation</code> extracted from <code>public deleteRow(metadata CFMetaData, timestamp long, key Object, clusteringValues Object[]) : Mutation</code> in class <code>org.apache.cassandra.db.RowUpdateBuilder</code>"
        ]
    },
    {
        "id": 1146483,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "33b0ac3a029845f9c20f7f5967c03b31b24f3b4b",
        "author": "Dennis Ushakov",
        "time": "7/23/15 6:15 AM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>private iterateRecursively(root VirtualFile, processor ContentIterator, indicator ProgressIndicator, visitedRoots Set&lt;VirtualFile&gt;, projectFileIndex ProjectFileIndex) : void</code> from class <code>com.intellij.util.indexing.FileBasedIndexImpl</code> to class <code>com.intellij.util.indexing.FileBasedIndex</code>"
        ]
    },
    {
        "id": 1147348,
        "repository": "https://github.com/dropwizard/metrics.git",
        "sha1": "4c6ab3d77cc67c7a91155d884077520dcf1509c6",
        "author": "Cirrus Pairing Station 5",
        "time": "7/23/15 8:02 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private closeGraphiteConnection() : void</code> extracted from <code>public report(gauges SortedMap&lt;String,Gauge&gt;, counters SortedMap&lt;String,Counter&gt;, histograms SortedMap&lt;String,Histogram&gt;, meters SortedMap&lt;String,Meter&gt;, timers SortedMap&lt;String,Timer&gt;) : void</code> in class <code>com.codahale.metrics.graphite.GraphiteReporter</code>"
        ]
    },
    {
        "id": 1149802,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "4712de476aabe69cd762233c9641dd3cf9f8361b",
        "author": "Anton Persson",
        "time": "7/23/15 10:19 AM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase</code> from classes <code>org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi</code> and <code>org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower</code>"
        ]
    },
    {
        "id": 1148642,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "681dc6346ce3cf5be5c5985faad120a18949cee0",
        "author": "Darrell DeBoer",
        "time": "7/23/15 5:53 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createPlatformToolProvider(targetPlatform NativePlatformInternal) : PlatformToolProvider</code> extracted from <code>public select(targetPlatform NativePlatformInternal) : PlatformToolProvider</code> in class <code>org.gradle.nativeplatform.toolchain.internal.gcc.AbstractGccCompatibleToolChain</code>"
        ]
    },
    {
        "id": 1147644,
        "repository": "https://github.com/linkedin/rest.li.git",
        "sha1": "f61db44ca4a862f1a84450643d92f85449016cfa",
        "author": "Keren Jin",
        "time": "7/23/15 6:42 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>public generate(schema DataSchema) : ClassTemplateSpec</code> inlined to <code>private generateRecord(schema RecordDataSchema) : RecordTemplateSpec</code> in class <code>com.linkedin.pegasus.generator.TemplateSpecGenerator</code>"
        ]
    },
    {
        "id": 1148739,
        "repository": "https://github.com/jenkinsci/workflow-plugin.git",
        "sha1": "d0e374ce8ecb687b4dc046d1edea9e52da17706f",
        "author": "Jesse Glick",
        "time": "7/23/15 7:24 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private setBranch(property BranchJobProperty, branch Branch, project WorkflowJob) : void</code> inlined to <code>public setBranch(project WorkflowJob, branch Branch) : WorkflowJob</code> in class <code>org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory</code>",
            "<b>Move Attribute</b> <code>package SCRIPT : String</code> from class <code>org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory</code> to class <code>org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject</code>"
        ]
    },
    {
        "id": 1146445,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "9fbf6b852bd9766060307aff960fb597d55e24d3",
        "author": "Maxim.Mossienko",
        "time": "7/23/15 8:06 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public clear() : void</code> extracted from <code>public close() : void</code> in class <code>com.intellij.util.io.CachingEnumerator</code>"
        ]
    },
    {
        "id": 1148821,
        "repository": "https://github.com/robovm/robovm.git",
        "sha1": "1ef86e69d5a108c2b4d836b0634ebdea912cfe00",
        "author": "Niklas Therning",
        "time": "7/24/15 5:48 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.robovm.compiler.plugin.lambda2</code> to <code>org.robovm.compiler.plugin.lambda</code>:<ul><li><code>LambdaClass</code></li><li><code>LambdaClassGenerator</code></li><li><code>LambdaPlugin</code></li></ul>"
        ]
    },
    {
        "id": 1148549,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
        "author": "Robert Stupp",
        "time": "7/24/15 6:37 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected compose(argDataTypes DataType[], protocolVersion int, argIndex int, value ByteBuffer) : Object</code> extracted from <code>protected compose(protocolVersion int, argIndex int, value ByteBuffer) : Object</code> in class <code>org.apache.cassandra.cql3.functions.UDFunction</code>",
            "<b>Extract Method</b> <code>protected decompose(dataType DataType, protocolVersion int, value Object) : ByteBuffer</code> extracted from <code>protected decompose(protocolVersion int, value Object) : ByteBuffer</code> in class <code>org.apache.cassandra.cql3.functions.UDFunction</code>"
        ]
    },
    {
        "id": 1147466,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "a1525ac9a0bb8f727167a8be94c81a3415128ef4",
        "author": "Al Sutton",
        "time": "7/24/15 7:16 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getAllPathsWork(workingDir Path) : ImmutableBiMap&lt;Path,Path&gt;</code> extracted from <code>private getAllPaths(workingDir Optional&lt;Path&gt;) : ImmutableBiMap&lt;Path,Path&gt;</code> in class <code>com.facebook.buck.cxx.DebugPathSanitizer</code>"
        ]
    },
    {
        "id": 1147051,
        "repository": "https://github.com/PhilJay/MPAndroidChart.git",
        "sha1": "3514aaedf9624222c985cb3abb12df2d9b514b12",
        "author": "Philipp Jahoda",
        "time": "7/24/15 8:11 AM",
        "refactorings": [
            "<b>Move Class</b> <code>Highlight</code> moved from <code>com.github.mikephil.charting.utils</code> to <code>com.github.mikephil.charting.highlight</code>"
        ]
    },
    {
        "id": 1147192,
        "repository": "https://github.com/RoboBinding/RoboBinding.git",
        "sha1": "b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
        "author": "weicheng113",
        "time": "7/24/15 8:26 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.robobinding.codegen.presentationmodel.nestedIPMexample</code> to <code>org.robobinding.codegen.presentationmodel.nestedIPM</code>:<ul><li><code>Item</code></li><li><code>ItemPresentationModelExample</code></li><li><code>PresentationModelExample</code></li><li><code>SubItem</code></li><li><code>SubItemPresentationModelExample</code></li></ul>"
        ]
    },
    {
        "id": 1147442,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "db024f5ec3e9611ddf8103bdc4c3817c704f7b27",
        "author": "Miguel Augusto Pereira de Oliveira",
        "time": "7/24/15 9:44 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getTargetsAndDependencies(params CommandRunnerParams, argumentsFormattedAsBuildTargets List&lt;String&gt;, showTransitive boolean, showTests boolean, enableProfiling boolean) : Multimap&lt;BuildTarget,BuildTarget&gt;</code> extracted from <code>public runWithoutHelp(params CommandRunnerParams) : int</code> in class <code>com.facebook.buck.cli.AuditDependenciesCommand</code>"
        ]
    },
    {
        "id": 1146679,
        "repository": "https://github.com/JetBrains/intellij-plugins.git",
        "sha1": "0df7cb00757fe0d4fac8d8b0d5fc46af95feb238",
        "author": "Konstantin Shcheglov",
        "time": "7/24/15 1:06 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public findPsiFile(project Project, path String) : PsiFile</code> extracted from <code>private getElementForNavigationTarget(project Project, target PluginNavigationTarget) : PsiElement</code> in class <code>com.jetbrains.lang.dart.resolve.DartResolver</code>"
        ]
    },
    {
        "id": 1146371,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "7dd55014f9840ce03867bb175cf37a4c151dc806",
        "author": "Sergey Malenkov",
        "time": "7/24/15 1:53 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createConfigurable(ep ConfigurableEP&lt;T&gt;, log boolean) : T</code> extracted from <code>public wrapConfigurable(ep ConfigurableEP&lt;T&gt;) : T</code> in class <code>com.intellij.openapi.options.ex.ConfigurableWrapper</code>"
        ]
    },
    {
        "id": 1147651,
        "repository": "https://github.com/google/guava.git",
        "sha1": "31fc19200207ccadc45328037d8a2a62b617c029",
        "author": "bul",
        "time": "7/24/15 2:38 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public tryParse(string String, radix int) : Long</code> extracted from <code>public tryParse(string String) : Long</code> in class <code>com.google.common.primitives.Longs</code>",
            "<b>Move Attribute</b> <code>private asciiDigits : byte[]</code> from class <code>com.google.common.primitives.Ints</code> to class <code>com.google.common.primitives.Longs</code>",
            "<b>Move Method</b> <code>private digit(c char) : int</code> from class <code>com.google.common.primitives.Ints</code> to class <code>com.google.common.primitives.Longs</code>"
        ]
    },
    {
        "id": 1149551,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "92e98858e742bbb669ccbf790a71a618c581df21",
        "author": "Alan Gates",
        "time": "7/24/15 2:43 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public use(ctx ParserRuleContext, sql String) : Integer</code> extracted from <code>public use(ctx Use_stmtContext) : Integer</code> in class <code>org.apache.hive.hplsql.Stmt</code>"
        ]
    },
    {
        "id": 1149690,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "6905d569a1e39d0d7b1ec5ceee4f0bbe60b85947",
        "author": "liana.bakradze",
        "time": "7/24/15 4:28 PM",
        "refactorings": [
            "<b>Extract Interface</b> <code>com.jetbrains.edu.courseFormat.Named</code> from types <code>com.jetbrains.edu.courseFormat.Lesson</code> and <code>com.jetbrains.edu.courseFormat.Task</code>"
        ]
    },
    {
        "id": 1150188,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "573a1d115b86abbe3fb53ff930464d7d8fd95600",
        "author": "Brandon Williams",
        "time": "7/24/15 5:41 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package getDroppedMessagesLogs() : List&lt;String&gt;</code> extracted from <code>private logDroppedMessages() : void</code> in class <code>org.apache.cassandra.net.MessagingService</code>",
            "<b>Extract Method</b> <code>public incrementDroppedMessages(verb Verb, isCrossNodeTimeout boolean) : void</code> extracted from <code>public incrementDroppedMessages(verb Verb) : void</code> in class <code>org.apache.cassandra.net.MessagingService</code>"
        ]
    },
    {
        "id": 1150162,
        "repository": "https://github.com/checkstyle/checkstyle.git",
        "sha1": "2f7481ee4e20ae785298c31ec2f979752dd7eb03",
        "author": "liscju",
        "time": "7/25/15 1:14 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private checkInterfaceModifiers(ast DetailAST) : void</code> extracted from <code>public visitToken(ast DetailAST) : void</code> in class <code>com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck</code>"
        ]
    },
    {
        "id": 1149799,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "021d17c8234904dcb1d54596662352395927fe7b",
        "author": "Rickard O?berg",
        "time": "7/25/15 7:28 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private assertHasRelationships(node long) : void</code> extracted from <code>private deleteNode1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void</code> and <code>private deleteNode2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void</code> in class <code>org.neo4j.kernel.impl.store.TestNeoStore</code>",
            "<b>Move Attribute</b> <code>package GET_LABEL : ToIntFunction&lt;LabelItem&gt;</code> from class <code>org.neo4j.kernel.api.cursor.LabelItem</code> to class <code>org.neo4j.kernel.api.cursor.NodeItem</code>",
            "<b>Move Multiple Attributes</b> from class <code>org.neo4j.kernel.impl.api.store.StoreStatement</code> to <code>org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor</code>:<ul><li><code>private allPropertyCursor : InstanceCache&lt;StorePropertyCursor&gt;</code></li><li><code>private singlePropertyCursor : InstanceCache&lt;StoreSinglePropertyCursor&gt;</code></li></ul>",
            "<b>Move Multiple Attributes</b> from class <code>org.neo4j.kernel.impl.api.store.StoreStatement</code> to <code>org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor</code>:<ul><li><code>private allPropertyCursor : InstanceCache&lt;StorePropertyCursor&gt;</code></li><li><code>private labelCursor : InstanceCache&lt;StoreLabelCursor&gt;</code></li><li><code>private nodeRelationshipCursor : InstanceCache&lt;StoreNodeRelationshipCursor&gt;</code></li><li><code>private singleLabelCursor : InstanceCache&lt;StoreSingleLabelCursor&gt;</code></li><li><code>private singlePropertyCursor : InstanceCache&lt;StoreSinglePropertyCursor&gt;</code></li></ul>",
            "<b>Move Class</b> <code>AllStoreIdIterator</code> moved from <code>org.neo4j.kernel.impl.api.store.DiskLayer</code> to <code>org.neo4j.kernel.impl.api.store.StoreStatement</code>",
            "<b>Move Multiple Methods</b> from class <code>org.neo4j.kernel.impl.api.store.DiskLayer</code> to <code>org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor</code>:<ul><li><code>private countByFirstPrevPointer(nodeId long, relationshipId long) : long</code></li><li><code>private directionOf(nodeId long, relationshipId long, startNode long, endNode long) : Direction</code></li><li><code>private nodeDegreeByDirection(nodeId long, group RelationshipGroupRecord, direction Direction) : long</code></li></ul>",
            "<b>Move Method</b> <code>public nodesGetAllCursor(statement StoreStatement) : Cursor&lt;NodeItem&gt;</code> from class <code>org.neo4j.kernel.impl.api.store.DiskLayer</code> to class <code>org.neo4j.kernel.impl.api.store.StoreStatement</code>"
        ]
    },
    {
        "id": 1149788,
        "repository": "https://github.com/facebook/presto.git",
        "sha1": "11048642b1e6b0e35efefab9e4e693b09c8753f5",
        "author": "Dain Sundstrom",
        "time": "7/25/15 2:59 PM",
        "refactorings": [
            "<b>Move Multiple Methods</b> from class <code>com.facebook.presto.sql.planner.PlanPrinter</code> to <code>com.facebook.presto.sql.planner.PlanPrinter.Visitor</code>:<ul><li><code>private formatDomain(table TableHandle, column ColumnHandle, domain Domain) : String</code></li><li><code>private printConstraint(indent int, table TableHandle, column ColumnHandle, constraint TupleDomain&lt;ColumnHandle&gt;) : void</code></li></ul>"
        ]
    },
    {
        "id": 1150361,
        "repository": "https://github.com/skylot/jadx.git",
        "sha1": "2d8d4164830631d3125575f055b417c5addaa22f",
        "author": "Skylot",
        "time": "7/26/15 11:19 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public getDefinitionPosition(javaNode JavaNode) : CodePosition</code> extracted from <code>public getDefinitionPosition(line int, offset int) : CodePosition</code> in class <code>jadx.api.JavaClass</code>",
            "<b>Extract Method</b> <code>public getJavaNodeAtPosition(line int, offset int) : JavaNode</code> extracted from <code>public getDefinitionPosition(line int, offset int) : CodePosition</code> in class <code>jadx.api.JavaClass</code>"
        ]
    },
    {
        "id": 1151684,
        "repository": "https://github.com/wildfly/wildfly.git",
        "sha1": "d7675fb0b19d3d22978e79954f441eeefd74a3b2",
        "author": "sdirbach",
        "time": "7/26/15 5:51 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private handleExcludeMethods(componentDescription EJBComponentDescription, excludeList ExcludeListMetaData) : void</code> extracted from <code>protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class&lt;?&gt;, componentDescription EJBComponentDescription) : void</code> in class <code>org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor</code>",
            "<b>Extract Method</b> <code>private handleMethodPermissions(componentDescription EJBComponentDescription, methodPermissions MethodPermissionsMetaData) : void</code> extracted from <code>protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class&lt;?&gt;, componentDescription EJBComponentDescription) : void</code> in class <code>org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor</code>"
        ]
    },
    {
        "id": 1150670,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "03ece4f24163204d8a3948eb53576f1feaa86a61",
        "author": "Chris Vest",
        "time": "7/27/15 6:06 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private fileLock : FileLock</code> from class <code>org.neo4j.kernel.impl.store.CommonAbstractStore</code> to class <code>org.neo4j.io.pagecache.impl.SingleFilePageSwapper</code>",
            "<b>Move Attribute</b> <code>private fileLock : FileLock</code> from class <code>org.neo4j.kernel.impl.store.standard.StoreOpenCloseCycle</code> to class <code>org.neo4j.io.pagecache.impl.SingleFilePageSwapper</code>"
        ]
    },
    {
        "id": 1150588,
        "repository": "https://github.com/openhab/openhab.git",
        "sha1": "f25fa3ae35e4a60a2b7f79a88f14d46ce6cebf55",
        "author": "Thomas Eichstädt-Engelen",
        "time": "7/27/15 7:48 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private initTimeMap() : Map&lt;String,Integer&gt;</code> extracted from <code>public parameters() : Collection&lt;Object[]</code> in class <code>org.openhab.core.library.types.DateTimeTypeTest</code>"
        ]
    },
    {
        "id": 1151109,
        "repository": "https://github.com/selendroid/selendroid.git",
        "sha1": "e4a309c160285708f917ea23238573da3b677f7f",
        "author": "Viacheslav Frolov",
        "time": "7/27/15 8:36 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected toByteArray(image BufferedImage) : byte[]</code> extracted from <code>public takeScreenshot() : byte[]</code> in class <code>io.selendroid.standalone.android.impl.AbstractDevice</code>"
        ]
    },
    {
        "id": 1150845,
        "repository": "https://github.com/jOOQ/jOOQ.git",
        "sha1": "227254cf769f3e821ed1b2ef2d88c4ec6b20adea",
        "author": "lukaseder",
        "time": "7/27/15 10:32 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public formatCSV(header boolean) : String</code> extracted from <code>public formatCSV() : String</code> in class <code>org.jooq.impl.ResultImpl</code>",
            "<b>Extract Method</b> <code>public formatCSV(header boolean, delimiter char) : String</code> extracted from <code>public formatCSV(delimiter char) : String</code> in class <code>org.jooq.impl.ResultImpl</code>",
            "<b>Extract Method</b> <code>public formatCSV(header boolean, delimiter char, nullString String) : String</code> extracted from <code>public formatCSV(delimiter char, nullString String) : String</code> in class <code>org.jooq.impl.ResultImpl</code>",
            "<b>Extract Method</b> <code>public formatCSV(stream OutputStream, header boolean) : void</code> extracted from <code>public formatCSV(stream OutputStream) : void</code> in class <code>org.jooq.impl.ResultImpl</code>",
            "<b>Extract Method</b> <code>public formatCSV(stream OutputStream, header boolean, delimiter char, nullString String) : void</code> extracted from <code>public formatCSV(stream OutputStream, delimiter char, nullString String) : void</code> in class <code>org.jooq.impl.ResultImpl</code>",
            "<b>Extract Method</b> <code>public formatCSV(writer Writer, header boolean) : void</code> extracted from <code>public formatCSV(writer Writer) : void</code> in class <code>org.jooq.impl.ResultImpl</code>",
            "<b>Extract Method</b> <code>public formatCSV(writer Writer, header boolean, delimiter char) : void</code> extracted from <code>public formatCSV(writer Writer, delimiter char) : void</code> in class <code>org.jooq.impl.ResultImpl</code>",
            "<b>Extract Method</b> <code>public formatCSV(writer Writer, header boolean, delimiter char, nullString String) : void</code> extracted from <code>public formatCSV(writer Writer, delimiter char, nullString String) : void</code> in class <code>org.jooq.impl.ResultImpl</code>"
        ]
    },
    {
        "id": 1152344,
        "repository": "https://github.com/eclipse/vert.x.git",
        "sha1": "0ef66582ffaba9a8df1cad846880df2074d34505",
        "author": "Julien Viet",
        "time": "7/27/15 10:38 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private init() : void</code> extracted from <code>public ClientOptionsBase()</code> in class <code>io.vertx.core.net.ClientOptionsBase</code>",
            "<b>Extract Method</b> <code>private init() : void</code> extracted from <code>public HttpClientOptions()</code> in class <code>io.vertx.core.http.HttpClientOptions</code>",
            "<b>Extract Method</b> <code>private init() : void</code> extracted from <code>public HttpServerOptions()</code> in class <code>io.vertx.core.http.HttpServerOptions</code>",
            "<b>Extract Method</b> <code>private init() : void</code> extracted from <code>public NetClientOptions()</code> in class <code>io.vertx.core.net.NetClientOptions</code>",
            "<b>Extract Method</b> <code>private init() : void</code> extracted from <code>public NetServerOptions()</code> in class <code>io.vertx.core.net.NetServerOptions</code>",
            "<b>Extract Method</b> <code>private init() : void</code> extracted from <code>public TCPSSLOptions()</code> in class <code>io.vertx.core.net.TCPSSLOptions</code>"
        ]
    },
    {
        "id": 1150594,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
        "author": "Jaromir Hamala",
        "time": "7/27/15 10:56 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.hazelcast.query.Predicates</code> to <code>com.hazelcast.query.impl.predicates</code>:<ul><li><code>AbstractPredicate</code></li><li><code>AndPredicate</code></li><li><code>BetweenPredicate</code></li><li><code>EqualPredicate</code></li><li><code>GreaterLessPredicate</code></li><li><code>ILikePredicate</code></li><li><code>InPredicate</code></li><li><code>InstanceOfPredicate</code></li><li><code>LikePredicate</code></li><li><code>NotEqualPredicate</code></li><li><code>NotPredicate</code></li><li><code>OrPredicate</code></li><li><code>RegexPredicate</code></li></ul>"
        ]
    },
    {
        "id": 1151360,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "4ccc0c37aabbd90ecaa36fcc491e2270e7e9bea6",
        "author": "Sushanth Sowmyan",
        "time": "7/27/15 1:29 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private dedupWithTableInfo() : void</code> extracted from <code>private writeObject(oos ObjectOutputStream) : void</code> in class <code>org.apache.hive.hcatalog.mapreduce.PartInfo</code>",
            "<b>Extract Method</b> <code>private restoreLocalInfoFromTableInfo() : void</code> extracted from <code>package setTableInfo(thatTableInfo HCatTableInfo) : void</code> in class <code>org.apache.hive.hcatalog.mapreduce.PartInfo</code>"
        ]
    },
    {
        "id": 1151028,
        "repository": "https://github.com/apache/giraph.git",
        "sha1": "03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
        "author": "Hassan Eslami",
        "time": "7/27/15 4:20 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private edgeStore : EdgeStore&lt;I,V,E&gt;</code> from class <code>org.apache.giraph.comm.ServerData</code> to class <code>org.apache.giraph.partition.SimplePartitionStore</code>"
        ]
    },
    {
        "id": 1150432,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "c1359c843bd03a694f846c8140e24ed646bbb913",
        "author": "Huzefa Hakimi",
        "time": "7/27/15 7:07 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createSchema(config Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void</code> extracted from <code>public testBasicCreateIndex() : void</code> and <code>public testCreateDropIndexonView() : void</code> in class <code>org.voltdb.TestAdhocCreateDropIndex</code>"
        ]
    },
    {
        "id": 1151129,
        "repository": "https://github.com/google/closure-compiler.git",
        "sha1": "545a7d027b4c55c116dc52d9cd8121fbb09777f0",
        "author": "lgong",
        "time": "7/27/15 8:33 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package isSubtype(typeA ObjectType, typeB RecordType, implicitImplCache ImplCache) : boolean</code> extracted from <code>package isSubtype(typeA ObjectType, typeB RecordType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.RecordType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(other JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(other JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.ArrowType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.EnumElementType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.EnumType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.FunctionType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.NoObjectType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.NoResolvedType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.NoType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.PrototypeObjectType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.ProxyObjectType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.RecordType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.TemplatizedType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.UnionType</code>",
            "<b>Extract Method</b> <code>protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean</code> extracted from <code>public isSubtype(that JSType) : boolean</code> in class <code>com.google.javascript.rhino.jstype.UnknownType</code>"
        ]
    },
    {
        "id": 1151667,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "204bf49cba03fe5d581a35ff82dd22587a681f46",
        "author": "Mehmet Dogan",
        "time": "7/28/15 4:32 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createConfig() : Config</code> extracted from <code>private testWaitNotifyService_whenNodeSplitFromCluster(action SplitAction) : void</code> and <code>private testWaitingInvocations_whenNodeSplitFromCluster(splitAction SplitAction) : void</code> in class <code>com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest</code>"
        ]
    },
    {
        "id": 1151664,
        "repository": "https://github.com/hazelcast/hazelcast.git",
        "sha1": "e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
        "author": "As?m Arslan",
        "time": "7/28/15 5:19 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createCodecModel(methodElement ExecutableElement, lang Lang) : CodecModel</code> extracted from <code>public generateCodec(methodElement ExecutableElement, lang Lang) : void</code> in class <code>com.hazelcast.client.protocol.generator.CodecCodeGenerator</code>",
            "<b>Move Attribute</b> <code>public DATA_FULL_NAME : String</code> from class <code>com.hazelcast.client.protocol.generator.CodecModel</code> to class <code>com.hazelcast.client.protocol.generator.CodeGenerationUtils</code>",
            "<b>Move Method</b> <code>public convertTypeToCSharp(type String) : String</code> from class <code>com.hazelcast.client.protocol.generator.CodecModel.ParameterModel</code> to class <code>com.hazelcast.client.protocol.generator.CodeGenerationUtils</code>"
        ]
    },
    {
        "id": 1152218,
        "repository": "https://github.com/spring-projects/spring-roo.git",
        "sha1": "0bb4cca1105fc6eb86e7c4b75bfff3dbbd55f0c8",
        "author": "Juan Carlos García",
        "time": "7/28/15 5:42 AM",
        "refactorings": [
            "<b>Pull Up Attribute</b> <code>private genericDefinition : String</code> from class <code>org.springframework.roo.classpath.details.MethodMetadataBuilder</code> to class <code>org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder</code>",
            "<b>Pull Up Method</b> <code>public getGenericDefinition() : String</code> from class <code>org.springframework.roo.classpath.details.MethodMetadataBuilder</code> to class <code>org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder</code>",
            "<b>Pull Up Method</b> <code>public setGenericDefinition(definition String) : void</code> from class <code>org.springframework.roo.classpath.details.MethodMetadataBuilder</code> to class <code>org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder</code>"
        ]
    },
    {
        "id": 1152033,
        "repository": "https://github.com/bitcoinj/bitcoinj.git",
        "sha1": "12602650ce99f34cb530fc24266c23e39733b0bb",
        "author": "Ross Nicoll",
        "time": "7/28/15 7:20 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected parseTransactions(transactionsOffset int) : void</code> extracted from <code>protected parseTransactions() : void</code> in class <code>org.bitcoinj.core.Block</code>",
            "<b>Extract Method</b> <code>public makeAddressMessage(payloadBytes byte[], length int) : AddressMessage</code> extracted from <code>private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message</code> in class <code>org.bitcoinj.core.BitcoinSerializer</code>",
            "<b>Extract Method</b> <code>public makeBlock(payloadBytes byte[], length int) : Block</code> extracted from <code>private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message</code> in class <code>org.bitcoinj.core.BitcoinSerializer</code>",
            "<b>Extract Method</b> <code>public makeInventoryMessage(payloadBytes byte[], length int) : InventoryMessage</code> extracted from <code>private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message</code> in class <code>org.bitcoinj.core.BitcoinSerializer</code>",
            "<b>Extract Method</b> <code>public makeTransaction(payloadBytes byte[], offset int, length int, hash byte[]) : Transaction</code> extracted from <code>private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message</code> in class <code>org.bitcoinj.core.BitcoinSerializer</code>"
        ]
    },
    {
        "id": 1151859,
        "repository": "https://github.com/alibaba/druid.git",
        "sha1": "87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
        "author": "shaojin.wensj",
        "time": "7/28/15 11:24 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected printJoinType(joinType JoinType) : void</code> extracted from <code>public visit(x SQLJoinTableSource) : boolean</code> in class <code>com.alibaba.druid.sql.visitor.SQLASTOutputVisitor</code>"
        ]
    },
    {
        "id": 1152672,
        "repository": "https://github.com/eclipse/jetty.project.git",
        "sha1": "837d1a74bb7d694220644a2539c4440ce55462cf",
        "author": "Simone Bordet",
        "time": "7/28/15 11:39 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private testTransparentProxyWithQuery(proxyToContext String, prefix String, target String) : void</code> extracted from <code>public testTransparentProxyWithQuery() : void</code> in class <code>org.eclipse.jetty.proxy.ProxyServletTest</code>"
        ]
    },
    {
        "id": 1153146,
        "repository": "https://github.com/clojure/clojure.git",
        "sha1": "309c03055b06525c275b278542c881019424760e",
        "author": "Rich Hickey",
        "time": "7/28/15 12:44 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package sigTag(argcount int, v Var) : Object</code> extracted from <code>public InvokeExpr(source String, line int, column int, tag Symbol, fexpr Expr, args IPersistentVector, tailPosition boolean)</code> in class <code>clojure.lang.Compiler.InvokeExpr</code>"
        ]
    },
    {
        "id": 1151782,
        "repository": "https://github.com/osmandapp/Osmand.git",
        "sha1": "e95aa8ab32a0334b9c941799060fd601297d05e4",
        "author": "GaidamakUA",
        "time": "7/28/15 1:13 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public showItemPopupOptionsMenu(point FavouritePoint, activity Activity, view View) : void</code> extracted from <code>public onListItemClick(l ListView, v View, position int, id long) : void</code> in class <code>net.osmand.plus.activities.FavoritesListFragment</code>",
            "<b>Extract Method</b> <code>public showItemPopupOptionsMenu(point FavouritePoint, view View) : void</code> extracted from <code>public onChildClick(parent ExpandableListView, v View, groupPosition int, childPosition int, id long) : boolean</code> in class <code>net.osmand.plus.activities.FavoritesTreeFragment</code>"
        ]
    },
    {
        "id": 1151927,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
        "author": "Uri Baghin",
        "time": "7/28/15 3:32 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>public sanitize(workingDir Optional&lt;Path&gt;, contents String, expandPaths boolean) : String</code> inlined to <code>public sanitize(workingDir Optional&lt;Path&gt;, contents String) : String</code> in class <code>com.facebook.buck.cxx.DebugPathSanitizer</code>"
        ]
    },
    {
        "id": 1151906,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "ecd0ad5ab99b8d14f28881cf4f49ec01f2221776",
        "author": "Martino Luca",
        "time": "7/28/15 3:36 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private computePlatformCompilerFlags(pic PicType, source CxxSource) : ImmutableList&lt;String&gt;</code> extracted from <code>public createPreprocessAndCompileBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType, strategy CxxPreprocessMode) : CxxPreprocessAndCompile</code> in class <code>com.facebook.buck.cxx.CxxSourceRuleFactory</code>",
            "<b>Extract Method</b> <code>private computePlatformFlags(pic PicType, source CxxSource) : ImmutableList&lt;String&gt;</code> extracted from <code>public createPreprocessBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType) : CxxPreprocessAndCompile</code> in class <code>com.facebook.buck.cxx.CxxSourceRuleFactory</code>",
            "<b>Extract Method</b> <code>private computeRuleCompilerFlags(source CxxSource) : ImmutableList&lt;String&gt;</code> extracted from <code>public createPreprocessAndCompileBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType, strategy CxxPreprocessMode) : CxxPreprocessAndCompile</code> in class <code>com.facebook.buck.cxx.CxxSourceRuleFactory</code>",
            "<b>Extract Method</b> <code>private computeRuleFlags(source CxxSource) : ImmutableList&lt;String&gt;</code> extracted from <code>public createPreprocessBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType) : CxxPreprocessAndCompile</code> in class <code>com.facebook.buck.cxx.CxxSourceRuleFactory</code>"
        ]
    },
    {
        "id": 1152026,
        "repository": "https://github.com/bitcoinj/bitcoinj.git",
        "sha1": "7744a00629514b9539acac05596d64af878fe747",
        "author": "Andreas Schildbach",
        "time": "7/28/15 5:14 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private testCachedParsing(lazy boolean) : void</code> inlined to <code>public testCachedParsing() : void</code> in class <code>org.bitcoinj.core.BitcoinSerializerTest</code>"
        ]
    },
    {
        "id": 1152530,
        "repository": "https://github.com/addthis/hydra.git",
        "sha1": "7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
        "author": "ian",
        "time": "7/28/15 5:43 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.addthis.hydra.job.spawn</code> to <code>com.addthis.hydra.job.spawn.balancer</code>:<ul><li><code>SpawnBalancer</code></li><li><code>SpawnBalancerConfig</code></li><li><code>SpawnBalancerTaskSizer</code></li><li><code>SpawnBalancerTest</code></li></ul>",
            "<b>Move Classes</b> from <code>com.addthis.hydra.job.spawn.SpawnBalancer</code> to <code>com.addthis.hydra.job.spawn.balancer</code>:<ul><li><code>HostAndScore</code></li><li><code>HostScore</code></li><li><code>JobTaskItem</code></li></ul>"
        ]
    },
    {
        "id": 1152936,
        "repository": "https://github.com/wildfly/wildfly.git",
        "sha1": "4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
        "author": "Paul Ferraro",
        "time": "7/28/15 7:18 PM",
        "refactorings": [
            "<b>Move Class</b> <code>GroupServiceNameFactory</code> moved from <code>org.wildfly.clustering.spi</code> to <code>org.wildfly.clustering.service</code>"
        ]
    },
    {
        "id": 1152358,
        "repository": "https://github.com/hibernate/hibernate-orm.git",
        "sha1": "0b6ea757e34a63b1421b77ed5fbb61398377aab1",
        "author": "Gail Badner",
        "time": "7/29/15 12:10 AM",
        "refactorings": [
            "<b>Move Class</b> <code>EntityWithLazyProperty</code> moved from <code>org.hibernate.jpa.test.callbacks</code> to <code>org.hibernate.jpa.test.instrument.domain</code>"
        ]
    },
    {
        "id": 1153435,
        "repository": "https://github.com/ReactiveX/RxJava.git",
        "sha1": "8ad226067434cd39ce493b336bd0659778625959",
        "author": "Yuya Tanaka",
        "time": "7/29/15 2:36 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private awaitForComplete(latch CountDownLatch, subscription Subscription) : void</code> extracted from <code>private blockForSingle(observable Observable&lt;? extends T&gt;) : T</code> and <code>public forEach(onNext Action1&lt;? super T&gt;) : void</code> in class <code>rx.observables.BlockingObservable</code>"
        ]
    },
    {
        "id": 1153409,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
        "author": "Carl Yeksigian",
        "time": "7/29/15 5:15 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public dumpMemtable() : void</code> extracted from <code>public truncateBlocking() : void</code> in class <code>org.apache.cassandra.db.ColumnFamilyStore</code>",
            "<b>Move Class</b> <code>AbstractReadCommandBuilder</code> moved from <code>org.apache.cassandra</code> to <code>org.apache.cassandra.db</code>"
        ]
    },
    {
        "id": 1153579,
        "repository": "https://github.com/cwensel/cascading.git",
        "sha1": "f9d3171f5020da5c359cdda28ef05172e858c464",
        "author": "Chris K Wensel",
        "time": "7/29/15 7:47 PM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private prefixID : String</code> from class <code>cascading.stats.tez.TezNodeStats</code> to class <code>cascading.stats.CascadingStats</code>",
            "<b>Move Multiple Methods</b> from class <code>cascading.stats.tez.TezNodeStats</code> to <code>cascading.stats.CascadingStats</code>:<ul><li><code>private getPrefix() : String</code></li><li><code>protected logDebug(message String, arguments Object[]) : void</code></li><li><code>protected logInfo(message String, arguments Object[]) : void</code></li><li><code>protected logWarn(message String, arguments Object[]) : void</code></li></ul>"
        ]
    },
    {
        "id": 1153111,
        "repository": "https://github.com/google/j2objc.git",
        "sha1": "d05d92de40542e85f9f26712d976e710be82914e",
        "author": "kirbs",
        "time": "7/29/15 9:03 PM",
        "refactorings": [
            "<b>Move Class</b> <code>LambdaExpressionTest</code> moved from <code>com.google.devtools.j2objc.translate</code> to <code>com.google.devtools.j2objc.ast</code>"
        ]
    },
    {
        "id": 1153464,
        "repository": "https://github.com/netty/netty.git",
        "sha1": "9d347ffb91f34933edb7b1124f6b70c3fc52e220",
        "author": "Scott Mitchell",
        "time": "7/30/15 3:25 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private expand() : void</code> extracted from <code>public append(c char) : AppendableCharSequence</code> in class <code>io.netty.util.internal.AppendableCharSequence</code>"
        ]
    },
    {
        "id": 1153354,
        "repository": "https://github.com/restlet/restlet-framework-java.git",
        "sha1": "7ffe37983e2f09637b0c84d526a2f824de652de4",
        "author": "Hugo Wood",
        "time": "7/30/15 10:40 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private fillRepresentation(model Model, name String, contract Contract) : void</code> extracted from <code>private fillRepresentations(swagger Swagger, contract Contract) : void</code> in class <code>org.restlet.ext.apispark.internal.conversion.swagger.v2_0.Swagger2Reader</code>"
        ]
    },
    {
        "id": 1153761,
        "repository": "https://github.com/JetBrains/MPS.git",
        "sha1": "ce4b0e22659c16ae83d421f9621fd3e922750764",
        "author": "Mihail Muhin",
        "time": "7/30/15 1:39 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected renameModels(oldName String, newName String) : void</code> extracted from <code>public rename(newName String) : void</code> in class <code>jetbrains.mps.project.AbstractModule</code>"
        ]
    },
    {
        "id": 1153652,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "deb8e5ca64fcf633edbd89523af472da813b6772",
        "author": "Chris Wolff",
        "time": "7/30/15 2:19 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getNormalValue(r Random, magnitude double, min long, max long) : long</code> extracted from <code>private fillTable(client Client, tbl String) : void</code> in class <code>org.voltdb.regressionsuites.TestApproxCountDistinctSuite</code>"
        ]
    },
    {
        "id": 1153762,
        "repository": "https://github.com/netty/netty.git",
        "sha1": "d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
        "author": "Jakob Buchgraber",
        "time": "7/30/15 2:38 PM",
        "refactorings": [
            "<b>Inline Method</b> <code>private comparator(ignoreCase boolean) : Comparator&lt;CharSequence&gt;</code> inlined to <code>public contains(name CharSequence, value CharSequence, ignoreCase boolean) : boolean</code> in class <code>io.netty.handler.codec.DefaultTextHeaders</code>"
        ]
    },
    {
        "id": 1153866,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "e2de877a29217a50afbd142454a330e423d86045",
        "author": "Christopher M. Wolff",
        "time": "7/30/15 8:14 PM",
        "refactorings": [
            "<b>Pull Up Method</b> <code>private findAllAggPlanNodes(node AbstractPlanNode) : List&lt;AbstractPlanNode&gt;</code> from class <code>org.voltdb.planner.TestPlansApproxCountDistinct</code> to class <code>org.voltdb.planner.PlannerTestCase</code>"
        ]
    },
    {
        "id": 1153913,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "2b76aa336d696bbbbb205e6b6998e07ae5eb4261",
        "author": "Max Medvedev",
        "time": "7/30/15 10:53 PM",
        "refactorings": [
            "<b>Move Class</b> <code>ResolveProfiler</code> moved from <code>org.jetbrains.plugins.groovy.util</code> to <code>com.intellij.util.profiling</code>"
        ]
    },
    {
        "id": 1155351,
        "repository": "https://github.com/apache/drill.git",
        "sha1": "f8197cfe1bc3671aa6878ef9d1869b2fe8e57331",
        "author": "Mehant Baid",
        "time": "7/31/15 12:17 AM",
        "refactorings": [
            "<b>Extract Interface</b> <code>org.apache.drill.exec.expr.fn.FunctionLookupContext</code> from type <code>org.apache.drill.exec.expr.fn.FunctionImplementationRegistry</code>",
            "<b>Extract Interface</b> <code>org.apache.drill.exec.ops.OptimizerRulesContext</code> from type <code>org.apache.drill.exec.ops.QueryContext</code>"
        ]
    },
    {
        "id": 1153812,
        "repository": "https://github.com/geoserver/geoserver.git",
        "sha1": "07c26a3a1dd6fcc2494c2d755ee5a2753e0df87c",
        "author": "Kevin Smith",
        "time": "7/31/15 7:12 AM",
        "refactorings": [
            "<b>Move Class</b> <code>PropertyRule</code> moved from <code>org.geoserver.wfs.xml</code> to <code>org.geoserver.util</code>"
        ]
    },
    {
        "id": 1155178,
        "repository": "https://github.com/brettwooldridge/HikariCP.git",
        "sha1": "e19c6874431dc2c3046436c2ac249a0ab2ef3457",
        "author": "David Schlosnagle",
        "time": "7/31/15 1:03 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private closeOpenStatements() : void</code> extracted from <code>public close() : void</code> in class <code>com.zaxxer.hikari.proxy.ConnectionProxy</code>"
        ]
    },
    {
        "id": 1155119,
        "repository": "https://github.com/jOOQ/jOOQ.git",
        "sha1": "58a4e74d28073e7c6f15d1f225ac1c2fd9aa4357",
        "author": "lukaseder",
        "time": "7/31/15 1:51 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private millis(temporal Temporal) : long</code> extracted from <code>public from(from Object) : U</code> in class <code>org.jooq.tools.Convert.ConvertAll</code>"
        ]
    },
    {
        "id": 1155401,
        "repository": "https://github.com/spring-projects/spring-integration.git",
        "sha1": "4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
        "author": "Artem Bilan",
        "time": "7/31/15 2:19 PM",
        "refactorings": [
            "<b>Move Class</b> <code>CompositeCodecTests</code> moved from <code>org.springframework.integration.codec</code> to <code>org.springframework.integration.codec.kryo</code>"
        ]
    },
    {
        "id": 1155076,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
        "author": "Martin Kosiba",
        "time": "7/31/15 3:01 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>package getEnumerator(rType RType) : ResourceIdEnumerator</code> extracted from <code>public addIntResourceIfNotPresent(rType RType, name String) : void</code> in class <code>com.facebook.buck.android.aapt.AaptResourceCollector</code>"
        ]
    },
    {
        "id": 1155930,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "0fa45e4a562fc2586b1ef06a88e9c186a0835316",
        "author": "Alan Gates",
        "time": "7/31/15 3:07 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private copyOneFunction(dbName String, funcName String) : void</code> extracted from <code>private copyFunctions() : void</code> in class <code>org.apache.hadoop.hive.metastore.hbase.HBaseImport</code>",
            "<b>Extract Method</b> <code>private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void</code> extracted from <code>public doImport() : void</code> in class <code>org.apache.hadoop.hive.metastore.hbase.TestHBaseImport</code>"
        ]
    },
    {
        "id": 1154674,
        "repository": "https://github.com/JetBrains/intellij-plugins.git",
        "sha1": "83b3092c1ee11b70489732f9e69b8e01c2a966f0",
        "author": "Alexander Doroshko",
        "time": "7/31/15 3:41 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getShortErrorMessage(methodName String, filePath String, error RequestError) : String</code> extracted from <code>private logError(methodName String, filePath String, error RequestError) : void</code> in class <code>com.jetbrains.lang.dart.analyzer.DartAnalysisServerService</code>"
        ]
    },
    {
        "id": 1155773,
        "repository": "https://github.com/gwtproject/gwt.git",
        "sha1": "892d1760c8e4c76c369cd5ec1eaed215d3a22c8a",
        "author": "Julien Dramaix",
        "time": "7/31/15 4:56 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public startRow(rowValue T) : TableRowBuilder</code> extracted from <code>public startRow() : TableRowBuilder</code> in class <code>com.google.gwt.user.cellview.client.AbstractCellTableBuilder</code>"
        ]
    },
    {
        "id": 1154537,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "d47e58f9bbce9a816378e8a7930c1de67a864c29",
        "author": "Manju James",
        "time": "7/31/15 6:44 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public callProcedure(ic ImportContext, procCallback ProcedureCallback, proc String, fieldList Object) : boolean</code> extracted from <code>public callProcedure(ic ImportContext, proc String, fieldList Object) : boolean</code> in class <code>org.voltdb.ImportHandler</code>"
        ]
    },
    {
        "id": 1155272,
        "repository": "https://github.com/raphw/byte-buddy.git",
        "sha1": "fd000ca2e78fce2f8aa11e6a81e4f23c2f1348e6",
        "author": "Rafael Winterhalter",
        "time": "7/31/15 8:22 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private invokeMethod(methodToken Token) : SpecialMethodInvocation</code> extracted from <code>public invokeSuper(methodToken Token) : SpecialMethodInvocation</code> in class <code>net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget</code>"
        ]
    },
    {
        "id": 1155159,
        "repository": "https://github.com/bitfireAT/davdroid.git",
        "sha1": "5b7947034a656c463ca477e198f7728cccc9e4c1",
        "author": "Ricki Hirner",
        "time": "8/1/15 8:25 AM",
        "refactorings": [
            "<b>Move Method</b> <code>package recurrenceSetsToAndroidString(dates List&lt;? extends DateListProperty&gt;) : String</code> from class <code>at.bitfire.davdroid.resource.LocalCalendar</code> to class <code>at.bitfire.davdroid.DateUtils</code>"
        ]
    },
    {
        "id": 1155375,
        "repository": "https://github.com/MovingBlocks/Terasology.git",
        "sha1": "dbd2d5048ae5e30fec98ddd969b6c1e91183fb65",
        "author": "Florian Köberle",
        "time": "8/1/15 9:17 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>private localPlayer : LocalPlayer</code> from class <code>org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider.ChunkTaskRelevanceComparator</code> to class <code>org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider</code>",
            "<b>Move Attribute</b> <code>private localPlayer : LocalPlayer</code> from class <code>org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider.ReadyChunkRelevanceComparator</code> to class <code>org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider</code>"
        ]
    },
    {
        "id": 1155451,
        "repository": "https://github.com/droolsjbpm/jbpm.git",
        "sha1": "3815f293ba9338f423315d93a373608c95002b15",
        "author": "Marco Rietveld",
        "time": "8/1/15 7:38 PM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.jbpm.process.audit.JPAService</code> from class <code>org.jbpm.process.audit.JPAAuditLogService</code>"
        ]
    },
    {
        "id": 1157287,
        "repository": "https://github.com/processing/processing.git",
        "sha1": "f36b736cf1206dd1af794d6fb4cee967a3553b1f",
        "author": "Jakub Valtar",
        "time": "8/3/15 12:36 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private createDepthAndStencilBuffer(multisample boolean, depthBits int, stencilBits int, packed boolean) : void</code> extracted from <code>private createFBOLayer() : void</code> in class <code>processing.opengl.PGL</code>"
        ]
    },
    {
        "id": 1156578,
        "repository": "https://github.com/infinispan/infinispan.git",
        "sha1": "043030723632627b0908dca6b24dae91d3dfd938",
        "author": "gustavonalle",
        "time": "8/3/15 1:16 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private ignoreRehashIteration(consumer Consumer&lt;R&gt;, supplier IteratorSupplier&lt;R&gt;, iteratorParallelDistribute boolean) : void</code> extracted from <code>package remoteIterator() : Iterator&lt;R&gt;</code> in class <code>org.infinispan.stream.impl.DistributedCacheStream</code>",
            "<b>Extract Method</b> <code>private rehashAwareIteration(complete AtomicBoolean, consumer Consumer&lt;R&gt;, supplier IteratorSupplier&lt;R&gt;, iteratorParallelDistribute boolean) : void</code> extracted from <code>package remoteIterator() : Iterator&lt;R&gt;</code> in class <code>org.infinispan.stream.impl.DistributedCacheStream</code>"
        ]
    },
    {
        "id": 1156374,
        "repository": "https://github.com/MovingBlocks/Terasology.git",
        "sha1": "8f63cc5c8edb8e740026447bc4827f8e8e6c34b1",
        "author": "Limeth",
        "time": "8/3/15 1:20 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private ensurePreviewUnloaded() : boolean</code> extracted from <code>public onClosed() : void</code> in class <code>org.terasology.rendering.nui.layers.mainMenu.PreviewWorldScreen</code>"
        ]
    },
    {
        "id": 1156317,
        "repository": "https://github.com/jersey/jersey.git",
        "sha1": "d94ca2b27c9e8a5fa9fe19483d58d2f2ef024606",
        "author": "Pavel Bucek",
        "time": "8/3/15 2:32 PM",
        "refactorings": [
            "<b>Move Class</b> <code>HttpUrlConnector</code> moved from <code>org.glassfish.jersey.client</code> to <code>org.glassfish.jersey.client.internal</code>"
        ]
    },
    {
        "id": 1156168,
        "repository": "https://github.com/dropwizard/metrics.git",
        "sha1": "2331fe19ea88a22de32f15375de8118226eaa1e6",
        "author": "Ryan Tenney",
        "time": "8/3/15 3:30 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private registerMetricsForModel(resourceModel ResourceModel) : void</code> extracted from <code>public onEvent(event ApplicationEvent) : void</code> in class <code>io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener</code>"
        ]
    },
    {
        "id": 1156456,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "3a7ccf5a252077332b9505acb22f190745f726f7",
        "author": "Sterling Greene",
        "time": "8/3/15 4:21 PM",
        "refactorings": [
            "<b>Move Method</b> <code>private registerOrFindDeploymentHandle(deploymentRegistry DeploymentRegistry, deploymentId String) : PlayApplicationDeploymentHandle</code> from class <code>org.gradle.play.plugins.PlayApplicationPlugin.Rules</code> to class <code>org.gradle.play.tasks.PlayRun</code>"
        ]
    },
    {
        "id": 1157172,
        "repository": "https://github.com/JoanZapata/android-iconify.git",
        "sha1": "eb500cca282e39d01a9882e1d0a83186da6d1a26",
        "author": "Damien",
        "time": "8/3/15 5:55 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private copy(inputStream InputStream, outputFile File) : void</code> extracted from <code>package resourceToFile(context Context, resourceName String) : File</code> in class <code>com.joanzapata.android.iconify.Utils</code>"
        ]
    },
    {
        "id": 1156434,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
        "author": "Robert Stupp",
        "time": "8/3/15 7:05 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public assertUdfsEnabled(language String) : void</code> extracted from <code>public create(name FunctionName, argNames List&lt;ColumnIdentifier&gt;, argTypes List&lt;AbstractType&lt;?&gt;&gt;, returnType AbstractType&lt;?&gt;, calledOnNullInput boolean, language String, body String) : UDFunction</code> in class <code>org.apache.cassandra.cql3.functions.UDFunction</code>"
        ]
    },
    {
        "id": 1156548,
        "repository": "https://github.com/apache/pig.git",
        "sha1": "92dce401344a28ff966ad4cf3dd969a676852315",
        "author": "Jianyong Dai",
        "time": "8/3/15 9:16 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public depthFirstSearchForFile(statusArray FileStatus[], fileSystem FileSystem, filter PathFilter) : Path</code> extracted from <code>public depthFirstSearchForFile(statusArray FileStatus[], fileSystem FileSystem) : Path</code> in class <code>org.apache.pig.impl.util.Utils</code>"
        ]
    },
    {
        "id": 1156276,
        "repository": "https://github.com/linkedin/rest.li.git",
        "sha1": "54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
        "author": "Soojung Ha",
        "time": "8/3/15 9:25 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public addResponseCompressionHeaders(responseCompressionOverride CompressionOption, req RestRequest) : RestRequest</code> extracted from <code>public onRestRequest(req RestRequest, requestContext RequestContext, wireAttrs Map&lt;String,String&gt;, nextFilter NextFilter&lt;RestRequest,RestResponse&gt;) : void</code> in class <code>com.linkedin.r2.filter.compression.ClientCompressionFilter</code>",
            "<b>Move Multiple Methods</b> from class <code>com.linkedin.restli.examples.TestCompressionServer</code> to <code>com.linkedin.r2.filter.compression.TestClientCompressionFilter</code>:<ul><li><code>public contentEncodingGeneratorDataProvider() : Object[][]</code></li><li><code>public testEncodingGeneration(encoding EncodingType[], acceptEncoding String) : void</code></li></ul>",
            "<b>Move Method</b> <code>public shouldCompressRequest(entityLength int, requestCompressionOverride CompressionOption) : boolean</code> from class <code>com.linkedin.r2.filter.CompressionConfig</code> to class <code>com.linkedin.r2.filter.compression.ClientCompressionFilter</code>"
        ]
    },
    {
        "id": 1156165,
        "repository": "https://github.com/square/mortar.git",
        "sha1": "72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
        "author": "Ray Ryan",
        "time": "8/3/15 10:11 PM",
        "refactorings": [
            "<b>Move Multiple Methods</b> from class <code>mortar.ObjectGraphServiceTest</code> to <code>mortar.MortarScopeTest</code>:<ul><li><code>public cannotFindChildFromDestroyed() : void</code></li><li><code>public cannotRegisterOnDestroyed() : void</code></li><li><code>public destroyIsIdempotent() : void</code></li><li><code>public isDestroyedGetsSet() : void</code></li><li><code>public isDestroyedStartsFalse() : void</code></li><li><code>public rootDestroyIsIdempotent() : void</code></li></ul>"
        ]
    },
    {
        "id": 1156431,
        "repository": "https://github.com/apache/cassandra.git",
        "sha1": "1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
        "author": "Marcus Eriksson",
        "time": "8/4/15 4:51 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public minorWasTriggered(keyspace String, cf String) : boolean</code> extracted from <code>public testTriggerMinorCompaction() : void</code> in class <code>org.apache.cassandra.db.compaction.CompactionsCQLTest</code>"
        ]
    },
    {
        "id": 1156210,
        "repository": "https://github.com/spring-projects/spring-hateoas.git",
        "sha1": "8bdc57ba8975d851fe91edc908761aacea624766",
        "author": "Oliver Gierke",
        "time": "8/4/15 5:35 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>private assertCanRead(converter GenericHttpMessageConverter&lt;Object&gt;, type Class&lt;?&gt;, expected boolean) : void</code> extracted from <code>public canReadTypeIfAssignableToConfiguredType() : void</code> in class <code>org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest</code>",
            "<b>Extract Method</b> <code>private assertCanWrite(converter GenericHttpMessageConverter&lt;Object&gt;, type Class&lt;?&gt;, expected boolean) : void</code> extracted from <code>public canWriteTypeIfAssignableToConfiguredType() : void</code> in class <code>org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest</code>"
        ]
    },
    {
        "id": 1156853,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "6b90205e9f7bbd1570f600d3812fd3efa1a0597e",
        "author": "Sergey Savenko",
        "time": "8/4/15 8:47 AM",
        "refactorings": [
            "<b>Move Class</b> <code>IDE</code> moved from <code>com.intellij.execution.console.RunIdeConsoleAction</code> to <code>com.intellij.ide.script</code>"
        ]
    },
    {
        "id": 1156821,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "d12e1c16d1c73142334e689eb01f20abaeba84b0",
        "author": "Aleksey Pivovarov",
        "time": "8/4/15 10:40 AM",
        "refactorings": [
            "<b>Move Attribute</b> <code>public ORIGINAL_DOCUMENT : Key&lt;Document&gt;</code> from class <code>com.intellij.diff.actions.DocumentFragmentContent</code> to class <code>com.intellij.openapi.command.undo.UndoManager</code>"
        ]
    },
    {
        "id": 1157610,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "c41466b6fd11ef4edc40cb9fd42dc13cf4f6fde1",
        "author": "Darrell DeBoer",
        "time": "8/4/15 11:52 AM",
        "refactorings": [
            "<b>Inline Method</b> <code>public resolveMetaDataArtifact(artifact ModuleComponentArtifactMetaData, result ResourceAwareResolveResult) : LocallyAvailableExternalResource</code> inlined to <code>public resolveArtifact(artifact ModuleComponentArtifactMetaData, result ResourceAwareResolveResult) : LocallyAvailableExternalResource</code> in class <code>org.gradle.api.internal.artifacts.repositories.resolver.DefaultExternalResourceArtifactResolver</code>"
        ]
    },
    {
        "id": 1157680,
        "repository": "https://github.com/addthis/hydra.git",
        "sha1": "664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
        "author": "Matt Abrams",
        "time": "8/4/15 12:58 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public updateHits(state DataTreeNodeUpdater, path TreeDataParent) : boolean</code> extracted from <code>public updateChildData(state DataTreeNodeUpdater, path TreeDataParent) : void</code> in class <code>com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode</code>"
        ]
    },
    {
        "id": 1157057,
        "repository": "https://github.com/HdrHistogram/HdrHistogram.git",
        "sha1": "0e65ac4da70c6ca5c67bb8418e67db914218042f",
        "author": "Gil Tene",
        "time": "8/4/15 3:44 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getIntervalHistogram() : EncodableHistogram</code> extracted from <code>public run() : void</code> in class <code>org.HdrHistogram.HistogramLogProcessor</code>"
        ]
    },
    {
        "id": 1157168,
        "repository": "https://github.com/JoanZapata/android-iconify.git",
        "sha1": "b08f28a10d050beaba6250e9e9c46efe13d9caaa",
        "author": "Joan Zapata",
        "time": "8/4/15 6:55 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>android.widget</code> to <code>com.joanzapata.android.iconify.views</code>:<ul><li><code>IconButton</code></li><li><code>IconTextView</code></li><li><code>IconToggleButton</code></li></ul>"
        ]
    },
    {
        "id": 1157522,
        "repository": "https://github.com/hibernate/hibernate-orm.git",
        "sha1": "7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
        "author": "Janario Oliveira",
        "time": "8/4/15 11:50 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>org.hibernate.test.annotations.enumerated</code> to <code>org.hibernate.test.annotations.enumerated.custom_types</code>:<ul><li><code>FirstLetterType</code></li><li><code>LastNumberType</code></li></ul>"
        ]
    },
    {
        "id": 1157300,
        "repository": "https://github.com/github/android.git",
        "sha1": "c97659888126e43e95f0d52d22188bfe194a8439",
        "author": "Henri Sweers",
        "time": "8/5/15 4:34 AM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.github.mobile</code> to <code>com.github.pockethub</code>:<ul><li><code>DefaultClient</code></li><li><code>GitHubModule</code></li><li><code>Intents</code></li><li><code>RequestCodes</code></li><li><code>RequestFuture</code></li><li><code>RequestReader</code></li><li><code>RequestWriter</code></li><li><code>ResultCodes</code></li><li><code>ServicesModule</code></li><li><code>ThrowableLoader</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.accounts</code> to <code>com.github.pockethub.accounts</code>:<ul><li><code>AccountAuthenticator</code></li><li><code>AccountAuthenticatorService</code></li><li><code>AccountClient</code></li><li><code>AccountConstants</code></li><li><code>AccountScope</code></li><li><code>AccountUtils</code></li><li><code>AuthenticatedUserLoader</code></li><li><code>AuthenticatedUserTask</code></li><li><code>GitHubAccount</code></li><li><code>LoginActivity</code></li><li><code>LoginWebViewActivity</code></li><li><code>ScopeBase</code></li><li><code>TwoFactorAuthActivity</code></li><li><code>TwoFactorAuthClient</code></li><li><code>TwoFactorAuthException</code></li></ul>",
            "<b>Move Class</b> <code>GitHubClientV2</code> moved from <code>com.github.mobile.api</code> to <code>com.github.pockethub.api</code>",
            "<b>Move Classes</b> from <code>com.github.mobile.core</code> to <code>com.github.pockethub.core</code>:<ul><li><code>ItemStore</code></li><li><code>OnLoadListener</code></li><li><code>ResourcePager</code></li><li><code>UrlMatcher</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.core.code</code> to <code>com.github.pockethub.core.code</code>:<ul><li><code>FullTree</code></li><li><code>RefreshBlobTask</code></li><li><code>RefreshTreeTask</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.core.commit</code> to <code>com.github.pockethub.core.commit</code>:<ul><li><code>CommitCompareTask</code></li><li><code>CommitMatch</code></li><li><code>CommitPager</code></li><li><code>CommitStore</code></li><li><code>CommitUriMatcher</code></li><li><code>CommitUtils</code></li><li><code>FullCommit</code></li><li><code>FullCommitFile</code></li><li><code>RefreshCommitTask</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.core.gist</code> to <code>com.github.pockethub.core.gist</code>:<ul><li><code>FullGist</code></li><li><code>GistEventMatcher</code></li><li><code>GistPager</code></li><li><code>GistStore</code></li><li><code>GistUriMatcher</code></li><li><code>RefreshGistTask</code></li><li><code>StarGistTask</code></li><li><code>UnstarGistTask</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.core.issue</code> to <code>com.github.pockethub.core.issue</code>:<ul><li><code>FullIssue</code></li><li><code>IssueEventMatcher</code></li><li><code>IssueFilter</code></li><li><code>IssuePager</code></li><li><code>IssueStore</code></li><li><code>IssueUriMatcher</code></li><li><code>IssueUtils</code></li><li><code>RefreshIssueTask</code></li></ul>",
            "<b>Move Class</b> <code>RefUtils</code> moved from <code>com.github.mobile.core.ref</code> to <code>com.github.pockethub.core.ref</code>",
            "<b>Move Classes</b> from <code>com.github.mobile.core.repo</code> to <code>com.github.pockethub.core.repo</code>:<ul><li><code>DeleteRepositoryTask</code></li><li><code>ForkRepositoryTask</code></li><li><code>RefreshRepositoryTask</code></li><li><code>RepositoryEventMatcher</code></li><li><code>RepositoryUriMatcher</code></li><li><code>RepositoryUtils</code></li><li><code>StarRepositoryTask</code></li><li><code>StarredRepositoryTask</code></li><li><code>UnstarRepositoryTask</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.core.search</code> to <code>com.github.pockethub.core.search</code>:<ul><li><code>SearchUser</code></li><li><code>SearchUserService</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.core.user</code> to <code>com.github.pockethub.core.user</code>:<ul><li><code>FollowUserTask</code></li><li><code>FollowingUserTask</code></li><li><code>RefreshUserTask</code></li><li><code>UnfollowUserTask</code></li><li><code>UserComparator</code></li><li><code>UserEventMatcher</code></li><li><code>UserPager</code></li><li><code>UserUriMatcher</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.model</code> to <code>com.github.pockethub.model</code>:<ul><li><code>App</code></li><li><code>Authorization</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.persistence</code> to <code>com.github.pockethub.persistence</code>:<ul><li><code>AccountDataManager</code></li><li><code>CacheHelper</code></li><li><code>DatabaseCache</code></li><li><code>OrganizationRepositories</code></li><li><code>Organizations</code></li><li><code>PersistableResource</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.sync</code> to <code>com.github.pockethub.sync</code>:<ul><li><code>ContentProviderAdapter</code></li><li><code>SyncAdapter</code></li><li><code>SyncAdapterService</code></li><li><code>SyncCampaign</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.tests</code> to <code>com.github.pockethub.tests</code>:<ul><li><code>ActivityTest</code></li><li><code>FiltersViewActivityTest</code></li><li><code>NewsEventTextTest</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.tests.commit</code> to <code>com.github.pockethub.tests.commit</code>:<ul><li><code>CommitUriMatcherTest</code></li><li><code>CommitUtilsTest</code></li><li><code>CreateCommentActivityTest</code></li><li><code>DiffStylerTest</code></li><li><code>FullCommitTest</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.tests.gist</code> to <code>com.github.pockethub.tests.gist</code>:<ul><li><code>CreateCommentActivityTest</code></li><li><code>CreateGistActivityTest</code></li><li><code>GistFilesViewActivityTest</code></li><li><code>GistStoreTest</code></li><li><code>GistUriMatcherTest</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.tests.issue</code> to <code>com.github.pockethub.tests.issue</code>:<ul><li><code>CreateCommentActivityTest</code></li><li><code>EditIssueActivityTest</code></li><li><code>EditIssuesFilterActivityTest</code></li><li><code>IssueFilterTest</code></li><li><code>IssueStoreTest</code></li><li><code>IssueUriMatcherTest</code></li></ul>",
            "<b>Move Class</b> <code>RefUtilsTest</code> moved from <code>com.github.mobile.tests.ref</code> to <code>com.github.pockethub.tests.ref</code>",
            "<b>Move Classes</b> from <code>com.github.mobile.tests.repo</code> to <code>com.github.pockethub.tests.repo</code>:<ul><li><code>RecentRepositoriesTest</code></li><li><code>RepositoryEventMatcherTest</code></li><li><code>RepositoryUriMatcherTest</code></li><li><code>SearchActivityTest</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.tests.user</code> to <code>com.github.pockethub.tests.user</code>:<ul><li><code>LoginActivityTest</code></li><li><code>UserComparatorTest</code></li><li><code>UserUriMatcherTest</code></li></ul>",
            "<b>Move Class</b> <code>HtmlUtilsTest</code> moved from <code>com.github.mobile.tests.util</code> to <code>com.github.pockethub.tests.util</code>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui</code> to <code>com.github.pockethub.ui</code>:<ul><li><code>BaseActivity</code></li><li><code>CheckableRelativeLayout</code></li><li><code>ConfirmDialogFragment</code></li><li><code>DialogFragment</code></li><li><code>DialogFragmentActivity</code></li><li><code>DialogFragmentHelper</code></li><li><code>DialogResultListener</code></li><li><code>FragmentPagerAdapter</code></li><li><code>FragmentProvider</code></li><li><code>FragmentStatePagerAdapter</code></li><li><code>HeaderFooterListAdapter</code></li><li><code>ItemListFragment</code></li><li><code>LightAlertDialog</code></li><li><code>LightProgressDialog</code></li><li><code>MainActivity</code></li><li><code>MarkdownLoader</code></li><li><code>NavigationDrawerAdapter</code></li><li><code>NavigationDrawerFragment</code></li><li><code>NavigationDrawerObject</code></li><li><code>NewsFragment</code></li><li><code>PagedItemFragment</code></li><li><code>PagerActivity</code></li><li><code>PagerFragment</code></li><li><code>PatchedScrollingViewBehavior</code></li><li><code>ProgressDialogTask</code></li><li><code>ResourceLoadingIndicator</code></li><li><code>SelectableLinkMovementMethod</code></li><li><code>SingleChoiceDialogFragment</code></li><li><code>StyledText</code></li><li><code>TabPagerActivity</code></li><li><code>TabPagerFragment</code></li><li><code>TextWatcherAdapter</code></li><li><code>ViewPager</code></li><li><code>WebView</code></li></ul>",
            "<b>Move Class</b> <code>RepositoryCodeFragment</code> moved from <code>com.github.mobile.ui.code</code> to <code>com.github.pockethub.ui.code</code>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.comment</code> to <code>com.github.pockethub.ui.comment</code>:<ul><li><code>CommentListAdapter</code></li><li><code>CommentPreviewPagerAdapter</code></li><li><code>CreateCommentActivity</code></li><li><code>DeleteCommentListener</code></li><li><code>EditCommentListener</code></li><li><code>RawCommentFragment</code></li><li><code>RenderedCommentFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.commit</code> to <code>com.github.pockethub.ui.commit</code>:<ul><li><code>CommitCompareListFragment</code></li><li><code>CommitCompareViewActivity</code></li><li><code>CommitDiffListFragment</code></li><li><code>CommitFileComparator</code></li><li><code>CommitFileListAdapter</code></li><li><code>CommitFileViewActivity</code></li><li><code>CommitListAdapter</code></li><li><code>CommitListFragment</code></li><li><code>CommitPagerAdapter</code></li><li><code>CommitViewActivity</code></li><li><code>CreateCommentActivity</code></li><li><code>CreateCommentTask</code></li><li><code>DiffStyler</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.gist</code> to <code>com.github.pockethub.ui.gist</code>:<ul><li><code>CreateCommentActivity</code></li><li><code>CreateCommentTask</code></li><li><code>CreateGistActivity</code></li><li><code>CreateGistTask</code></li><li><code>DeleteCommentTask</code></li><li><code>DeleteGistTask</code></li><li><code>EditCommentActivity</code></li><li><code>EditCommentTask</code></li><li><code>GistFileFragment</code></li><li><code>GistFilesPagerAdapter</code></li><li><code>GistFilesViewActivity</code></li><li><code>GistFragment</code></li><li><code>GistListAdapter</code></li><li><code>GistQueriesPagerAdapter</code></li><li><code>GistsFragment</code></li><li><code>GistsPagerAdapter</code></li><li><code>GistsPagerFragment</code></li><li><code>GistsViewActivity</code></li><li><code>MyGistsFragment</code></li><li><code>PublicGistsFragment</code></li><li><code>RandomGistTask</code></li><li><code>StarredGistsFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.issue</code> to <code>com.github.pockethub.ui.issue</code>:<ul><li><code>AssigneeDialog</code></li><li><code>AssigneeDialogFragment</code></li><li><code>CreateCommentActivity</code></li><li><code>CreateCommentTask</code></li><li><code>CreateIssueTask</code></li><li><code>DashboardIssueFragment</code></li><li><code>DashboardIssueListAdapter</code></li><li><code>DeleteCommentTask</code></li><li><code>EditAssigneeTask</code></li><li><code>EditCommentActivity</code></li><li><code>EditCommentTask</code></li><li><code>EditIssueActivity</code></li><li><code>EditIssueTask</code></li><li><code>EditIssuesFilterActivity</code></li><li><code>EditLabelsTask</code></li><li><code>EditMilestoneTask</code></li><li><code>EditStateTask</code></li><li><code>FilterListAdapter</code></li><li><code>FilterListFragment</code></li><li><code>FiltersViewActivity</code></li><li><code>FiltersViewFragment</code></li><li><code>IssueBrowseActivity</code></li><li><code>IssueDashboardPagerAdapter</code></li><li><code>IssueDashboardPagerFragment</code></li><li><code>IssueFragment</code></li><li><code>IssueListAdapter</code></li><li><code>IssueSearchActivity</code></li><li><code>IssueSearchSuggestionsProvider</code></li><li><code>IssuesFragment</code></li><li><code>IssuesPagerAdapter</code></li><li><code>IssuesViewActivity</code></li><li><code>LabelDrawableSpan</code></li><li><code>LabelsDialog</code></li><li><code>LabelsDialogFragment</code></li><li><code>MilestoneDialog</code></li><li><code>MilestoneDialogFragment</code></li><li><code>RepositoryIssueListAdapter</code></li><li><code>SearchIssueListAdapter</code></li><li><code>SearchIssueListFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.ref</code> to <code>com.github.pockethub.ui.ref</code>:<ul><li><code>BranchFileViewActivity</code></li><li><code>CodeTreeAdapter</code></li><li><code>RefDialog</code></li><li><code>RefDialogFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.repo</code> to <code>com.github.pockethub.ui.repo</code>:<ul><li><code>ContributorListAdapter</code></li><li><code>DefaultRepositoryListAdapter</code></li><li><code>OrganizationLoader</code></li><li><code>RecentRepositories</code></li><li><code>RepositoryContributorsActivity</code></li><li><code>RepositoryContributorsFragment</code></li><li><code>RepositoryListAdapter</code></li><li><code>RepositoryListFragment</code></li><li><code>RepositoryNewsFragment</code></li><li><code>RepositoryPagerAdapter</code></li><li><code>RepositoryViewActivity</code></li><li><code>UserRepositoryListAdapter</code></li><li><code>UserRepositoryListFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.roboactivities</code> to <code>com.github.pockethub.ui.roboactivities</code>:<ul><li><code>ActionBarAccountAuthenticatorActivity</code></li><li><code>RoboActionBarAccountAuthenticatorActivity</code></li><li><code>RoboActionBarActivity</code></li><li><code>RoboSupportFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.search</code> to <code>com.github.pockethub.ui.search</code>:<ul><li><code>RepositorySearchSuggestionsProvider</code></li><li><code>SearchActivity</code></li><li><code>SearchPagerAdapter</code></li><li><code>SearchRepositoryListAdapter</code></li><li><code>SearchRepositoryListFragment</code></li><li><code>SearchUserListAdapter</code></li><li><code>SearchUserListFragment</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.ui.user</code> to <code>com.github.pockethub.ui.user</code>:<ul><li><code>EventPager</code></li><li><code>FollowersFragment</code></li><li><code>FollowingFragment</code></li><li><code>HomePagerAdapter</code></li><li><code>HomePagerFragment</code></li><li><code>IconAndViewTextManager</code></li><li><code>IconAndViewTextManagerTest</code></li><li><code>MembersFragment</code></li><li><code>MyFollowersFragment</code></li><li><code>MyFollowingFragment</code></li><li><code>NewsListAdapter</code></li><li><code>OrganizationNewsFragment</code></li><li><code>OrganizationSelectionListener</code></li><li><code>OrganizationSelectionProvider</code></li><li><code>PagedUserFragment</code></li><li><code>UriLauncherActivity</code></li><li><code>UserCreatedNewsFragment</code></li><li><code>UserFollowersFragment</code></li><li><code>UserFollowingFragment</code></li><li><code>UserListAdapter</code></li><li><code>UserNewsFragment</code></li><li><code>UserPagerAdapter</code></li><li><code>UserReceivedNewsFragment</code></li><li><code>UserViewActivity</code></li></ul>",
            "<b>Move Classes</b> from <code>com.github.mobile.util</code> to <code>com.github.pockethub.util</code>:<ul><li><code>AvatarLoader</code></li><li><code>GravatarUtils</code></li><li><code>HtmlUtils</code></li><li><code>HttpImageGetter</code></li><li><code>ImageUtils</code></li><li><code>MarkdownUtils</code></li><li><code>PreferenceUtils</code></li><li><code>ServiceUtils</code></li><li><code>ShareUtils</code></li><li><code>SourceEditor</code></li><li><code>TimeUtils</code></li><li><code>ToastUtils</code></li><li><code>TypefaceUtils</code></li></ul>"
        ]
    },
    {
        "id": 1158123,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "98ecc4cfd927f388645f6a6bc492c80868b1a11d",
        "author": "Dmitry Batkovich",
        "time": "8/5/15 12:07 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private getFileNamesToCreate() : Set&lt;String&gt;</code> extracted from <code>private createPropertiesFiles() : List&lt;PsiFile&gt;</code> in class <code>com.intellij.lang.properties.create.CreateResourceBundleDialogComponent</code>"
        ]
    },
    {
        "id": 1159151,
        "repository": "https://github.com/neo4j/neo4j.git",
        "sha1": "e0072aac53b3b88de787e7ca653c7e17f9499018",
        "author": "Nigel Small",
        "time": "8/5/15 12:32 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private unpackBytesHeader() : int</code> extracted from <code>public unpackBytes() : byte[]</code> in class <code>org.neo4j.packstream.PackStream.Unpacker</code>"
        ]
    },
    {
        "id": 1158121,
        "repository": "https://github.com/JetBrains/intellij-community.git",
        "sha1": "61215911ef28ca783c5106d7c01e74cf3000a866",
        "author": "Konstantin Kolosovsky",
        "time": "8/5/15 1:03 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public format(path String, pegRevision SVNRevision) : String</code> extracted from <code>public put(parameters List&lt;String&gt;, path String, pegRevision SVNRevision) : void</code> in class <code>org.jetbrains.idea.svn.commandLine.CommandUtil</code>"
        ]
    },
    {
        "id": 1158716,
        "repository": "https://github.com/gradle/gradle.git",
        "sha1": "44aab6242f8c93059612c953af950eb1870e0774",
        "author": "Adrian Kelly",
        "time": "8/5/15 1:14 PM",
        "refactorings": [
            "<b>Extract Interface</b> <code>org.gradle.internal.file.RelativeFilePathResolver</code> from type <code>org.gradle.api.internal.file.FileResolver</code>"
        ]
    },
    {
        "id": 1158352,
        "repository": "https://github.com/Netflix/genie.git",
        "sha1": "b77de40c0f3dd43a16f2491558594a61682271fc",
        "author": "Tom Gianos",
        "time": "8/5/15 5:47 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>com.netflix.genie.server.health</code> to <code>com.netflix.genie.web.health</code>:<ul><li><code>HealthCheck</code></li><li><code>TestHealthCheck</code></li></ul>",
            "<b>Move Classes</b> from <code>com.netflix.genie.server.startup</code> to <code>com.netflix.genie.web.startup</code>:<ul><li><code>GenieApplication</code></li><li><code>TestGenieApplication</code></li></ul>"
        ]
    },
    {
        "id": 1158913,
        "repository": "https://github.com/geoserver/geoserver.git",
        "sha1": "e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
        "author": "Stefano Costa",
        "time": "8/5/15 7:22 PM",
        "refactorings": [
            "<b>Extract Superclass</b> <code>org.geoserver.ogr.core.AbstractToolConfigurator</code> from class <code>org.geoserver.wfs.response.Ogr2OgrConfigurator</code>",
            "<b>Extract Superclass</b> <code>org.geoserver.ogr.core.AbstractToolWrapper</code> from class <code>org.geoserver.wfs.response.OGRWrapper</code>",
            "<b>Extract Superclass</b> <code>org.geoserver.ogr.core.Format</code> from class <code>org.geoserver.wfs.response.OgrFormat</code>",
            "<b>Extract Superclass</b> <code>org.geoserver.ogr.core.ToolConfiguration</code> from class <code>org.geoserver.wfs.response.OgrConfiguration</code>"
        ]
    },
    {
        "id": 1158180,
        "repository": "https://github.com/wildfly/wildfly.git",
        "sha1": "bf35b533f067b51d4c373c5e5124d88525db99f3",
        "author": "James Perkins",
        "time": "8/5/15 7:32 PM",
        "refactorings": [
            "<b>Move Class</b> <code>JobXmlFilter</code> moved from <code>org.wildfly.extension.batch.jberet.deployment.BatchEnvironmentProcessor</code> to <code>org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver</code>"
        ]
    },
    {
        "id": 1157971,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "153611deab149accd8aeaf03fd102c0b069bd322",
        "author": "Roman Birg",
        "time": "8/5/15 9:45 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public of(cells Cell[][], row int, column int, size byte) : Cell</code> extracted from <code>public of(row int, column int, size byte) : Cell</code> in class <code>com.android.internal.widget.LockPatternView.Cell</code>",
            "<b>Extract Method</b> <code>public stringToPattern(string String, size byte) : List&lt;LockPatternView.Cell&gt;</code> extracted from <code>public stringToPattern(string String) : List&lt;LockPatternView.Cell&gt;</code> in class <code>com.android.internal.widget.LockPatternUtils</code>"
        ]
    },
    {
        "id": 1159637,
        "repository": "https://github.com/JetBrains/MPS.git",
        "sha1": "61b5decd4a4e5e6bbdea99eb76f136ca10915b73",
        "author": "Alexander Shatalin",
        "time": "8/6/15 5:14 AM",
        "refactorings": [
            "<b>Extract Method</b> <code>public startInsertMode(editorContext EditorContext, anchorCell EditorCell, insertBefore boolean) : void</code> extracted from <code>public insertNewChild(editorContext EditorContext, anchorCell EditorCell, insertBefore boolean) : void</code> in class <code>jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler</code>"
        ]
    },
    {
        "id": 1158457,
        "repository": "https://github.com/jayway/rest-assured.git",
        "sha1": "7cac88b9a28efc05bdc60e585e3291862ffc9da1",
        "author": "Johan Haleby",
        "time": "8/6/15 5:44 AM",
        "refactorings": [
            "<b>Move Multiple Methods</b> from class <code>com.jayway.restassured.itest.java.SpecificationBuilderITest</code> to <code>com.jayway.restassured.itest.java.SSLITest</code>:<ul><li><code>public supportsOverridingKeystore() : void</code></li><li><code>public supportsSpecifyingKeystore() : void</code></li></ul>"
        ]
    },
    {
        "id": 1159409,
        "repository": "https://github.com/ignatov/intellij-erlang.git",
        "sha1": "e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
        "author": "Alexandra Vesloguzova",
        "time": "8/6/15 12:37 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType&lt;?&gt;) : VirtualFile</code> extracted from <code>private addSourceRoot(module Module, sourceRootName String, isTestSourceRoot boolean) : VirtualFile</code> in class <code>org.intellij.erlang.compilation.ErlangCompilationTestBase</code>",
            "<b>Extract Method</b> <code>private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor&lt;VirtualFile&gt;) : void</code> extracted from <code>private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection&lt;ErlangFile&gt;) : Collection&lt;ErlangFile&gt;</code> in class <code>org.intellij.erlang.utils.ErlangModulesUtil</code>"
        ]
    },
    {
        "id": 1159836,
        "repository": "https://github.com/apache/hive.git",
        "sha1": "8398fbf3dd0937a0a4a3d540977a95f97425f566",
        "author": "Jimmy Xiang",
        "time": "8/6/15 1:00 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public closeSparkSession() : void</code> extracted from <code>public close() : void</code> in class <code>org.apache.hadoop.hive.ql.session.SessionState</code>"
        ]
    },
    {
        "id": 1159198,
        "repository": "https://github.com/xetorthio/jedis.git",
        "sha1": "6c3dde45e8cbd0c1fa73072fad7610275afc6240",
        "author": "Marcos Lilljedahl",
        "time": "8/6/15 2:15 PM",
        "refactorings": [
            "<b>Move Classes</b> from <code>redis.clients.jedis</code> to <code>redis.clients.jedis.commands</code>:<ul><li><code>AdvancedBinaryJedisCommands</code></li><li><code>AdvancedJedisCommands</code></li><li><code>BasicCommands</code></li><li><code>BasicRedisPipeline</code></li><li><code>BinaryJedisClusterCommands</code></li><li><code>BinaryJedisCommands</code></li><li><code>BinaryRedisPipeline</code></li><li><code>BinaryScriptingCommands</code></li><li><code>BinaryScriptingCommandsPipeline</code></li><li><code>ClusterCommands</code></li><li><code>ClusterPipeline</code></li><li><code>Commands</code></li><li><code>JedisClusterBinaryScriptingCommands</code></li><li><code>JedisClusterCommands</code></li><li><code>JedisClusterScriptingCommands</code></li><li><code>JedisCommands</code></li><li><code>MultiKeyBinaryCommands</code></li><li><code>MultiKeyBinaryJedisClusterCommands</code></li><li><code>MultiKeyBinaryRedisPipeline</code></li><li><code>MultiKeyCommands</code></li><li><code>MultiKeyCommandsPipeline</code></li><li><code>MultiKeyJedisClusterCommands</code></li><li><code>ProtocolCommand</code></li><li><code>ScriptingCommands</code></li><li><code>ScriptingCommandsPipeline</code></li><li><code>SentinelCommands</code></li></ul>"
        ]
    },
    {
        "id": 1159300,
        "repository": "https://github.com/spotify/helios.git",
        "sha1": "cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
        "author": "Tom Geiger",
        "time": "8/6/15 2:22 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected createJobRawOutput(job Job) : String</code> extracted from <code>protected createJob(job Job) : JobId</code> in class <code>com.spotify.helios.system.SystemTestBase</code>"
        ]
    },
    {
        "id": 1158923,
        "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
        "sha1": "f1b8ae1c44e6ba46118c2f66eae1725259acdccc",
        "author": "Roman Birg",
        "time": "8/6/15 3:00 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public of(cells Cell[][], row int, column int, size byte) : Cell</code> extracted from <code>public of(row int, column int, size byte) : Cell</code> in class <code>com.android.internal.widget.LockPatternView.Cell</code>",
            "<b>Extract Method</b> <code>public stringToPattern(string String, size byte) : List&lt;LockPatternView.Cell&gt;</code> extracted from <code>public stringToPattern(string String) : List&lt;LockPatternView.Cell&gt;</code> in class <code>com.android.internal.widget.LockPatternUtils</code>"
        ]
    },
    {
        "id": 1159696,
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
        "author": "Craig Andrews",
        "time": "8/6/15 5:08 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private assertExistsAndReturn(content String) : Object</code> extracted from <code>public exists(content String) : void</code> in class <code>org.springframework.test.util.JsonPathExpectationsHelper</code>"
        ]
    },
    {
        "id": 1159760,
        "repository": "https://github.com/liferay/liferay-plugins.git",
        "sha1": "720b0d2064ecc4403809e794075e9fe8cfa857f1",
        "author": "samanzanedo",
        "time": "8/6/15 6:31 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>protected validate(titleMap Map&lt;Locale,String&gt;, startTimeJCalendar Calendar, endTimeJCalendar Calendar, untilJCalendar Calendar) : void</code> extracted from <code>protected validate(titleMap Map&lt;Locale,String&gt;, startTimeJCalendar Calendar, endTimeJCalendar Calendar) : void</code> in class <code>com.liferay.calendar.service.impl.CalendarBookingLocalServiceImpl</code>"
        ]
    },
    {
        "id": 1159266,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "8d14e557e01cc607dd2db66c29d106ef01aa81f7",
        "author": "Ben Hamilton",
        "time": "8/6/15 7:42 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>public get(buildTarget BuildTarget, eventBus Optional&lt;BuckEventBus&gt;) : TargetNode&lt;?&gt;</code> extracted from <code>public get(buildTarget BuildTarget) : TargetNode&lt;?&gt;</code> in class <code>com.facebook.buck.parser.Parser.CachedState</code>"
        ]
    },
    {
        "id": 1159248,
        "repository": "https://github.com/facebook/buck.git",
        "sha1": "89973a5e4f188040c5fcf87fb5a3e9167329d175",
        "author": "Mark Wang",
        "time": "8/6/15 7:45 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private installAppleBundleForSimulator(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult</code> extracted from <code>private installAppleBundle(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult</code> in class <code>com.facebook.buck.cli.InstallCommand</code>"
        ]
    },
    {
        "id": 1158974,
        "repository": "https://github.com/VoltDB/voltdb.git",
        "sha1": "cfc54e8afa7ee7d5376525a84559e90b21487ccf",
        "author": "Qingyang",
        "time": "8/6/15 9:21 PM",
        "refactorings": [
            "<b>Extract Method</b> <code>private resetLeader() : void</code> extracted from <code>public run() : void</code> in class <code>org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher</code>"
        ]
    }
]